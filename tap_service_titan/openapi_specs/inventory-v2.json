{
    "openapi": "3.0.1",
    "info": {
        "title": "Inventory",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api-integration.servicetitan.io/inventory/v2"
        }
    ],
    "paths": {
        "/tenant/{tenant}/adjustments": {
            "get": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Get a list of inventory adjustments",
                "description": "Get a list of inventory adjustments",
                "operationId": "Adjustments_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "referenceNumber",
                        "in": "query",
                        "description": "Reference number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "batchId",
                        "in": "query",
                        "description": "BatchId filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "invoiceIds",
                        "in": "query",
                        "description": "Filter by a collection of invoice Ids",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "inventoryLocationIds",
                        "in": "query",
                        "description": "Filter by a collection of inventory location Ids",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "adjustmentTypes",
                        "in": "query",
                        "description": "Filter by a collection of adjustment types",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "businessUnitIds",
                        "in": "query",
                        "description": "Filter by a collection of business unit Ids",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "syncStatuses",
                        "in": "query",
                        "description": "Filter by a collection of sync statues",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Fields",
                        "in": "query",
                        "description": "Collection of custom field pairs (name, value) to filter by",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Operator",
                        "in": "query",
                        "description": "Can be \"Or\" or \"And\"\\\nValues: [And, Or]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Inventory.V2.LogicalOperator"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateOnOrAfter",
                        "in": "query",
                        "description": "Return adjustments with date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateBefore",
                        "in": "query",
                        "description": "Return adjustments with date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.InventoryAdjustmentResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "type": "string",
                                            "inventoryLocationId": 0,
                                            "businessUnitId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "date": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "canceledReason": {},
                                            "canceledById": 0,
                                            "dateCanceled": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "createdById": 0,
                                                    "active": true,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/adjustments/{id}": {
            "patch": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Update an existing adjustment",
                "description": "Update an existing adjustment",
                "operationId": "Adjustments_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Adjustment Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Adjustment Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateAdjustmentRequest"
                            },
                            "example": {
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Adjustment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/adjustments/custom-fields": {
            "patch": {
                "tags": [
                    "Adjustments"
                ],
                "summary": "Update custom fields on adjustments",
                "description": "Update custom fields on adjustments",
                "operationId": "Adjustments_UpdateCustomFields",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CustomFieldUpdateRequest"
                            },
                            "example": {
                                "operations": [
                                    {
                                        "objectId": 0,
                                        "customFields": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/adjustments": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for adjustments",
                "description": "Provides export feed for adjustments",
                "operationId": "Export_Adjustments",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Inventory.V2.ExportAdjustmentsResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "type": "string",
                                            "inventoryLocationId": 0,
                                            "businessUnitId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "date": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "canceledReason": {},
                                            "canceledById": 0,
                                            "dateCanceled": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "createdById": 0,
                                                    "active": true,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/purchase-orders": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for purchase orders",
                "description": "Provides export feed for purchase orders",
                "operationId": "Export_PurchaseOrders",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Inventory.V2.ExportPurchaseOrdersResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "number": "string",
                                            "invoiceId": 0,
                                            "jobId": 0,
                                            "projectId": 0,
                                            "status": "string",
                                            "typeId": 0,
                                            "vendorId": 0,
                                            "technicianId": 0,
                                            "shipTo": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "businessUnitId": 0,
                                            "inventoryLocationId": 0,
                                            "batchId": 0,
                                            "budgetCodeId": 0,
                                            "vendorDocumentNumber": "string",
                                            "date": "string",
                                            "requiredOn": "string",
                                            "sentOn": "string",
                                            "receivedOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "total": 0,
                                            "tax": 0,
                                            "shipping": 0,
                                            "summary": "string",
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "skuName": "string",
                                                    "skuCode": "string",
                                                    "skuType": "string",
                                                    "vendorPartNumber": "string",
                                                    "quantity": 0,
                                                    "quantityReceived": 0,
                                                    "cost": 0,
                                                    "total": 0,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "status": "string",
                                                    "chargeable": true,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/returns": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for returns",
                "description": "Provides export feed for returns",
                "operationId": "Export_Returns",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Inventory.V2.ExportReturnsResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "status": {},
                                            "vendorId": 0,
                                            "purchaseOrderId": 0,
                                            "jobId": 0,
                                            "projectId": 0,
                                            "budgetCodeId": 0,
                                            "businessUnitId": 0,
                                            "inventoryLocationId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "returnAmount": 0,
                                            "taxAmount": 0,
                                            "shippingAmount": 0,
                                            "returnDate": "string",
                                            "returnedOn": "string",
                                            "creditReceivedOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "canceledById": 0,
                                            "canceledReason": {},
                                            "dateCanceled": "string",
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "cost": 0,
                                                    "generalLedgerAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "costOfSaleAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "assetAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "createdById": 0,
                                                    "active": true,
                                                    "receiptItemId": 0,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/transfers": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for transfers",
                "description": "Provides export feed for transfers",
                "operationId": "Export_Transfers",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Inventory.V2.ExportTransfersResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "transferType": "string",
                                            "status": "string",
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "fromLocationId": 0,
                                            "toLocationId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "date": "string",
                                            "pickedDate": "string",
                                            "receivedDate": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "dateRequired": "string",
                                            "jobId": 0,
                                            "invoiceId": 0,
                                            "canceledById": 0,
                                            "canceledReason": {},
                                            "dateCanceled": "string",
                                            "active": true,
                                            "pickedById": 0,
                                            "receivedById": 0,
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "quantityPicked": 0,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "createdById": 0,
                                                    "active": true
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders": {
            "post": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Create a new purchase order",
                "description": "Create a new purchase order",
                "operationId": "PurchaseOrders_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CreatePurchaseOrderRequest"
                            },
                            "example": {
                                "vendorId": 0,
                                "typeId": 0,
                                "businessUnitId": 0,
                                "inventoryLocationId": 0,
                                "jobId": 0,
                                "technicianId": 0,
                                "projectId": 0,
                                "budgetCodeId": 0,
                                "shipTo": {
                                    "description": "string",
                                    "address": {
                                        "street": "string",
                                        "unit": "string",
                                        "city": "string",
                                        "state": "string",
                                        "zip": "string",
                                        "country": "string"
                                    }
                                },
                                "vendorInvoiceNumber": "string",
                                "impactsTechnicianPayroll": true,
                                "memo": "string",
                                "date": "string",
                                "requiredOn": "string",
                                "tax": 0,
                                "shipping": 0,
                                "items": [
                                    {
                                        "skuId": 0,
                                        "description": "string",
                                        "vendorPartNumber": "string",
                                        "quantity": 0,
                                        "cost": 0,
                                        "budgetCodeId": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Get a list of purchase orders",
                "description": "Get a list of purchase orders",
                "operationId": "PurchaseOrders_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filters by PO status\n\\\nAvailable values are: Pending, Sent, PartiallyReceived, Received, Exported, Canceled",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Filters by PO number ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "query",
                        "description": "Filters by JobId associated with PO",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobIds",
                        "in": "query",
                        "description": "Filters by JobIds associated with PO",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "technicianId",
                        "in": "query",
                        "description": "Filter by TechnicianId associated with PO",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Filter by ProjectId associated with PO",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateOnOrAfter",
                        "in": "query",
                        "description": "Return POs with date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateBefore",
                        "in": "query",
                        "description": "Return POs with date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sentOnOrAfter",
                        "in": "query",
                        "description": "Return POs sent on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sentBefore",
                        "in": "query",
                        "description": "Return POs sent before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.PurchaseOrderResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "number": "string",
                                            "invoiceId": 0,
                                            "jobId": 0,
                                            "projectId": 0,
                                            "status": "string",
                                            "typeId": 0,
                                            "vendorId": 0,
                                            "technicianId": 0,
                                            "shipTo": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "businessUnitId": 0,
                                            "inventoryLocationId": 0,
                                            "batchId": 0,
                                            "budgetCodeId": 0,
                                            "vendorDocumentNumber": "string",
                                            "date": "string",
                                            "requiredOn": "string",
                                            "sentOn": "string",
                                            "receivedOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "total": 0,
                                            "tax": 0,
                                            "shipping": 0,
                                            "summary": "string",
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "skuName": "string",
                                                    "skuCode": "string",
                                                    "skuType": "string",
                                                    "vendorPartNumber": "string",
                                                    "quantity": 0,
                                                    "quantityReceived": 0,
                                                    "cost": 0,
                                                    "total": 0,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "status": "string",
                                                    "chargeable": true,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders/requests": {
            "get": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Get a list of purchase order requests",
                "description": "Get a list of purchase order requests",
                "operationId": "PurchaseOrders_GetRequests",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "requestStatus",
                        "in": "query",
                        "description": "Filters by PO request status\nAvailable values are: PendingApproval, Rejected\\\nValues: [PendingApproval, Approved, Rejected]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderRequestStatus"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "requestNumber",
                        "in": "query",
                        "description": "Filters by PO request number ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "query",
                        "description": "Filters by JobId associated with PO request",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobIds",
                        "in": "query",
                        "description": "Filters by JobIds associated with PO request",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "technicianId",
                        "in": "query",
                        "description": "Filter by TechnicianId associated with PO request",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Filter by ProjectId associated with PO request",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateOnOrAfter",
                        "in": "query",
                        "description": "Return PO requests with date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateBefore",
                        "in": "query",
                        "description": "Return PO requests with date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.PurchaseOrderRequestResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "requestNumber": "string",
                                            "requestStatus": "string",
                                            "invoiceId": 0,
                                            "jobId": 0,
                                            "projectId": 0,
                                            "typeId": 0,
                                            "vendorId": 0,
                                            "technicianId": 0,
                                            "shipTo": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "businessUnitId": 0,
                                            "inventoryLocationId": 0,
                                            "batchId": 0,
                                            "vendorDocumentNumber": "string",
                                            "date": "string",
                                            "requiredOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "total": 0,
                                            "tax": 0,
                                            "shipping": 0,
                                            "summary": "string",
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "skuName": "string",
                                                    "skuCode": "string",
                                                    "skuType": "string",
                                                    "vendorPartNumber": "string",
                                                    "quantity": 0,
                                                    "quantityReceived": 0,
                                                    "cost": 0,
                                                    "total": 0,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "status": "string",
                                                    "chargeable": true,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders/{id}": {
            "get": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Get purchase order by Id",
                "description": "Get purchase order by Id",
                "operationId": "PurchaseOrders_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "number": "string",
                                    "invoiceId": 0,
                                    "jobId": 0,
                                    "projectId": 0,
                                    "status": "string",
                                    "typeId": 0,
                                    "vendorId": 0,
                                    "technicianId": 0,
                                    "shipTo": {
                                        "street": "string",
                                        "unit": "string",
                                        "city": "string",
                                        "state": "string",
                                        "zip": "string",
                                        "country": "string"
                                    },
                                    "businessUnitId": 0,
                                    "inventoryLocationId": 0,
                                    "batchId": 0,
                                    "budgetCodeId": 0,
                                    "vendorDocumentNumber": "string",
                                    "date": "string",
                                    "requiredOn": "string",
                                    "sentOn": "string",
                                    "receivedOn": "string",
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "total": 0,
                                    "tax": 0,
                                    "shipping": 0,
                                    "summary": "string",
                                    "items": [
                                        {
                                            "id": 0,
                                            "skuId": 0,
                                            "description": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "skuName": "string",
                                            "skuCode": "string",
                                            "skuType": "string",
                                            "vendorPartNumber": "string",
                                            "quantity": 0,
                                            "quantityReceived": 0,
                                            "cost": 0,
                                            "total": 0,
                                            "serialNumbers": [
                                                {
                                                    "id": 0,
                                                    "number": "string"
                                                }
                                            ],
                                            "status": "string",
                                            "chargeable": true,
                                            "budgetCodeId": 0
                                        }
                                    ],
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Update an existing purchase order",
                "description": "Update an existing purchase order",
                "operationId": "PurchaseOrders_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdatePurchaseOrderRequest"
                            },
                            "example": {
                                "vendorId": 0,
                                "typeId": 0,
                                "businessUnitId": 0,
                                "inventoryLocationId": 0,
                                "jobId": 0,
                                "technicianId": 0,
                                "projectId": 0,
                                "budgetCodeId": 0,
                                "shipTo": {
                                    "description": "string",
                                    "address": {
                                        "street": "string",
                                        "unit": "string",
                                        "city": "string",
                                        "state": "string",
                                        "zip": "string",
                                        "country": "string"
                                    }
                                },
                                "vendorInvoiceNumber": "string",
                                "impactsTechnicianPayroll": true,
                                "memo": "string",
                                "date": "string",
                                "requiredOn": "string",
                                "tax": 0,
                                "shipping": 0,
                                "items": [
                                    {
                                        "id": 0,
                                        "skuId": 0,
                                        "description": "string",
                                        "vendorPartNumber": "string",
                                        "quantity": 0,
                                        "cost": 0,
                                        "budgetCodeId": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders/{id}/cancellation": {
            "patch": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Cancel a purchase order",
                "description": "Cancel a purchase order",
                "operationId": "PurchaseOrders_Cancel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Return Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Cancel purchase order Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CancelResourceRequest_Of_Inventory.V2.PurchaseOrderCancellationReason"
                            },
                            "example": {
                                "canceledReason": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the cancelled purchase order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders/requests/{id}/approve": {
            "patch": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Approve purchase order request",
                "description": "Approve purchase order request",
                "operationId": "PurchaseOrders_ApproveRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-orders/requests/{id}/reject": {
            "patch": {
                "tags": [
                    "PurchaseOrders"
                ],
                "summary": "Reject purchase order request",
                "description": "Reject purchase order request",
                "operationId": "PurchaseOrders_RejectRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Existing PoRequest Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Rejection reason",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderRequestRejectionArgs"
                            },
                            "example": {
                                "rejectionReason": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-order-markups": {
            "get": {
                "tags": [
                    "PurchaseOrdersMarkup"
                ],
                "summary": "Get a list of purchase order markups",
                "description": "Get a list of purchase order markups",
                "operationId": "PurchaseOrdersMarkup_Get",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, From, To, Percent",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.Markups.PurchaseOrderMarkupResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "from": 0,
                                            "to": 0,
                                            "percent": 0,
                                            "id": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PurchaseOrdersMarkup"
                ],
                "summary": "Create a new purchase order markup",
                "description": "Create a new purchase order markup",
                "operationId": "PurchaseOrdersMarkup_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.Markups.CreatePurchaseOrderMarkupRequest"
                            },
                            "example": {
                                "from": 0,
                                "to": 0,
                                "percent": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.V2.Markups.PurchaseOrderMarkupResponse"
                                },
                                "example": {
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "from": 0,
                                    "to": 0,
                                    "percent": 0,
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-order-markups/{id}": {
            "get": {
                "tags": [
                    "PurchaseOrdersMarkup"
                ],
                "summary": "Get purchase order markup by Id",
                "description": "Get purchase order markup by Id",
                "operationId": "PurchaseOrdersMarkup_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.V2.Markups.PurchaseOrderMarkupResponse"
                                },
                                "example": {
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "from": 0,
                                    "to": 0,
                                    "percent": 0,
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "PurchaseOrdersMarkup"
                ],
                "summary": "Update an existing purchase order markup",
                "description": "Update an existing purchase order markup",
                "operationId": "PurchaseOrdersMarkup_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.Markups.UpdatePurchaseOrderMarkupRequest"
                            },
                            "example": {
                                "from": 0,
                                "to": 0,
                                "percent": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.V2.Markups.PurchaseOrderMarkupResponse"
                                },
                                "example": {
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "from": 0,
                                    "to": 0,
                                    "percent": 0,
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PurchaseOrdersMarkup"
                ],
                "summary": "Deletes aan existing purchase order markup.",
                "description": "Deletes aan existing purchase order markup.",
                "operationId": "PurchaseOrdersMarkup_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Markup was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-order-types": {
            "post": {
                "tags": [
                    "PurchaseOrderTypes"
                ],
                "summary": "Create a new Purchase Order Type",
                "description": "Create a new Purchase Order Type",
                "operationId": "PurchaseOrderTypes_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request object to create a Purchase Order Type.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CreatePurchaseOrderTypeRequest"
                            },
                            "example": {
                                "name": "string",
                                "active": true,
                                "includeInPoScreen": true,
                                "automaticallyReceive": true,
                                "displayToTechnician": true,
                                "excludeTaxFromJobCosting": true,
                                "impactToTechnicianPayroll": true,
                                "allowTechniciansToSendPo": true,
                                "defaultRequiredDateDaysOffset": 0,
                                "skipWeekends": true,
                                "includeInSalesTax": true,
                                "isDefault": true,
                                "copyPurchaseOrderItemsToInvoiceWhenReceived": true,
                                "isDefaultForConsignment": true,
                                "alertSettings": {
                                    "sendEmailToTechnicianWhenPoMovedToSend": true,
                                    "sendEmailToTechnicianWhenPoMovedToReceived": true,
                                    "sendEmailToPmWhenPoMovedToSend": true,
                                    "sendEmailToPmWhenPoMovedToReceived": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the newly created Purchase Order Type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "PurchaseOrderTypes"
                ],
                "summary": "Get a list of purchase order types",
                "description": "Get a list of purchase order types",
                "operationId": "PurchaseOrderTypes_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.PurchaseOrderTypeResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "automaticallyReceive": true,
                                            "displayToTechnician": true,
                                            "impactToTechnicianPayroll": true,
                                            "allowTechniciansToSendPo": true,
                                            "defaultRequiredDateDaysOffset": 0,
                                            "skipWeekends": true,
                                            "excludeTaxFromJobCosting": true,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/purchase-order-types/{id}": {
            "patch": {
                "tags": [
                    "PurchaseOrderTypes"
                ],
                "summary": "Update an existing purchase order type",
                "description": "Update an existing purchase order type",
                "operationId": "PurchaseOrderTypes_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdatePurchaseOrderTypeRequest"
                            },
                            "example": {
                                "active": true,
                                "name": "string",
                                "includeInPoScreen": true,
                                "automaticallyReceive": true,
                                "displayToTechnician": true,
                                "excludeTaxFromJobCosting": true,
                                "impactToTechnicianPayroll": true,
                                "allowTechniciansToSendPo": true,
                                "defaultRequiredDateDaysOffset": 0,
                                "skipWeekends": true,
                                "includeInSalesTax": true,
                                "isDefault": true,
                                "copyPurchaseOrderItemsToInvoiceWhenReceived": true,
                                "isDefaultForConsignment": true,
                                "alertSettings": {
                                    "sendEmailToTechnicianWhenPoMovedToSend": true,
                                    "sendEmailToTechnicianWhenPoMovedToReceived": true,
                                    "sendEmailToPmWhenPoMovedToSend": true,
                                    "sendEmailToPmWhenPoMovedToReceived": true
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/receipts": {
            "get": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Get a list of receipts",
                "description": "Get a list of receipts",
                "operationId": "Receipts_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "vendorInvoiceNumber",
                        "in": "query",
                        "description": "Vendor invoice number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "billId",
                        "in": "query",
                        "description": "BillId filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "batchId",
                        "in": "query",
                        "description": "BatchId filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "vendorIds",
                        "in": "query",
                        "description": "Filter by a collection of vendors",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "businessUnitIds",
                        "in": "query",
                        "description": "Filter by a collection of business units",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "inventoryLocationIds",
                        "in": "query",
                        "description": "Filter by a collection of inventory locations",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "purchaseOrderIds",
                        "in": "query",
                        "description": "Filter by a collection of purchase orders",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "syncStatuses",
                        "in": "query",
                        "description": "Filter by a collection of sync statuses",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Fields",
                        "in": "query",
                        "description": "Collection of custom field pairs (name, value) to filter by",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Operator",
                        "in": "query",
                        "description": "Can be \"Or\" or \"And\"\\\nValues: [And, Or]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Inventory.V2.LogicalOperator"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "receivedOnOrAfter",
                        "in": "query",
                        "description": "Return receipts with received date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "receivedBefore",
                        "in": "query",
                        "description": "Return receipts with received date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.InventoryReceiptResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "number": "string",
                                            "vendorInvoiceNumber": "string",
                                            "createdById": 0,
                                            "memo": "string",
                                            "purchaseOrderId": 0,
                                            "billId": 0,
                                            "jobId": 0,
                                            "businessUnitId": 0,
                                            "vendorId": 0,
                                            "technicianId": 0,
                                            "inventoryLocationId": 0,
                                            "shipTo": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "shipToDescription": "string",
                                            "receiptAmount": 0,
                                            "taxAmount": 0,
                                            "shippingAmount": 0,
                                            "receivedOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "syncStatus": {},
                                            "budgetCodeId": 0,
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "name": "string",
                                                    "code": "string",
                                                    "description": "string",
                                                    "quantity": 0,
                                                    "cost": 0,
                                                    "generalLedgerAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "costOfSaleAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "assetAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "purchaseOrderItemId": 0,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Create a receipt for Purchase Order",
                "description": "Create a receipt for Purchase Order",
                "operationId": "Receipts_CreateReceipt",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request object to create a Purchase Order Receipt.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.ReceivePurchaseOrderRequest"
                            },
                            "example": {
                                "purchaseOrderId": 0,
                                "dateReceived": "string",
                                "vendorDocumentNumber": "string",
                                "memo": "string",
                                "tax": 0,
                                "shipping": 0,
                                "budgetCodeId": 0,
                                "items": [
                                    {
                                        "purchaseOrderItemId": 0,
                                        "skuId": 0,
                                        "description": "string",
                                        "vendorPartNumber": "string",
                                        "quantity": 0,
                                        "cost": 0,
                                        "budgetCodeId": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the newly created Receipt",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/receipts/custom-fields": {
            "patch": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Update custom fields on receipts",
                "description": "Update custom fields on receipts",
                "operationId": "Receipts_UpdateCustomFields",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CustomFieldUpdateRequest"
                            },
                            "example": {
                                "operations": [
                                    {
                                        "objectId": 0,
                                        "customFields": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/receipts/{id}/cancellation": {
            "patch": {
                "tags": [
                    "Receipts"
                ],
                "summary": "Cancel the receipts",
                "description": "Cancel the receipts",
                "operationId": "Receipts_CancelReceipts",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CancelResourceRequest_Of_Inventory.V2.ReceiptCancellationReason"
                            },
                            "example": {
                                "canceledReason": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/returns": {
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get a list of returns",
                "description": "Get a list of returns",
                "operationId": "Returns_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "referenceNumber",
                        "in": "query",
                        "description": "Reference number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "query",
                        "description": "Job filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase order filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "batchId",
                        "in": "query",
                        "description": "Batch filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "vendorIds",
                        "in": "query",
                        "description": "Filter by a collection of vendors",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "businessUnitIds",
                        "in": "query",
                        "description": "Filter by a collection of business units",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "inventoryLocationIds",
                        "in": "query",
                        "description": "Filter by a collection of inventory locations",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "syncStatuses",
                        "in": "query",
                        "description": "Filter by a collection of sync statuses",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Fields",
                        "in": "query",
                        "description": "Collection of custom field pairs (name, value) to filter by",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Operator",
                        "in": "query",
                        "description": "Can be \"Or\" or \"And\"\\\nValues: [And, Or]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Inventory.V2.LogicalOperator"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "returnDateOnOrAfter",
                        "in": "query",
                        "description": "Filters by returns with return date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "returnDateBefore",
                        "in": "query",
                        "description": "Filters by returns with return date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.InventoryReturnResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "status": {},
                                            "vendorId": 0,
                                            "purchaseOrderId": 0,
                                            "jobId": 0,
                                            "projectId": 0,
                                            "budgetCodeId": 0,
                                            "businessUnitId": 0,
                                            "inventoryLocationId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "returnAmount": 0,
                                            "taxAmount": 0,
                                            "shippingAmount": 0,
                                            "returnDate": "string",
                                            "returnedOn": "string",
                                            "creditReceivedOn": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "canceledById": 0,
                                            "canceledReason": {},
                                            "dateCanceled": "string",
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "cost": 0,
                                                    "generalLedgerAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "costOfSaleAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "assetAccount": {
                                                        "name": "string",
                                                        "number": "string",
                                                        "type": "string",
                                                        "detailType": "string"
                                                    },
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "createdById": 0,
                                                    "active": true,
                                                    "receiptItemId": 0,
                                                    "budgetCodeId": 0
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Returns"
                ],
                "summary": "Create a Return",
                "description": "Create a Return",
                "operationId": "Returns_CreateReturn",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create Return Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CreateInventoryReturnRequest"
                            },
                            "example": {
                                "vendorId": 0,
                                "jobId": 0,
                                "purchaseOrderId": 0,
                                "returnTypeId": 0,
                                "businessUnitId": 0,
                                "budgetCodeId": 0,
                                "referenceNumber": "string",
                                "inventoryLocationId": 0,
                                "returnDate": "string",
                                "memo": "string",
                                "tax": 0,
                                "shipping": 0,
                                "restockingFee": 0,
                                "items": [
                                    {
                                        "skuId": 0,
                                        "description": "string",
                                        "quantity": 0,
                                        "cost": 0,
                                        "shipmentItemId": 0,
                                        "budgetCodeId": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the created Return",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/returns/custom-fields": {
            "patch": {
                "tags": [
                    "Returns"
                ],
                "summary": "Update custom fields on returns",
                "description": "Update custom fields on returns",
                "operationId": "Returns_UpdateCustomFields",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CustomFieldUpdateRequest"
                            },
                            "example": {
                                "operations": [
                                    {
                                        "objectId": 0,
                                        "customFields": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/returns/{id}": {
            "patch": {
                "tags": [
                    "Returns"
                ],
                "summary": "Update an existing Return",
                "description": "Update an existing Return",
                "operationId": "Returns_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Return Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Return Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateReturnRequest"
                            },
                            "example": {
                                "returnTypeId": 0,
                                "businessUnitId": 0,
                                "referenceNumber": "string",
                                "inventoryLocationId": 0,
                                "returnDate": "string",
                                "memo": "string",
                                "tax": 0,
                                "shipping": 0,
                                "restockingFee": 0,
                                "budgetCodeId": 0,
                                "items": [
                                    {
                                        "id": 0,
                                        "skuId": 0,
                                        "itemDescription": "string",
                                        "quantity": 0,
                                        "cost": 0,
                                        "budgetCodeId": 0
                                    }
                                ],
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Return",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/returns/{id}/cancellation": {
            "patch": {
                "tags": [
                    "Returns"
                ],
                "summary": "Cancel a Return",
                "description": "Cancel a Return",
                "operationId": "Returns_Cancel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Return Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Cancel Return Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CancelResourceRequest_Of_Inventory.V2.ReturnCancellationReason"
                            },
                            "example": {
                                "canceledReason": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the cancelled Return",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/return-types": {
            "post": {
                "tags": [
                    "ReturnTypes"
                ],
                "summary": "Create a new Return Type",
                "description": "Create a new Return Type",
                "operationId": "ReturnTypes_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request object to create a Return Type.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CreateReturnTypeRequest"
                            },
                            "example": {
                                "name": "string",
                                "automaticallyReceiveVendorCredit": true,
                                "includeInSalesTax": true,
                                "isDefault": true,
                                "isDefaultForConsignment": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the newly created Return Type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "ReturnTypes"
                ],
                "summary": "Returns the list of Return Types",
                "description": "Returns the list of Return Types",
                "operationId": "ReturnTypes_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "Filter by active only",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by specified fields",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of the Return Types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.ListReturnTypesResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "automaticallyReceiveVendorCredit": true,
                                            "includeInSalesTax": true,
                                            "active": true,
                                            "isDefault": true,
                                            "isDefaultForConsignment": true,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/return-types/{id}": {
            "patch": {
                "tags": [
                    "ReturnTypes"
                ],
                "summary": "Update an existing Return Type",
                "description": "Update an existing Return Type",
                "operationId": "ReturnTypes_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Return Type Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request object to update a Return Type.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateReturnTypeRequest"
                            },
                            "example": {
                                "id": 0,
                                "active": true,
                                "name": "string",
                                "automaticallyReceiveVendorCredit": true,
                                "includeInSalesTax": true,
                                "isDefault": true,
                                "isDefaultForConsignment": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the newly created Return Type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/transfers": {
            "get": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Get a list of transfers",
                "description": "Get a list of transfers",
                "operationId": "Transfers_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "Filter by a collection of statuses",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "referenceNumber",
                        "in": "query",
                        "description": "Reference number filter",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "batchId",
                        "in": "query",
                        "description": "Batch filter",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "transferTypeIds",
                        "in": "query",
                        "description": "Filter by a collection of transfer types",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "fromLocationIds",
                        "in": "query",
                        "description": "Filter by a collection of From field locations",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "toLocationIds",
                        "in": "query",
                        "description": "Filter by a collection of To field locations ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "syncStatuses",
                        "in": "query",
                        "description": "Filter by a collection of sync statuses",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Fields",
                        "in": "query",
                        "description": "Collection of custom field pairs (name, value) to filter by",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "name": "customFields.Operator",
                        "in": "query",
                        "description": "Can be \"Or\" or \"And\"\\\nValues: [And, Or]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Inventory.V2.LogicalOperator"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateOnOrAfter",
                        "in": "query",
                        "description": "Return transfers with date on or after certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "dateBefore",
                        "in": "query",
                        "description": "Return transfers with date before certain date/time",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.InventoryTransferResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "transferType": "string",
                                            "status": "string",
                                            "number": "string",
                                            "referenceNumber": "string",
                                            "fromLocationId": 0,
                                            "toLocationId": 0,
                                            "createdById": 0,
                                            "memo": "string",
                                            "date": "string",
                                            "pickedDate": "string",
                                            "receivedDate": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "batchId": 0,
                                            "batch": {
                                                "id": 0,
                                                "number": "string",
                                                "name": "string"
                                            },
                                            "syncStatus": {},
                                            "dateRequired": "string",
                                            "jobId": 0,
                                            "invoiceId": 0,
                                            "canceledById": 0,
                                            "canceledReason": {},
                                            "dateCanceled": "string",
                                            "active": true,
                                            "pickedById": 0,
                                            "receivedById": 0,
                                            "items": [
                                                {
                                                    "id": 0,
                                                    "skuId": 0,
                                                    "description": "string",
                                                    "createdOn": "string",
                                                    "modifiedOn": "string",
                                                    "name": "string",
                                                    "code": "string",
                                                    "quantity": 0,
                                                    "quantityPicked": 0,
                                                    "serialNumbers": [
                                                        {
                                                            "id": 0,
                                                            "number": "string"
                                                        }
                                                    ],
                                                    "createdById": 0,
                                                    "active": true
                                                }
                                            ],
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/transfers/custom-fields": {
            "patch": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Update custom fields on transfers",
                "description": "Update custom fields on transfers",
                "operationId": "Transfers_UpdateCustomFields",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CustomFieldUpdateRequest"
                            },
                            "example": {
                                "operations": [
                                    {
                                        "objectId": 0,
                                        "customFields": [
                                            {
                                                "name": "string",
                                                "value": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/transfers/{id}": {
            "patch": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Update an existing Transfer",
                "description": "Update an existing Transfer",
                "operationId": "Transfers_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Transfer Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateTransferRequest"
                            },
                            "example": {
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Transfer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/trucks": {
            "get": {
                "tags": [
                    "Trucks"
                ],
                "summary": "Get a list of trucks",
                "description": "Get a list of trucks",
                "operationId": "Trucks_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.TruckResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "memo": "string",
                                            "warehouseId": 0,
                                            "technicianIds": [
                                                0
                                            ],
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/trucks/{id}": {
            "patch": {
                "tags": [
                    "Trucks"
                ],
                "summary": "Update an existing truck",
                "description": "Update an existing truck",
                "operationId": "Trucks_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Truck Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Truck Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateTruckRequest"
                            },
                            "example": {
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Truck",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/vendors": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Create a new vendor",
                "description": "Create a new vendor",
                "operationId": "Vendors_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.CreateVendorRequest"
                            },
                            "example": {
                                "name": "string",
                                "active": true,
                                "memo": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "phone": "string",
                                "email": "string",
                                "fax": "string",
                                "isTruckReplenishment": true,
                                "deliveryOption": {},
                                "taxRate": 0,
                                "restrictedMobileCreation": true,
                                "vendorQuickbooksItem": "string",
                                "paymentTermId": 0,
                                "remittanceVendorId": 0,
                                "address": {
                                    "street": "string",
                                    "unit": "string",
                                    "city": "string",
                                    "state": "string",
                                    "zip": "string",
                                    "country": "string"
                                },
                                "externalData": {
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                },
                                "tags": [
                                    {
                                        "tagTypeId": 0
                                    }
                                ],
                                "vendorContacts": [
                                    {
                                        "name": "string",
                                        "email": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the newly created Vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get a list of vendors",
                "description": "Get a list of vendors",
                "operationId": "Vendors_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Ids to filter by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.VendorResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "isTruckReplenishment": true,
                                            "isMobileCreationRestricted": true,
                                            "memo": "string",
                                            "deliveryOption": "string",
                                            "defaultTaxRate": 0,
                                            "contactInfo": {
                                                "firstName": "string",
                                                "lastName": "string",
                                                "phone": "string",
                                                "email": "string",
                                                "fax": "string"
                                            },
                                            "address": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/vendors/{id}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get vendor by Id",
                "description": "Get vendor by Id",
                "operationId": "Vendors_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Inventory.V2.VendorResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "active": true,
                                    "isTruckReplenishment": true,
                                    "isMobileCreationRestricted": true,
                                    "memo": "string",
                                    "deliveryOption": "string",
                                    "defaultTaxRate": 0,
                                    "contactInfo": {
                                        "firstName": "string",
                                        "lastName": "string",
                                        "phone": "string",
                                        "email": "string",
                                        "fax": "string"
                                    },
                                    "address": {
                                        "street": "string",
                                        "unit": "string",
                                        "city": "string",
                                        "state": "string",
                                        "zip": "string",
                                        "country": "string"
                                    },
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update an existing vendor",
                "description": "Update an existing vendor",
                "operationId": "Vendors_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vendor Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Vendor Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateVendorRequest"
                            },
                            "example": {
                                "name": "string",
                                "active": true,
                                "memo": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "phone": "string",
                                "email": "string",
                                "fax": "string",
                                "isTruckReplenishment": true,
                                "deliveryOption": {},
                                "taxRate": 0,
                                "restrictedMobileCreation": true,
                                "vendorQuickbooksItem": "string",
                                "paymentTermId": 0,
                                "remittanceVendorId": 0,
                                "address": {
                                    "street": "string",
                                    "unit": "string",
                                    "city": "string",
                                    "state": "string",
                                    "zip": "string",
                                    "country": "string"
                                },
                                "tags": [
                                    {
                                        "tagTypeId": 0
                                    }
                                ],
                                "vendorContacts": [
                                    {
                                        "id": 0,
                                        "name": "string",
                                        "email": "string"
                                    }
                                ],
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/warehouses": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get a list of warehouses",
                "description": "Get a list of warehouses",
                "operationId": "Warehouses_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Inventory.V2.WarehouseResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "address": {
                                                "street": "string",
                                                "unit": "string",
                                                "city": "string",
                                                "state": "string",
                                                "zip": "string",
                                                "country": "string"
                                            },
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/warehouses/{id}": {
            "patch": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update an existing warehouse",
                "description": "Update an existing warehouse",
                "operationId": "Warehouses_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Warehouse Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Warehouse Request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateWarehouseRequest"
                            },
                            "example": {
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Id of the updated Warehouse",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModificationResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PaginatedResponse_Of_Inventory.V2.InventoryAdjustmentResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryAdjustmentResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.InventoryAdjustmentResponse": {
                "required": [
                    "id",
                    "active",
                    "number",
                    "referenceNumber",
                    "type",
                    "inventoryLocationId",
                    "memo",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "externalData",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Inventory adjustment Id",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "type": {
                        "type": "string",
                        "description": "Inventory Adjustment Type"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Id of Inventory Location for this adjustment",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business Unit Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this adjustment",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "memo/summary field",
                        "format": "multiline"
                    },
                    "date": {
                        "type": "string",
                        "description": "Adjustment date",
                        "format": "date-time"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time adjustment was modified date",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the adjustment was canceled",
                        "nullable": true
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this adjustment",
                        "format": "int64",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "time the adjustment was canceled",
                        "format": "date-time",
                        "nullable": true
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this warehouse,\nthat corresponds to the application guid provided in the request."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryAdjustmentItemResponse"
                        },
                        "description": "Collection of adjustment items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    }
                },
                "additionalProperties": false,
                "description": "Inventory adjustment response"
            },
            "Inventory.V2.BatchResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Batch Id",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Batch number",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Batch name",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents Batch response"
            },
            "Inventory.V2.SyncStatus": {
                "enum": [
                    "Pending",
                    "Posted",
                    "Exported"
                ],
                "type": "string",
                "description": "Sync status enum",
                "x-enumNames": [
                    "Pending",
                    "Posted",
                    "Exported"
                ]
            },
            "Inventory.V2.InventoryReasonTransactionCanceled": {
                "enum": [
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled",
                    "NotWarranty",
                    "WarrantyRejected"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled",
                    "NotWarranty",
                    "WarrantyRejected"
                ]
            },
            "Inventory.V2.ExternalDataModel": {
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "External data key."
                    },
                    "value": {
                        "type": "string",
                        "description": "External data value."
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.InventoryAdjustmentItemResponse": {
                "required": [
                    "id",
                    "skuId",
                    "description",
                    "createdOn",
                    "modifiedOn",
                    "name",
                    "code",
                    "quantity",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item Id",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer item was modified date",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string",
                        "description": "Item name"
                    },
                    "code": {
                        "type": "string",
                        "description": "Item code"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Adjustment quantity",
                        "format": "decimal"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "serialNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.SerialNumberResponse"
                        },
                        "description": "List of serial numbers",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inventory adjustment item response"
            },
            "Inventory.V2.SerialNumberResponse": {
                "required": [
                    "id",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of this serial number",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Serial number value"
                    }
                },
                "additionalProperties": false,
                "description": "Represents serial number response"
            },
            "Inventory.V2.CustomFieldResponse": {
                "required": [
                    "typeId",
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "description": "Id of custom field type",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom field name"
                    },
                    "value": {
                        "type": "string",
                        "description": "Custom field value"
                    }
                },
                "additionalProperties": false,
                "description": "Represents custom field response"
            },
            "ApiErrorResponse": {
                "required": [
                    "type",
                    "title",
                    "status",
                    "traceId",
                    "errors",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "A URI reference that identifies the problem type"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable summary of the problem type"
                    },
                    "status": {
                        "type": "integer",
                        "description": "The HTTP status code generated by server",
                        "format": "int32"
                    },
                    "traceId": {
                        "type": "string",
                        "description": "Internal trace ID for advanced diagnostics"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Provides more details about errors occurred, which can potentially be used for visual display"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Provides additional data, intended for programmatical usage"
                    }
                },
                "additionalProperties": false,
                "description": "Detailed error response, following RFC 7807 recommendations (https://tools.ietf.org/html/rfc7807)."
            },
            "ActiveRequestArg": {
                "enum": [
                    "True",
                    "Any",
                    "False"
                ],
                "type": "string",
                "description": "Represents possible HTTP query argument values, when applying filters based on active status.",
                "x-enumNames": [
                    "True",
                    "Any",
                    "False"
                ]
            },
            "Inventory.V2.LogicalOperator": {
                "enum": [
                    "And",
                    "Or"
                ],
                "type": "string",
                "description": "Logical operator used for querying custom fields",
                "x-enumNames": [
                    "And",
                    "Or"
                ]
            },
            "ModificationResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of created/updated object",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": "Default response when creating object with a new ID, or updating object by specified ID."
            },
            "Inventory.V2.UpdateAdjustmentRequest": {
                "type": "object",
                "properties": {
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this adjustment"
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to update adjustment"
            },
            "Inventory.V2.ExternalDataUpdateRequest": {
                "required": [
                    "applicationGuid",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "patchMode": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataPatchMode"
                            }
                        ],
                        "description": "External data patch mode.\\\n\"Replace\" (default) replaces all existing keys with new values. If job A has custom data with keys X and Y and this field only contains an item\nwith a key X, then custom data with a key Y on job A will be removed.\\\n\"Merge\" will only replace key X in the example above. Keys with null value will be deleted.",
                        "nullable": true
                    },
                    "applicationGuid": {
                        "type": "string",
                        "description": "Items that are created with a specific guid, could be fetched/updated/removed\nonly when the same application guid is provided.",
                        "format": "guid"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateModel"
                        },
                        "description": "External data list."
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.ExternalDataPatchMode": {
                "enum": [
                    "Replace",
                    "Merge"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Replace",
                    "Merge"
                ]
            },
            "Inventory.V2.ExternalDataUpdateModel": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "External data key."
                    },
                    "value": {
                        "type": "string",
                        "description": "External data value.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.CustomFieldUpdateRequest": {
                "required": [
                    "operations"
                ],
                "type": "object",
                "properties": {
                    "operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldOperationRequest"
                        },
                        "description": "Collection of custom field update operations"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a batch request to update custom fields"
            },
            "Inventory.V2.CustomFieldOperationRequest": {
                "required": [
                    "objectId",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "objectId": {
                        "type": "integer",
                        "description": "Id of inventory transaction where custom fields will be updated",
                        "format": "int64"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldRequest"
                        },
                        "description": "Collection of custom fields to be updated"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update custom fields on a single transaction"
            },
            "Inventory.V2.CustomFieldRequest": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Custom field name"
                    },
                    "value": {
                        "type": "string",
                        "description": "Custom field value"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to update a single custom field"
            },
            "ExportResponse_Of_Inventory.V2.ExportAdjustmentsResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExportAdjustmentsResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Inventory.V2.ExportAdjustmentsResponse": {
                "required": [
                    "id",
                    "active",
                    "number",
                    "referenceNumber",
                    "type",
                    "inventoryLocationId",
                    "memo",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "externalData",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Inventory adjustment Id",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "type": {
                        "type": "string",
                        "description": "Inventory Adjustment Type"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Id of Inventory Location for this adjustment",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business Unit Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this adjustment",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "memo/summary field",
                        "format": "multiline"
                    },
                    "date": {
                        "type": "string",
                        "description": "Adjustment date",
                        "format": "date-time"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time adjustment was modified date",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the adjustment was canceled",
                        "nullable": true
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this adjustment",
                        "format": "int64",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "time the adjustment was canceled",
                        "format": "date-time",
                        "nullable": true
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this warehouse,\nthat corresponds to the application guid provided in the request."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryAdjustmentItemResponse"
                        },
                        "description": "Collection of adjustment items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Inventory.V2.ExportPurchaseOrdersResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExportPurchaseOrdersResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Inventory.V2.ExportPurchaseOrdersResponse": {
                "required": [
                    "id",
                    "number",
                    "status",
                    "typeId",
                    "vendorId",
                    "shipTo",
                    "vendorDocumentNumber",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "total",
                    "tax",
                    "shipping",
                    "summary",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Purchase order Id",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Purchase order number"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "Id of invoice associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of project associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this PO"
                    },
                    "typeId": {
                        "type": "integer",
                        "description": "The purchase order type Id of this PO",
                        "format": "int64"
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of vendor for this PO",
                        "format": "int64"
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of technician for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Shipping address for this PO"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of business unit for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location Id of PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id of PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "vendorDocumentNumber": {
                        "type": "string",
                        "description": "Vendor document number of PO"
                    },
                    "date": {
                        "type": "string",
                        "description": "PO date",
                        "format": "date-time"
                    },
                    "requiredOn": {
                        "type": "string",
                        "description": "PO required on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "sentOn": {
                        "type": "string",
                        "description": "PO sent on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "receivedOn": {
                        "type": "string",
                        "description": "PO received on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "When PO was created, system date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "When PO was last modified, system date",
                        "format": "date-time"
                    },
                    "total": {
                        "type": "number",
                        "description": "PO total, including items cost, tax and shipping cost",
                        "format": "decimal"
                    },
                    "tax": {
                        "type": "number",
                        "description": "PO tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "PO shipping cost",
                        "format": "decimal"
                    },
                    "summary": {
                        "type": "string",
                        "description": "PO summary/memo",
                        "format": "multiline"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderItemResponse"
                        },
                        "description": "List of PO items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "List of custom fields for this PO"
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.AddressResponse": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "Street",
                        "nullable": true
                    },
                    "unit": {
                        "type": "string",
                        "description": "Unit",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "City",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "description": "State",
                        "nullable": true
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip code",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents address response"
            },
            "Inventory.V2.PurchaseOrderItemResponse": {
                "required": [
                    "id",
                    "skuId",
                    "description",
                    "createdOn",
                    "modifiedOn",
                    "skuName",
                    "skuCode",
                    "skuType",
                    "vendorPartNumber",
                    "quantity",
                    "quantityReceived",
                    "cost",
                    "total",
                    "serialNumbers",
                    "status",
                    "chargeable"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item Id",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer item was modified date",
                        "format": "date-time"
                    },
                    "skuName": {
                        "type": "string",
                        "description": "Item name"
                    },
                    "skuCode": {
                        "type": "string",
                        "description": "Item code"
                    },
                    "skuType": {
                        "type": "string",
                        "description": "Item type(material or equipment)"
                    },
                    "vendorPartNumber": {
                        "type": "string",
                        "description": "Vendor part number for this item"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "decimal"
                    },
                    "quantityReceived": {
                        "type": "number",
                        "description": "Quantity received for this item, PO must have at least one receipt for this to be not 0",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "total": {
                        "type": "number",
                        "description": "Item total cost",
                        "format": "decimal"
                    },
                    "serialNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.SerialNumberResponse"
                        },
                        "description": "List of serial numbers"
                    },
                    "status": {
                        "type": "string",
                        "description": "Item status"
                    },
                    "chargeable": {
                        "type": "boolean",
                        "description": "Indicates whether item price is charged to customer"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents purchase order item response"
            },
            "ExportResponse_Of_Inventory.V2.ExportReturnsResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExportReturnsResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Inventory.V2.ExportReturnsResponse": {
                "required": [
                    "id",
                    "active",
                    "number",
                    "referenceNumber",
                    "status",
                    "vendorId",
                    "businessUnitId",
                    "memo",
                    "returnAmount",
                    "taxAmount",
                    "shippingAmount",
                    "returnDate",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "items",
                    "customFields",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Return Id",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReturnStatus"
                            }
                        ],
                        "description": "Status"
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Vendor",
                        "format": "int64"
                    },
                    "purchaseOrderId": {
                        "type": "integer",
                        "description": "Purchase order",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Job",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Project",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return",
                        "format": "int64",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business unit",
                        "format": "int64"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this return",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "format": "multiline"
                    },
                    "returnAmount": {
                        "type": "number",
                        "description": "Return total, including tax and shipping",
                        "format": "decimal"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Return tax",
                        "format": "decimal"
                    },
                    "shippingAmount": {
                        "type": "number",
                        "description": "Return shipping cost",
                        "format": "decimal"
                    },
                    "returnDate": {
                        "type": "string",
                        "description": "Return creation date",
                        "format": "date-time"
                    },
                    "returnedOn": {
                        "type": "string",
                        "description": "Date when return was actually processed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creditReceivedOn": {
                        "type": "string",
                        "description": "Date when credit was received",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time return was modified",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the transfer was canceled",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "Transfer canceled date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryReturnItemResponse"
                        },
                        "description": "Collection of return items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this return,\nthat corresponds to the application guid provided in the request."
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.InventoryReturnStatus": {
                "enum": [
                    "Pending",
                    "Returned",
                    "CreditReceived",
                    "Canceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Pending",
                    "Returned",
                    "CreditReceived",
                    "Canceled"
                ]
            },
            "Inventory.V2.InventoryReturnItemResponse": {
                "required": [
                    "id",
                    "skuId",
                    "description",
                    "createdOn",
                    "modifiedOn",
                    "name",
                    "code",
                    "quantity",
                    "cost",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item Id",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer item was modified date",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string",
                        "description": "Item name"
                    },
                    "code": {
                        "type": "string",
                        "description": "Item code"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Return quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "generalLedgerAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "General ledge account information",
                        "nullable": true
                    },
                    "costOfSaleAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "Cost of sale account information",
                        "nullable": true
                    },
                    "assetAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "Asset account information",
                        "nullable": true
                    },
                    "serialNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.SerialNumberResponse"
                        },
                        "description": "List of serial numbers",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "receiptItemId": {
                        "type": "integer",
                        "description": "Receipt item Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inventory return item response"
            },
            "Inventory.V2.GLAccountResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "GL Account name",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "GL Account number",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "GL Account type",
                        "nullable": true
                    },
                    "detailType": {
                        "type": "string",
                        "description": "GL Account detail type",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents GL account response"
            },
            "ExportResponse_Of_Inventory.V2.ExportTransfersResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExportTransfersResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Inventory.V2.ExportTransfersResponse": {
                "required": [
                    "id",
                    "transferType",
                    "status",
                    "number",
                    "referenceNumber",
                    "fromLocationId",
                    "toLocationId",
                    "memo",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "active",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Inventory transfer Id",
                        "format": "int64"
                    },
                    "transferType": {
                        "type": "string",
                        "description": "Type"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "fromLocationId": {
                        "type": "integer",
                        "description": "Inventory location to transfer from",
                        "format": "int64"
                    },
                    "toLocationId": {
                        "type": "integer",
                        "description": "Inventory location where transfer is going",
                        "format": "int64"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "format": "multiline"
                    },
                    "date": {
                        "type": "string",
                        "description": "Transfer date",
                        "format": "date-time"
                    },
                    "pickedDate": {
                        "type": "string",
                        "description": "Transfer picked date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "receivedDate": {
                        "type": "string",
                        "description": "Transfer recevived date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer was modified date",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "dateRequired": {
                        "type": "string",
                        "description": "Transfer required by date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job associated with transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "Id of invoice associated with transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the transfer was canceled",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "Transfer canceled date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "pickedById": {
                        "type": "integer",
                        "description": "Employee who picked this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "receivedById": {
                        "type": "integer",
                        "description": "Employee who received this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryTransferItemResponse"
                        },
                        "description": "Collection of transfer items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this return,\nthat corresponds to the application guid provided in the request.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.InventoryTransferItemResponse": {
                "required": [
                    "id",
                    "skuId",
                    "description",
                    "createdOn",
                    "modifiedOn",
                    "name",
                    "code",
                    "quantity",
                    "quantityPicked",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item Id",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer item was modified date",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string",
                        "description": "Item name"
                    },
                    "code": {
                        "type": "string",
                        "description": "Item code"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Transfer quantity",
                        "format": "decimal"
                    },
                    "quantityPicked": {
                        "type": "number",
                        "description": "Transfer quantity already picked",
                        "format": "decimal"
                    },
                    "serialNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.SerialNumberResponse"
                        },
                        "description": "List of serial numbers",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    }
                },
                "additionalProperties": false,
                "description": "Inventory transfer item response"
            },
            "Inventory.V2.CreatePurchaseOrderRequest": {
                "required": [
                    "vendorId",
                    "typeId",
                    "businessUnitId",
                    "inventoryLocationId",
                    "shipTo",
                    "impactsTechnicianPayroll",
                    "date",
                    "requiredOn",
                    "tax",
                    "shipping",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of the vendor for this PO",
                        "format": "int64"
                    },
                    "typeId": {
                        "type": "integer",
                        "description": "Id of the purchase order type for this PO",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of the business unit for this PO",
                        "format": "int64"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Id of the inventory location for this PO",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of the job for this PO, if not specified non-job PO will be created",
                        "format": "int64",
                        "nullable": true
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of the technician for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of the project for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.CreateAddressRequest"
                            }
                        ],
                        "description": "Address where PO will be shipped"
                    },
                    "vendorInvoiceNumber": {
                        "type": "string",
                        "description": "Optional vendor invoice number, you should provide it for auto-received POs",
                        "nullable": true
                    },
                    "impactsTechnicianPayroll": {
                        "type": "boolean",
                        "description": "Indicates whether this PO will impact technician's payroll"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Summary/memo for this PO",
                        "format": "multiline",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "description": "PO date",
                        "format": "date-time"
                    },
                    "requiredOn": {
                        "type": "string",
                        "description": "PO Required On date",
                        "format": "date-time"
                    },
                    "tax": {
                        "type": "number",
                        "description": "Tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "Shipping cost",
                        "format": "decimal"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CreatePurchaseOrderItemRequest"
                        },
                        "description": "List of PO items"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create PO"
            },
            "Inventory.V2.CreateAddressRequest": {
                "required": [
                    "description",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the shipping address, like customer address or technician's truck for example"
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressRequest"
                            }
                        ],
                        "description": "Actual shipping address"
                    }
                },
                "additionalProperties": false,
                "description": "Request model for address with description"
            },
            "Inventory.V2.AddressRequest": {
                "required": [
                    "street",
                    "unit",
                    "city",
                    "state",
                    "zip",
                    "country"
                ],
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "description": "Street"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Unit"
                    },
                    "city": {
                        "type": "string",
                        "description": "City"
                    },
                    "state": {
                        "type": "string",
                        "description": "State"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zip code"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country code"
                    }
                },
                "additionalProperties": false,
                "description": "Request model for actual address"
            },
            "Inventory.V2.CreatePurchaseOrderItemRequest": {
                "required": [
                    "skuId",
                    "description",
                    "vendorPartNumber",
                    "quantity",
                    "cost"
                ],
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "integer",
                        "description": "Id of the SKU from pricebook, can be any active material or equipment",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "vendorPartNumber": {
                        "type": "string",
                        "description": "Part number of this item for current vendor"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model for new PO item"
            },
            "PaginatedResponse_Of_Inventory.V2.PurchaseOrderResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.PurchaseOrderResponse": {
                "required": [
                    "id",
                    "number",
                    "status",
                    "typeId",
                    "vendorId",
                    "shipTo",
                    "vendorDocumentNumber",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "total",
                    "tax",
                    "shipping",
                    "summary",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Purchase order Id",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Purchase order number"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "Id of invoice associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of project associated with PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of this PO"
                    },
                    "typeId": {
                        "type": "integer",
                        "description": "The purchase order type Id of this PO",
                        "format": "int64"
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of vendor for this PO",
                        "format": "int64"
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of technician for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Shipping address for this PO"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of business unit for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location Id of PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id of PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "vendorDocumentNumber": {
                        "type": "string",
                        "description": "Vendor document number of PO"
                    },
                    "date": {
                        "type": "string",
                        "description": "PO date",
                        "format": "date-time"
                    },
                    "requiredOn": {
                        "type": "string",
                        "description": "PO required on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "sentOn": {
                        "type": "string",
                        "description": "PO sent on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "receivedOn": {
                        "type": "string",
                        "description": "PO received on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "When PO was created, system date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "When PO was last modified, system date",
                        "format": "date-time"
                    },
                    "total": {
                        "type": "number",
                        "description": "PO total, including items cost, tax and shipping cost",
                        "format": "decimal"
                    },
                    "tax": {
                        "type": "number",
                        "description": "PO tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "PO shipping cost",
                        "format": "decimal"
                    },
                    "summary": {
                        "type": "string",
                        "description": "PO summary/memo",
                        "format": "multiline"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderItemResponse"
                        },
                        "description": "List of PO items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "List of custom fields for this PO"
                    }
                },
                "additionalProperties": false,
                "description": "Represents purchase order response"
            },
            "PaginatedResponse_Of_Inventory.V2.PurchaseOrderRequestResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderRequestResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.PurchaseOrderRequestResponse": {
                "required": [
                    "id",
                    "requestNumber",
                    "requestStatus",
                    "typeId",
                    "vendorId",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "total",
                    "tax",
                    "shipping",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Purchase order request Id",
                        "format": "int64"
                    },
                    "requestNumber": {
                        "type": "string",
                        "description": "Purchase order request number"
                    },
                    "requestStatus": {
                        "type": "string",
                        "description": "Status of this PO request"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "Id of invoice associated with PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job associated with PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of project associated with PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "typeId": {
                        "type": "integer",
                        "description": "The purchase order type Id of this PO request",
                        "format": "int64"
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of vendor for this PO request",
                        "format": "int64"
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of technician for this PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Shipping address for this PO request",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of business unit for this PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location Id of PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id of PO request",
                        "format": "int64",
                        "nullable": true
                    },
                    "vendorDocumentNumber": {
                        "type": "string",
                        "description": "Vendor document number of PO",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "description": "PO request date",
                        "format": "date-time"
                    },
                    "requiredOn": {
                        "type": "string",
                        "description": "PO request required on date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "When PO request was created, system date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "When PO request was last modified, system date",
                        "format": "date-time"
                    },
                    "total": {
                        "type": "number",
                        "description": "PO request total, including items cost, tax and shipping cost",
                        "format": "decimal"
                    },
                    "tax": {
                        "type": "number",
                        "description": "PO request tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "PO request shipping cost",
                        "format": "decimal"
                    },
                    "summary": {
                        "type": "string",
                        "description": "PO request summary/memo",
                        "format": "multiline",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderItemResponse"
                        },
                        "description": "List of PO request items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "List of custom fields for this PO request",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents purchase order request response"
            },
            "Inventory.V2.PurchaseOrderRequestStatus": {
                "enum": [
                    "PendingApproval",
                    "Approved",
                    "Rejected"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "PendingApproval",
                    "Approved",
                    "Rejected"
                ]
            },
            "Inventory.V2.UpdatePurchaseOrderRequest": {
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of the vendor for this PO",
                        "format": "int64"
                    },
                    "typeId": {
                        "type": "integer",
                        "description": "Id of the purchase order type for this PO",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of the business unit for this PO",
                        "format": "int64"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Id of the inventory location for this PO",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of the job for this PO, if not specified non-job PO will be created",
                        "format": "int64"
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of the technician for this PO",
                        "format": "int64"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Id of the project for this PO",
                        "format": "int64"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO",
                        "format": "int64",
                        "nullable": true
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.UpdateAddressRequest"
                            }
                        ],
                        "description": "Address where PO will be shipped"
                    },
                    "vendorInvoiceNumber": {
                        "type": "string",
                        "description": "Vendor invoice number"
                    },
                    "impactsTechnicianPayroll": {
                        "type": "boolean",
                        "description": "Indicates whether this PO will impact technician's payroll"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Summary/memo for this PO",
                        "format": "multiline"
                    },
                    "date": {
                        "type": "string",
                        "description": "PO date",
                        "format": "date-time"
                    },
                    "requiredOn": {
                        "type": "string",
                        "description": "PO Required On date",
                        "format": "date-time"
                    },
                    "tax": {
                        "type": "number",
                        "description": "Tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "Shipping cost",
                        "format": "decimal"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.UpdatePurchaseOrderItemRequest"
                        },
                        "description": "List of new/updated PO items. Every active PO item that is not on this list will be marked as inactive"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update single purchase order"
            },
            "Inventory.V2.UpdateAddressRequest": {
                "required": [
                    "description",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the shipping address, like customer address or technician's truck for example"
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressRequest"
                            }
                        ],
                        "description": "Actual shipping address"
                    }
                },
                "additionalProperties": false,
                "description": "Update address with description request"
            },
            "Inventory.V2.UpdatePurchaseOrderItemRequest": {
                "required": [
                    "id",
                    "skuId",
                    "description",
                    "vendorPartNumber",
                    "quantity",
                    "cost"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of purchase order item to update",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Id of the SKU from pricebook, can be any active material or equipment",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "format": "html"
                    },
                    "vendorPartNumber": {
                        "type": "string",
                        "description": "Part number of this item for current vendor"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code for this PO item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Update purchase order item request"
            },
            "Inventory.V2.CancelResourceRequest_Of_Inventory.V2.PurchaseOrderCancellationReason": {
                "type": "object",
                "properties": {
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderCancellationReason"
                            }
                        ],
                        "description": "Resource cancellation reason"
                    }
                },
                "additionalProperties": false,
                "description": "Cancel Resource Request"
            },
            "Inventory.V2.PurchaseOrderCancellationReason": {
                "enum": [
                    "NotRequired",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ]
            },
            "Inventory.V2.PurchaseOrderRequestRejectionArgs": {
                "required": [
                    "rejectionReason"
                ],
                "type": "object",
                "properties": {
                    "rejectionReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.PoApprovalRejectionReason"
                            }
                        ],
                        "description": "Resource rejection reason"
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.PoApprovalRejectionReason": {
                "enum": [
                    "CostTooHigh",
                    "WrongVendor",
                    "Other"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "CostTooHigh",
                    "WrongVendor",
                    "Other"
                ]
            },
            "PaginatedResponse_Of_Inventory.V2.Markups.PurchaseOrderMarkupResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.Markups.PurchaseOrderMarkupResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.Markups.PurchaseOrderMarkupResponse": {
                "required": [
                    "createdOn",
                    "modifiedOn",
                    "from",
                    "to",
                    "percent",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "createdOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "from": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "to": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "percent": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": "Represents purchase order markup response"
            },
            "Inventory.V2.Markups.CreatePurchaseOrderMarkupRequest": {
                "required": [
                    "from",
                    "to",
                    "percent"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "to": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "percent": {
                        "type": "number",
                        "format": "decimal"
                    }
                },
                "additionalProperties": false,
                "description": "Represents create purchase order markup request"
            },
            "Inventory.V2.Markups.UpdatePurchaseOrderMarkupRequest": {
                "required": [
                    "from",
                    "to",
                    "percent"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "to": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "percent": {
                        "type": "number",
                        "format": "decimal"
                    }
                },
                "additionalProperties": false,
                "description": "Represents update purchase order markup request"
            },
            "Inventory.V2.CreatePurchaseOrderTypeRequest": {
                "required": [
                    "name",
                    "active",
                    "includeInPoScreen",
                    "automaticallyReceive",
                    "displayToTechnician",
                    "excludeTaxFromJobCosting",
                    "impactToTechnicianPayroll",
                    "allowTechniciansToSendPo",
                    "defaultRequiredDateDaysOffset",
                    "skipWeekends",
                    "includeInSalesTax",
                    "isDefault",
                    "copyPurchaseOrderItemsToInvoiceWhenReceived",
                    "isDefaultForConsignment",
                    "alertSettings"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Purchase Order Type"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "includeInPoScreen": {
                        "type": "boolean",
                        "description": "Include in PO Screen"
                    },
                    "automaticallyReceive": {
                        "type": "boolean",
                        "description": "Automatically receive purchase order"
                    },
                    "displayToTechnician": {
                        "type": "boolean",
                        "description": "Display purchase order type to technician"
                    },
                    "excludeTaxFromJobCosting": {
                        "type": "boolean",
                        "description": "Exclude Tax From Job Costing"
                    },
                    "impactToTechnicianPayroll": {
                        "type": "boolean",
                        "description": "Default Selection for Impact to Technician Payroll on Purchase Order"
                    },
                    "allowTechniciansToSendPo": {
                        "type": "boolean",
                        "description": "Allow permitted technicians to send and receive POs of this type"
                    },
                    "defaultRequiredDateDaysOffset": {
                        "type": "integer",
                        "description": "Default number of days to offset required date",
                        "format": "int32"
                    },
                    "skipWeekends": {
                        "type": "boolean",
                        "description": "Skip weekends"
                    },
                    "includeInSalesTax": {
                        "type": "boolean",
                        "description": "Include Purchase Order Total in the Sales Tax Calculation"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Is Purchase Order Type Default"
                    },
                    "copyPurchaseOrderItemsToInvoiceWhenReceived": {
                        "type": "boolean",
                        "description": "Copy Purchase Order Items To Invoice When Received"
                    },
                    "isDefaultForConsignment": {
                        "type": "boolean",
                        "description": "Is Default For Consignment"
                    },
                    "alertSettings": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.PoTypeAlertSettings"
                            }
                        ],
                        "description": "Alert definition for the Purchase Order Type"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create Purchase Order Types\n            "
            },
            "Inventory.PoTypeAlertSettings": {
                "required": [
                    "sendEmailToTechnicianWhenPoMovedToSend",
                    "sendEmailToTechnicianWhenPoMovedToReceived",
                    "sendEmailToPmWhenPoMovedToSend",
                    "sendEmailToPmWhenPoMovedToReceived"
                ],
                "type": "object",
                "properties": {
                    "sendEmailToTechnicianWhenPoMovedToSend": {
                        "type": "boolean",
                        "description": "Send Email To Technician When PO Moved To Send"
                    },
                    "sendEmailToTechnicianWhenPoMovedToReceived": {
                        "type": "boolean",
                        "description": "Send Email To Technician When PO Moved To Receive"
                    },
                    "sendEmailToPmWhenPoMovedToSend": {
                        "type": "boolean",
                        "description": "Send Email To PM When PO Moved To Send"
                    },
                    "sendEmailToPmWhenPoMovedToReceived": {
                        "type": "boolean",
                        "description": "Send Email To PM When PO Moved To Receive"
                    }
                },
                "additionalProperties": false,
                "description": "Purchase Order Type Alert settings\n            "
            },
            "PaginatedResponse_Of_Inventory.V2.PurchaseOrderTypeResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.PurchaseOrderTypeResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.PurchaseOrderTypeResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "automaticallyReceive",
                    "displayToTechnician",
                    "impactToTechnicianPayroll",
                    "allowTechniciansToSendPo",
                    "defaultRequiredDateDaysOffset",
                    "skipWeekends",
                    "excludeTaxFromJobCosting",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Purchase order type Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Purchase order type Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "automaticallyReceive": {
                        "type": "boolean",
                        "description": "Automatically receive purchase order"
                    },
                    "displayToTechnician": {
                        "type": "boolean",
                        "description": "Display purchase order type to technicain on mobile"
                    },
                    "impactToTechnicianPayroll": {
                        "type": "boolean",
                        "description": "Default Selection for Impact to Technician Payroll on Purchase Order"
                    },
                    "allowTechniciansToSendPo": {
                        "type": "boolean",
                        "description": "Allow permitted technicians to send and receive POs of this type"
                    },
                    "defaultRequiredDateDaysOffset": {
                        "type": "integer",
                        "description": "Default number of days to offset required date",
                        "format": "int32"
                    },
                    "skipWeekends": {
                        "type": "boolean",
                        "description": "Skip weekends"
                    },
                    "excludeTaxFromJobCosting": {
                        "type": "boolean",
                        "description": "Exclude tax from job costing"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time purchase order type was modified date",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Represents purchase order type response"
            },
            "Inventory.V2.UpdatePurchaseOrderTypeRequest": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Is the Purchase Order Type Active"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Purchase Order Type"
                    },
                    "includeInPoScreen": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be included in the Purchase Order screen"
                    },
                    "automaticallyReceive": {
                        "type": "boolean",
                        "description": "Should the Purchase Order be automatically received"
                    },
                    "displayToTechnician": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be displayed to the technician on mobile"
                    },
                    "excludeTaxFromJobCosting": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be excluded from job costing"
                    },
                    "impactToTechnicianPayroll": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type impact technician payroll"
                    },
                    "allowTechniciansToSendPo": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type allow technicians to send POs"
                    },
                    "defaultRequiredDateDaysOffset": {
                        "type": "integer",
                        "description": "Default number of days to offset required date",
                        "format": "int32"
                    },
                    "skipWeekends": {
                        "type": "boolean",
                        "description": "Skip weekends"
                    },
                    "includeInSalesTax": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be included in sales tax"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be the default"
                    },
                    "copyPurchaseOrderItemsToInvoiceWhenReceived": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type copy purchase order items to invoice when received"
                    },
                    "isDefaultForConsignment": {
                        "type": "boolean",
                        "description": "Should the Purchase Order Type be the default for consignment"
                    },
                    "alertSettings": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.PoTypeAlertSettings"
                            }
                        ],
                        "description": "Alert definition for the Purchase Order Type"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to Update Purchase Order Types"
            },
            "PaginatedResponse_Of_Inventory.V2.InventoryReceiptResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryReceiptResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.InventoryReceiptResponse": {
                "required": [
                    "id",
                    "active",
                    "number",
                    "vendorInvoiceNumber",
                    "memo",
                    "purchaseOrderId",
                    "vendorId",
                    "inventoryLocationId",
                    "shipToDescription",
                    "receiptAmount",
                    "taxAmount",
                    "shippingAmount",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Receipt Id",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "vendorInvoiceNumber": {
                        "type": "string",
                        "description": "Vendor invoice number"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "User who created this receipt",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "format": "multiline"
                    },
                    "purchaseOrderId": {
                        "type": "integer",
                        "description": "Id of purchase order",
                        "format": "int64"
                    },
                    "billId": {
                        "type": "integer",
                        "description": "Id of bill",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job",
                        "format": "int64",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Id of business unit",
                        "format": "int64",
                        "nullable": true
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Id of vendor",
                        "format": "int64"
                    },
                    "technicianId": {
                        "type": "integer",
                        "description": "Id of technician",
                        "format": "int64",
                        "nullable": true
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Id of inventory location",
                        "format": "int64"
                    },
                    "shipTo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Ship to address",
                        "nullable": true
                    },
                    "shipToDescription": {
                        "type": "string",
                        "description": "Ship to description"
                    },
                    "receiptAmount": {
                        "type": "number",
                        "description": "Receipt total, including tax and shipping",
                        "format": "decimal"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Receipt tax",
                        "format": "decimal"
                    },
                    "shippingAmount": {
                        "type": "number",
                        "description": "Receipt shipping cost",
                        "format": "decimal"
                    },
                    "receivedOn": {
                        "type": "string",
                        "description": "Date received",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time receipt was modified",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Id of batch",
                        "format": "int64",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code",
                        "format": "int64",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryReceiptItemResponse"
                        },
                        "description": "Collection of receipt items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    }
                },
                "additionalProperties": false,
                "description": "Inventory receipt response"
            },
            "Inventory.V2.InventoryReceiptItemResponse": {
                "required": [
                    "id",
                    "skuId",
                    "name",
                    "code",
                    "description",
                    "quantity",
                    "cost",
                    "purchaseOrderItemId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item Id",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Item Name"
                    },
                    "code": {
                        "type": "string",
                        "description": "Item Code"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item Description",
                        "format": "html"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Receipt quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "generalLedgerAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "General ledge account information",
                        "nullable": true
                    },
                    "costOfSaleAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "Cost of sale account information",
                        "nullable": true
                    },
                    "assetAccount": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.GLAccountResponse"
                            }
                        ],
                        "description": "Asset account information",
                        "nullable": true
                    },
                    "purchaseOrderItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inventory receipt item response"
            },
            "Inventory.V2.ReceivePurchaseOrderRequest": {
                "required": [
                    "purchaseOrderId",
                    "dateReceived",
                    "tax",
                    "shipping",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "purchaseOrderId": {
                        "type": "integer",
                        "description": "Id of the purchase order for this receipt",
                        "format": "int64"
                    },
                    "dateReceived": {
                        "type": "string",
                        "description": "Receipt date",
                        "format": "date-time"
                    },
                    "vendorDocumentNumber": {
                        "type": "string",
                        "description": "Vendor Document number",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Receipt memo",
                        "nullable": true
                    },
                    "tax": {
                        "type": "number",
                        "description": "Receipt tax",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "Receipt shipping cost",
                        "format": "decimal"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code",
                        "format": "int64",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ReceivePurchaseOrderItemRequest"
                        },
                        "description": "List of PO items"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create Purchase Order Receipt"
            },
            "Inventory.V2.ReceivePurchaseOrderItemRequest": {
                "required": [
                    "skuId",
                    "quantity",
                    "cost"
                ],
                "type": "object",
                "properties": {
                    "purchaseOrderItemId": {
                        "type": "integer",
                        "description": "Id of purchase order item",
                        "format": "int64",
                        "nullable": true
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "Id of the SKU from pricebook, can be any active material or equipment",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "nullable": true
                    },
                    "vendorPartNumber": {
                        "type": "string",
                        "description": "Part number of this item for current vendor",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Item cost",
                        "format": "decimal"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Id of the budget code",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.CancelResourceRequest_Of_Inventory.V2.ReceiptCancellationReason": {
                "type": "object",
                "properties": {
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ReceiptCancellationReason"
                            }
                        ],
                        "description": "Resource cancellation reason"
                    }
                },
                "additionalProperties": false,
                "description": "Cancel Resource Request"
            },
            "Inventory.V2.ReceiptCancellationReason": {
                "enum": [
                    "NotRequired",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ]
            },
            "PaginatedResponse_Of_Inventory.V2.InventoryReturnResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryReturnResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.InventoryReturnResponse": {
                "required": [
                    "id",
                    "active",
                    "number",
                    "referenceNumber",
                    "status",
                    "vendorId",
                    "businessUnitId",
                    "memo",
                    "returnAmount",
                    "taxAmount",
                    "shippingAmount",
                    "returnDate",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "items",
                    "customFields",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Return Id",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReturnStatus"
                            }
                        ],
                        "description": "Status"
                    },
                    "vendorId": {
                        "type": "integer",
                        "description": "Vendor",
                        "format": "int64"
                    },
                    "purchaseOrderId": {
                        "type": "integer",
                        "description": "Purchase order",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Job",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Project",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return",
                        "format": "int64",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business unit",
                        "format": "int64"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location",
                        "format": "int64",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this return",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "format": "multiline"
                    },
                    "returnAmount": {
                        "type": "number",
                        "description": "Return total, including tax and shipping",
                        "format": "decimal"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Return tax",
                        "format": "decimal"
                    },
                    "shippingAmount": {
                        "type": "number",
                        "description": "Return shipping cost",
                        "format": "decimal"
                    },
                    "returnDate": {
                        "type": "string",
                        "description": "Return creation date",
                        "format": "date-time"
                    },
                    "returnedOn": {
                        "type": "string",
                        "description": "Date when return was actually processed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creditReceivedOn": {
                        "type": "string",
                        "description": "Date when credit was received",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time return was modified",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the transfer was canceled",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "Transfer canceled date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryReturnItemResponse"
                        },
                        "description": "Collection of return items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this return,\nthat corresponds to the application guid provided in the request."
                    }
                },
                "additionalProperties": false,
                "description": "Inventory return response"
            },
            "Inventory.V2.UpdateReturnRequest": {
                "type": "object",
                "properties": {
                    "returnTypeId": {
                        "type": "integer",
                        "description": "Return type Id",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business unit Id",
                        "format": "int64"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference Number"
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Inventory location Id",
                        "format": "int64"
                    },
                    "returnDate": {
                        "type": "string",
                        "description": "Return Date",
                        "format": "date-time"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo"
                    },
                    "tax": {
                        "type": "number",
                        "description": "Tax",
                        "format": "decimal",
                        "nullable": true
                    },
                    "shipping": {
                        "type": "number",
                        "description": "Shipping",
                        "format": "decimal",
                        "nullable": true
                    },
                    "restockingFee": {
                        "type": "number",
                        "description": "Restocking Fee",
                        "format": "decimal",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return",
                        "format": "int64",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.UpdateReturnItemModel"
                        },
                        "description": "List of return items"
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this return"
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to update return"
            },
            "Inventory.V2.UpdateReturnItemModel": {
                "required": [
                    "id",
                    "skuId",
                    "quantity",
                    "cost"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Item ID",
                        "format": "int64"
                    },
                    "skuId": {
                        "type": "integer",
                        "description": "SKU ID",
                        "format": "int64"
                    },
                    "itemDescription": {
                        "type": "string",
                        "description": "Item Description",
                        "format": "html",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Cost",
                        "format": "decimal"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.CancelResourceRequest_Of_Inventory.V2.ReturnCancellationReason": {
                "type": "object",
                "properties": {
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ReturnCancellationReason"
                            }
                        ],
                        "description": "Resource cancellation reason"
                    }
                },
                "additionalProperties": false,
                "description": "Cancel Resource Request"
            },
            "Inventory.V2.ReturnCancellationReason": {
                "enum": [
                    "NotRequired",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Default",
                    "NotRequired",
                    "Duplicate",
                    "Accidental",
                    "VendorIssue",
                    "Other",
                    "JobCanceled"
                ]
            },
            "Inventory.V2.CreateInventoryReturnRequest": {
                "required": [
                    "vendorId",
                    "returnTypeId",
                    "businessUnitId",
                    "inventoryLocationId",
                    "returnDate",
                    "tax",
                    "shipping",
                    "restockingFee"
                ],
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "integer",
                        "description": "Vendor Id",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Job Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "purchaseOrderId": {
                        "type": "integer",
                        "description": "Purchase order Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "returnTypeId": {
                        "type": "integer",
                        "description": "Return type Id",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "Business unit Id",
                        "format": "int64"
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return",
                        "format": "int64",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number",
                        "nullable": true
                    },
                    "inventoryLocationId": {
                        "type": "integer",
                        "description": "Location Id",
                        "format": "int64"
                    },
                    "returnDate": {
                        "type": "string",
                        "description": "Return date",
                        "format": "date-time"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "nullable": true
                    },
                    "tax": {
                        "type": "number",
                        "description": "Tax rate",
                        "format": "decimal"
                    },
                    "shipping": {
                        "type": "number",
                        "description": "Shipping cost",
                        "format": "decimal"
                    },
                    "restockingFee": {
                        "type": "number",
                        "description": "Restocking fee",
                        "format": "decimal"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CreateInventoryReturnItemRequest"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to create return"
            },
            "Inventory.V2.CreateInventoryReturnItemRequest": {
                "required": [
                    "skuId",
                    "quantity",
                    "cost"
                ],
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "integer",
                        "description": "Sku Id",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity",
                        "format": "decimal"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Cost",
                        "format": "decimal"
                    },
                    "shipmentItemId": {
                        "type": "integer",
                        "description": "Shipment item Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "budgetCodeId": {
                        "type": "integer",
                        "description": "Budget code Id for the return item",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inventory return create item request"
            },
            "Inventory.V2.CreateReturnTypeRequest": {
                "required": [
                    "name",
                    "automaticallyReceiveVendorCredit",
                    "includeInSalesTax",
                    "isDefault",
                    "isDefaultForConsignment"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Return Type"
                    },
                    "automaticallyReceiveVendorCredit": {
                        "type": "boolean",
                        "description": "Should the return type allow receiving Vendor Credits automatically."
                    },
                    "includeInSalesTax": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDefaultForConsignment": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create Return Types"
            },
            "Inventory.V2.UpdateReturnTypeRequest": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of the Return Type",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is the Return Type Active"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Return Type"
                    },
                    "automaticallyReceiveVendorCredit": {
                        "type": "boolean",
                        "description": "Should the return type allow receiving Vendor Credits automatically."
                    },
                    "includeInSalesTax": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDefaultForConsignment": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to Update Return Types"
            },
            "PaginatedResponse_Of_Inventory.V2.ListReturnTypesResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ListReturnTypesResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.ListReturnTypesResponse": {
                "required": [
                    "id",
                    "automaticallyReceiveVendorCredit",
                    "includeInSalesTax",
                    "active",
                    "isDefault",
                    "isDefaultForConsignment",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Return Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Return Type",
                        "nullable": true
                    },
                    "automaticallyReceiveVendorCredit": {
                        "type": "boolean",
                        "description": "Should the return type allow receiving Vendor Credits automatically."
                    },
                    "includeInSalesTax": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDefaultForConsignment": {
                        "type": "boolean"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time return type was modified date",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Inventory.V2.InventoryTransferResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryTransferResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.InventoryTransferResponse": {
                "required": [
                    "id",
                    "transferType",
                    "status",
                    "number",
                    "referenceNumber",
                    "fromLocationId",
                    "toLocationId",
                    "memo",
                    "date",
                    "createdOn",
                    "modifiedOn",
                    "syncStatus",
                    "active",
                    "items",
                    "customFields"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Inventory transfer Id",
                        "format": "int64"
                    },
                    "transferType": {
                        "type": "string",
                        "description": "Type"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status"
                    },
                    "number": {
                        "type": "string",
                        "description": "Number"
                    },
                    "referenceNumber": {
                        "type": "string",
                        "description": "Reference number"
                    },
                    "fromLocationId": {
                        "type": "integer",
                        "description": "Inventory location to transfer from",
                        "format": "int64"
                    },
                    "toLocationId": {
                        "type": "integer",
                        "description": "Inventory location where transfer is going",
                        "format": "int64"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "Employee who created this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo/summary field",
                        "format": "multiline"
                    },
                    "date": {
                        "type": "string",
                        "description": "Transfer date",
                        "format": "date-time"
                    },
                    "pickedDate": {
                        "type": "string",
                        "description": "Transfer picked date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "receivedDate": {
                        "type": "string",
                        "description": "Transfer recevived date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time transfer was modified date",
                        "format": "date-time"
                    },
                    "batchId": {
                        "type": "integer",
                        "description": "Batch Id (Deprecated - Use Batch instead)",
                        "format": "int64",
                        "nullable": true,
                        "deprecated": true,
                        "x-deprecatedMessage": "Use Batch instead"
                    },
                    "batch": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.BatchResponse"
                            }
                        ],
                        "description": "Batch",
                        "nullable": true
                    },
                    "syncStatus": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.SyncStatus"
                            }
                        ],
                        "description": "Sync status"
                    },
                    "dateRequired": {
                        "type": "string",
                        "description": "Transfer required by date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Id of job associated with transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "Id of invoice associated with transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledById": {
                        "type": "integer",
                        "description": "Employee who canceled this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "canceledReason": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.InventoryReasonTransactionCanceled"
                            }
                        ],
                        "description": "Reason the transfer was canceled",
                        "nullable": true
                    },
                    "dateCanceled": {
                        "type": "string",
                        "description": "Transfer canceled date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Is active"
                    },
                    "pickedById": {
                        "type": "integer",
                        "description": "Employee who picked this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "receivedById": {
                        "type": "integer",
                        "description": "Employee who received this transfer",
                        "format": "int64",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.InventoryTransferItemResponse"
                        },
                        "description": "Collection of transfer items"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CustomFieldResponse"
                        },
                        "description": "Collection of custom fields"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this return,\nthat corresponds to the application guid provided in the request.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inventory transfer response"
            },
            "Inventory.V2.UpdateTransferRequest": {
                "type": "object",
                "properties": {
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this transfer"
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to update transfer"
            },
            "PaginatedResponse_Of_Inventory.V2.TruckResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.TruckResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.TruckResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "memo",
                    "technicianIds",
                    "createdOn",
                    "modifiedOn",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Truck Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Truck Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo",
                        "format": "multiline"
                    },
                    "warehouseId": {
                        "type": "integer",
                        "description": "Warehouse Id for this truck",
                        "format": "int64",
                        "nullable": true
                    },
                    "technicianIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Technician Ids associated with this truck"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time truck was modified date",
                        "format": "date-time"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this warehouse,\nthat corresponds to the application guid provided in the request."
                    }
                },
                "additionalProperties": false,
                "description": "Represents truck response"
            },
            "Inventory.V2.UpdateTruckRequest": {
                "type": "object",
                "properties": {
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this truck"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update truck"
            },
            "Inventory.V2.CreateVendorRequest": {
                "required": [
                    "name",
                    "active",
                    "isTruckReplenishment",
                    "taxRate",
                    "restrictedMobileCreation",
                    "address"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo",
                        "format": "multiline",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Contact First name",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Contact Last Name",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "description": "Contact Phone",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "Contact Email",
                        "nullable": true
                    },
                    "fax": {
                        "type": "string",
                        "description": "Contact Fax",
                        "nullable": true
                    },
                    "isTruckReplenishment": {
                        "type": "boolean",
                        "description": "Replenishment Vendor"
                    },
                    "deliveryOption": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InventoryUnsafe.PurchaseOrderDeliveryOption"
                            }
                        ],
                        "description": "Default PO Delivery Method",
                        "nullable": true
                    },
                    "taxRate": {
                        "type": "number",
                        "description": "Default Tax Rate",
                        "format": "decimal"
                    },
                    "restrictedMobileCreation": {
                        "type": "boolean",
                        "description": "Restrict PO Creation in Mobile"
                    },
                    "vendorQuickbooksItem": {
                        "type": "string",
                        "description": "Vendor Quickbooks Item",
                        "nullable": true
                    },
                    "paymentTermId": {
                        "type": "integer",
                        "description": "Payment Term Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "remittanceVendorId": {
                        "type": "integer",
                        "description": "Remittance Vendor Id",
                        "format": "int64",
                        "nullable": true
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressRequest"
                            }
                        ],
                        "description": "Address"
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataCreateRequest"
                            }
                        ],
                        "description": "Optional model that contains a list of external data items\nthat should be attached to this vendor.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.TagRequest"
                        },
                        "description": "Tags",
                        "nullable": true
                    },
                    "vendorContacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.CreateVendorContactRequest"
                        },
                        "description": "Email Recipients",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create vendor"
            },
            "InventoryUnsafe.PurchaseOrderDeliveryOption": {
                "enum": [
                    "Manual",
                    "EmailAsExcel",
                    "EmailAsPdf",
                    "EmailAsPdfRollupView",
                    "Electronic",
                    "MarkAsSent",
                    "EmailAsExcelAndPdf",
                    "VendorPortal"
                ],
                "type": "string",
                "description": "How purchase order is sent/delivered to a vendor",
                "x-enumNames": [
                    "Manual",
                    "EmailAsExcel",
                    "EmailAsPdf",
                    "EmailAsPdfRollupView",
                    "Electronic",
                    "MarkAsSent",
                    "EmailAsExcelAndPdf",
                    "VendorPortal"
                ]
            },
            "Inventory.V2.ExternalDataCreateRequest": {
                "required": [
                    "applicationGuid",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "applicationGuid": {
                        "type": "string",
                        "description": "Items that are created with a specific guid, could be fetched/updated/removed\nonly when the same application guid is provided.",
                        "format": "guid"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "External data list."
                    }
                },
                "additionalProperties": false
            },
            "Inventory.V2.TagRequest": {
                "required": [
                    "tagTypeId"
                ],
                "type": "object",
                "properties": {
                    "tagTypeId": {
                        "type": "integer",
                        "description": "Tag Type Id",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": "Represents tag request"
            },
            "Inventory.V2.CreateVendorContactRequest": {
                "required": [
                    "name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    }
                },
                "additionalProperties": false,
                "description": "Request model to create vendor contact"
            },
            "PaginatedResponse_Of_Inventory.V2.VendorResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.VendorResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.VendorResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "isTruckReplenishment",
                    "isMobileCreationRestricted",
                    "memo",
                    "deliveryOption",
                    "defaultTaxRate",
                    "contactInfo",
                    "address",
                    "createdOn",
                    "modifiedOn",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Vendor Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vendor name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active/Inactive status"
                    },
                    "isTruckReplenishment": {
                        "type": "boolean",
                        "description": "Indicates if vendor can be used for replenishment"
                    },
                    "isMobileCreationRestricted": {
                        "type": "boolean",
                        "description": "Indicates if vendor can be used for purchasing on mobile"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Vendor memo",
                        "format": "multiline"
                    },
                    "deliveryOption": {
                        "type": "string",
                        "description": "Default delivery option"
                    },
                    "defaultTaxRate": {
                        "type": "number",
                        "description": "Default tax rate for this vendor",
                        "format": "decimal"
                    },
                    "contactInfo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.VendorContactInfoResponse"
                            }
                        ],
                        "description": "Vendor contact information"
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Vendor address"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "system created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "last time adjustment was modified date",
                        "format": "date-time"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this vendor,\nthat corresponds to the application guid provided in the request."
                    }
                },
                "additionalProperties": false,
                "description": "Vendor response"
            },
            "Inventory.V2.VendorContactInfoResponse": {
                "required": [
                    "firstName",
                    "lastName",
                    "phone",
                    "email",
                    "fax"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "Vendor first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Vendor last name"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Vendor phone"
                    },
                    "email": {
                        "type": "string",
                        "description": "Vendor email"
                    },
                    "fax": {
                        "type": "string",
                        "description": "Vendor fax"
                    }
                },
                "additionalProperties": false,
                "description": "Vendor contact info response"
            },
            "Inventory.V2.UpdateVendorRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo",
                        "format": "multiline"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Contact First name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Contact Last Name"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Contact Phone"
                    },
                    "email": {
                        "type": "string",
                        "description": "Contact Email"
                    },
                    "fax": {
                        "type": "string",
                        "description": "Contact Fax"
                    },
                    "isTruckReplenishment": {
                        "type": "boolean",
                        "description": "Replenishment Vendor"
                    },
                    "deliveryOption": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InventoryUnsafe.PurchaseOrderDeliveryOption"
                            }
                        ],
                        "description": "Default PO Delivery Method"
                    },
                    "taxRate": {
                        "type": "number",
                        "description": "Default Tax Rate",
                        "format": "decimal"
                    },
                    "restrictedMobileCreation": {
                        "type": "boolean",
                        "description": "Restrict PO Creation in Mobile"
                    },
                    "vendorQuickbooksItem": {
                        "type": "string",
                        "description": "Vendor Quickbooks Item"
                    },
                    "paymentTermId": {
                        "type": "integer",
                        "description": "Payment Term Id",
                        "format": "int64"
                    },
                    "remittanceVendorId": {
                        "type": "integer",
                        "description": "Remittance Vendor Id",
                        "format": "int64"
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressRequest"
                            }
                        ],
                        "description": "Address"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.TagRequest"
                        },
                        "description": "Tags"
                    },
                    "vendorContacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.UpdateVendorContactRequest"
                        },
                        "description": "Email Recipients"
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this vendor"
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to update vendor"
            },
            "Inventory.V2.UpdateVendorContactRequest": {
                "required": [
                    "name",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id of Vendor Contact to update",
                        "format": "int64",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    }
                },
                "additionalProperties": false,
                "description": "Represents request to update vendor contact"
            },
            "PaginatedResponse_Of_Inventory.V2.WarehouseResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.WarehouseResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Inventory.V2.WarehouseResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "address",
                    "createdOn",
                    "modifiedOn",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Warehouse Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Warehouse Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Active"
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.AddressResponse"
                            }
                        ],
                        "description": "Warehouse address"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "System created date",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Last time warehouse was modified date",
                        "format": "date-time"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this warehouse,\nthat corresponds to the application guid provided in the request."
                    }
                },
                "additionalProperties": false,
                "description": "Represents warehouse response"
            },
            "Inventory.V2.UpdateWarehouseRequest": {
                "type": "object",
                "properties": {
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Inventory.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "Contains a list of external data items that should be attached to this warehouse"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a request to update warehouse"
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "ST-App-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "servicetitanapplicationkey",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}