# serializer version: 1
# name: test_catalog_changes[activity_codes]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'earningCategory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'earningCategory': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'activity_codes',
    'tap_stream_id': 'activity_codes',
  })
# ---
# name: test_catalog_changes[adgroup_performance]
  dict({
    'key_properties': list([
      'adGroup_id',
      'date',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from_utc',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to_utc',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup_id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'category',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'launchDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressionShare',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clicks',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'averageCPC',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'allConversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clickRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'costPerConversion',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversionRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leads',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leadCalls',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'onlineBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'manualBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookedJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'ranJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'soldJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'revenue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookingRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'avgTicket',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnOnInvestment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'adGroup_id',
            'date',
          ]),
          'valid-replication-keys': list([
            'from_utc',
          ]),
        }),
      }),
    ]),
    'replication_key': 'from_utc',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'adGroup': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'adGroup_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'campaign': dict({
          'additionalProperties': True,
          'properties': dict({
            'category': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'launchDate': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'campaign_id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaign_name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'digitalStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'allConversions': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'averageCPC': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clickRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clicks': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'conversionRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'conversions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'costPerConversion': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressionShare': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'from_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'keyword': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'keyword_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'avgTicket': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'bookedJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'bookingRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'leadCalls': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'leads': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'manualBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'onlineBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'ranJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'revenue': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'soldJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'returnOnInvestment': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'to_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'adgroup_performance',
    'tap_stream_id': 'adgroup_performance',
  })
# ---
# name: test_catalog_changes[adjustments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batchId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'batchId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventoryLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'code': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'adjustments',
    'tap_stream_id': 'adjustments',
  })
# ---
# name: test_catalog_changes[ap_credits]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryReturnId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'canceledOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'splits',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'amount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'appliedAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'canceledOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventoryReturnId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paymentStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'remittanceVendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'splits': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'amount': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'inventoryBillId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'vendorCreditId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'vendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'ap_credits',
    'tap_stream_id': 'ap_credits',
  })
# ---
# name: test_catalog_changes[ap_payments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'approvedDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'method',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'printCheck',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'errorMessage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'glAccount',
          'properties',
          'detailType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'remittanceVendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'splits',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'amount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'approvedDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'errorMessage': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'glAccount': dict({
          'additionalProperties': True,
          'properties': dict({
            'detailType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'method': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'printCheck': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'remittanceVendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'splits': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'amount': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'documentId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'inventoryBillId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'vendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'ap_payments',
    'tap_stream_id': 'ap_payments',
  })
# ---
# name: test_catalog_changes[appointment_assignments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPaused',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appointmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'assignedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'assignedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isPaused': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'technicianName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'appointment_assignments',
    'tap_stream_id': 'appointment_assignments',
  })
# ---
# name: test_catalog_changes[appointments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointmentNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'end',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'arrivalWindowStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'arrivalWindowEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'specialInstructions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unused',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConfirmed',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appointmentNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'arrivalWindowEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'arrivalWindowStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'end': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isConfirmed': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'specialInstructions': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'unused': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'appointments',
    'tap_stream_id': 'appointments',
  })
# ---
# name: test_catalog_changes[arrival_windows]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnitIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'start': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'arrival_windows',
    'tap_stream_id': 'arrival_windows',
  })
# ---
# name: test_catalog_changes[attributed_leads]
  dict({
    'key_properties': list([
      'dateTime',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'dateTime',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'utmSource',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'utmMedium',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'utmCampaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'landingPageUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'referrerUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'clickId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'stCampaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'originalCampaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'attributionOverwriteType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'attributionOverwriteId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'overwrittenBookingJobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'adGroupId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'adGroupName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'keywordId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attribution',
          'properties',
          'keywordName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'callerNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'trackingNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'call',
          'properties',
          'excusedReason',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadForm',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadForm',
          'properties',
          'leadNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadForm',
          'properties',
          'leadStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadForm',
          'properties',
          'notes',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'booking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'booking',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'dateTime',
          ]),
          'valid-replication-keys': list([
            'dateTime',
          ]),
        }),
      }),
    ]),
    'replication_key': 'dateTime',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'attribution': dict({
          'additionalProperties': True,
          'properties': dict({
            'adGroupId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'adGroupName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'attributionOverwriteId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'attributionOverwriteType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'clickId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'keywordId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'keywordName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'landingPageUrl': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'originalCampaign': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'overwrittenBookingJobId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'referrerUrl': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'stCampaignId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'utmCampaign': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmMedium': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmSource': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'booking': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'call': dict({
          'additionalProperties': True,
          'properties': dict({
            'callerNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'excusedReason': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'source': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'trackingNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'dateTime': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'leadForm': dict({
          'additionalProperties': True,
          'properties': dict({
            'leadNumber': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'leadStatus': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'notes': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'leadType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'attributed_leads',
    'tap_stream_id': 'attributed_leads',
  })
# ---
# name: test_catalog_changes[booking_provider_tags]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'booking_provider_tags',
    'tap_stream_id': 'booking_provider_tags',
  })
# ---
# name: test_catalog_changes[bookings]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isFirstTimeClient',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'uploadedImages',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isSendConfirmationEmail',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dismissingReasonId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookingProviderId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'bookingProviderId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaignId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dismissingReasonId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'externalId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isFirstTimeClient': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isSendConfirmationEmail': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'uploadedImages': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'bookings',
    'tap_stream_id': 'bookings',
  })
# ---
# name: test_catalog_changes[business_hours]
  dict({
    'key_properties': list([
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'weekdays',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'saturday',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sunday',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'saturday': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'fromHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'toHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'sunday': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'fromHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'toHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'weekdays': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'fromHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'toHour': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'business_hours',
    'tap_stream_id': 'business_hours',
  })
# ---
# name: test_catalog_changes[business_units]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'officialName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceHeader',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceMessage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultTaxRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'authorizationParagraph',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'acknowledgementParagraph',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'materialSku',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'quickbooksClass',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'accountCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'franchiseId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'conceptCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'corporateContractNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'accountCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'franchiseId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'conceptCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tenant',
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'accountCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'acknowledgementParagraph': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'authorizationParagraph': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'conceptCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'corporateContractNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'defaultTaxRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'email': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'franchiseId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceHeader': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceMessage': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'materialSku': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'officialName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'phoneNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'quickbooksClass': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tenant': dict({
          'additionalProperties': True,
          'properties': dict({
            'accountCode': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'conceptCode': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'franchiseId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'modifiedOn': dict({
              'format': 'date-time',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'business_units',
    'tap_stream_id': 'business_units',
  })
# ---
# name: test_catalog_changes[call_reasons]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isLead',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isLead': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'call_reasons',
    'tap_stream_id': 'call_reasons',
  })
# ---
# name: test_catalog_changes[calls]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'direction',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recordingUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'voiceMailPath',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'agent',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'agent',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'agent',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'agent': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'campaign': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdBy': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'direction': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'from': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'location': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reason': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'recordingUrl': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'to': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'voiceMailPath': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'calls',
    'tap_stream_id': 'calls',
  })
# ---
# name: test_catalog_changes[campaign_performance]
  dict({
    'key_properties': list([
      'campaign_id',
      'date',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from_utc',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to_utc',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'category',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'launchDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressionShare',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clicks',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'averageCPC',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'allConversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clickRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'costPerConversion',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversionRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leads',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leadCalls',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'onlineBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'manualBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookedJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'ranJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'soldJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'revenue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookingRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'avgTicket',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnOnInvestment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'campaign_id',
            'date',
          ]),
          'valid-replication-keys': list([
            'from_utc',
          ]),
        }),
      }),
    ]),
    'replication_key': 'from_utc',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'adGroup': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'adGroup_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'campaign': dict({
          'additionalProperties': True,
          'properties': dict({
            'category': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'launchDate': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'campaign_id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaign_name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'digitalStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'allConversions': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'averageCPC': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clickRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clicks': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'conversionRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'conversions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'costPerConversion': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressionShare': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'from_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'keyword': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'keyword_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'avgTicket': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'bookedJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'bookingRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'leadCalls': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'leads': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'manualBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'onlineBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'ranJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'revenue': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'soldJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'returnOnInvestment': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'to_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'campaign_performance',
    'tap_stream_id': 'campaign_performance',
  })
# ---
# name: test_catalog_changes[campaigns]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'category',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'category',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'category',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'category',
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherSource',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'medium',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherMedium',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignPhoneNumbers',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'campaignPhoneNumbers': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'category': dict({
          'additionalProperties': True,
          'properties': dict({
            'active': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'medium': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'otherMedium': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'otherSource': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'campaigns',
    'tap_stream_id': 'campaigns',
  })
# ---
# name: test_catalog_changes[capacities]
  dict({
    'key_properties': list([
      'startUtc',
      'businessUnitIds',
      'technician_id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'end',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startUtc',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'endUtc',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitIds',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technician_id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technician_name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technician_status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technician_hasRequiredSkills',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'totalAvailability',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'openAvailability',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isExceedingIdealBookingPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'startUtc',
            'businessUnitIds',
            'technician_id',
          ]),
          'valid-replication-keys': list([
            'startUtc',
          ]),
        }),
      }),
    ]),
    'replication_key': 'startUtc',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'businessUnitIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'end': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'endUtc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isExceedingIdealBookingPercentage': dict({
          'description': 'Indicate if Ideal Booking Percentage is exceeded',
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'openAvailability': dict({
          'description': 'Number of remaining hours that can be booked during this time frame',
          'type': list([
            'number',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'startUtc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technician_hasRequiredSkills': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'technician_id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'technician_name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technician_status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'totalAvailability': dict({
          'description': 'Number of hours that total capacity can allow to be booked during this time frame',
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'capacities',
    'tap_stream_id': 'capacities',
  })
# ---
# name: test_catalog_changes[capacity_warnings]
  dict({
    'key_properties': list([
      'campaignName',
      'warningType',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'campaignName',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warningType',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnits',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'lookaheadWindow',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'thresholdValue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'campaignName',
            'warningType',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'businessUnits': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'campaignName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'lookaheadWindow': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'thresholdValue': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'warningType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'capacity_warnings',
    'tap_stream_id': 'capacity_warnings',
  })
# ---
# name: test_catalog_changes[categories]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'image',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'parentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'position',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categoryType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subcategories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skuImages',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skuVideos',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnitIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'categoryType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'image': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'parentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'position': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'skuImages': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'skuVideos': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'subcategories': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'businessUnitIds': dict({
                'items': dict({
                  'type': list([
                    'integer',
                  ]),
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'categoryType': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'externalId': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'image': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'parentId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'position': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'skuImages': dict({
                'items': dict({
                  'type': list([
                    'string',
                  ]),
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'skuVideos': dict({
                'items': dict({
                  'type': list([
                    'string',
                  ]),
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'source': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'categories',
    'tap_stream_id': 'categories',
  })
# ---
# name: test_catalog_changes[client_specific_pricing]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exceptions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'exceptions': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'skuType': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'valueType': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'client_specific_pricing',
    'tap_stream_id': 'client_specific_pricing',
  })
# ---
# name: test_catalog_changes[costs]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'year',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'month',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dailyCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'campaignId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'dailyCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'month': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'year': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'costs',
    'tap_stream_id': 'costs',
  })
# ---
# name: test_catalog_changes[customer_contacts]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
          'properties',
          'phoneNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
          'properties',
          'doNotText',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'value',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'phoneSettings': dict({
          'additionalProperties': True,
          'properties': dict({
            'doNotText': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'phoneNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'value': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'customer_contacts',
    'tap_stream_id': 'customer_contacts',
  })
# ---
# name: test_catalog_changes[customer_notes]
  dict({
    'key_properties': list([
      'createdById',
      'createdOn',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'text',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPinned',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'createdById',
            'createdOn',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isPinned': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'text': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'customer_notes',
    'tap_stream_id': 'customer_notes',
  })
# ---
# name: test_catalog_changes[customers]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'latitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'longitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'balance',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagTypeIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'doNotMail',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'doNotService',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'mergedToId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'latitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'longitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'balance': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'doNotMail': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'doNotService': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'mergedToId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagTypeIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'customers',
    'tap_stream_id': 'customers',
  })
# ---
# name: test_catalog_changes[customers_custom_fields]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataTypeOptions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'required',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'enabled',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allowOnBulkUpdate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allowOnBulkUpdate': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataTypeOptions': dict({
          'description': 'The type custom field type (e.g. Text, Dropdown, or Numeric)',
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'enabled': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'required': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'customers_custom_fields',
    'tap_stream_id': 'customers_custom_fields',
  })
# ---
# name: test_catalog_changes[discounts_and_fees]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amountType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'limit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'crossSaleGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'excludeFromPayroll',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'amount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'amountType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'assets': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'url': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'bonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'categories': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'commissionBonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'crossSaleGroup': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'excludeFromPayroll': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'hours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'limit': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'taxable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'discounts_and_fees',
    'tap_stream_id': 'discounts_and_fees',
  })
# ---
# name: test_catalog_changes[employees]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'userId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'role',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'roleIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'loginName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'aadUserId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'permissions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'aadUserId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'email': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'loginName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'permissions': dict({
          'items': dict({
            'oneOf': list([
              dict({
                'additionalProperties': True,
                'properties': dict({
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'value': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': 'object',
              }),
              dict({
                'type': 'null',
              }),
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'phoneNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'role': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'roleIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'userId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'employees',
    'tap_stream_id': 'employees',
  })
# ---
# name: test_catalog_changes[equipment]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'model',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recommendations',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'upgrades',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'equipmentMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorPart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'accountName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'otherSubAccounts',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherVendors',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'crossSaleGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitOfMeasure',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isInventory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConfigurableEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'variationsOrConfigurableEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'addOnMemberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'addOnPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'assetAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'assets': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'url': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'bonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'categories': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'commissionBonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'cost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'costOfSaleAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'crossSaleGroup': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'equipmentMaterials': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isConfigurableEquipment': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isInventory': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'manufacturer': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'manufacturerWarranty': dict({
          'additionalProperties': True,
          'properties': dict({
            'description': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'memberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'model': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'otherVendors': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'memo': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'otherSubAccounts': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'accountName': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'cost': dict({
                      'type': list([
                        'number',
                        'null',
                      ]),
                    }),
                    'id': dict({
                      'type': list([
                        'integer',
                        'null',
                      ]),
                    }),
                  }),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'primarySubAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'vendorId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'vendorName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'vendorPart': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'price': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'primaryVendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'active': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'memo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'otherSubAccounts': dict({
              'items': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                }),
                'type': 'object',
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
            'primarySubAccount': dict({
              'additionalProperties': True,
              'properties': dict({
                'accountName': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'cost': dict({
                  'type': list([
                    'number',
                    'null',
                  ]),
                }),
                'id': dict({
                  'type': list([
                    'integer',
                    'null',
                  ]),
                }),
              }),
              'type': list([
                'object',
                'null',
              ]),
            }),
            'vendorId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'vendorName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'vendorPart': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'recommendations': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'serviceProviderWarranty': dict({
          'additionalProperties': True,
          'properties': dict({
            'description': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'unitOfMeasure': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'upgrades': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'variationsOrConfigurableEquipment': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'equipment',
    'tap_stream_id': 'equipment',
  })
# ---
# name: test_catalog_changes[estimate_items]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimate_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'soldHours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'generalLedgerAccountId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'generalLedgerAccountName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skuAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'qty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'totalCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'itemGroupName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'itemGroupRootId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'chargeable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceItemId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'chargeable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'estimate_id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceItemId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'itemGroupName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'itemGroupRootId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'qty': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'sku': dict({
          'additionalProperties': True,
          'properties': dict({
            'displayName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'generalLedgerAccountId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'generalLedgerAccountName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'modifiedOn': dict({
              'format': 'date-time',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'soldHours': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'skuAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'totalCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'unitCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'unitRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'estimate_items',
    'tap_stream_id': 'estimate_items',
  })
# ---
# name: test_catalog_changes[estimates]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
          'properties',
          'value',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reviewStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalLinks',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subtotal',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'externalLinks': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'url': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'chargeable': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'invoiceItemId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'itemGroupName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'itemGroupRootId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'membershipTypeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'modifiedOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'qty': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'sku': dict({
                'additionalProperties': True,
                'properties': dict({
                  'displayName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'generalLedgerAccountId': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'generalLedgerAccountName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'modifiedOn': dict({
                    'format': 'date-time',
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'soldHours': dict({
                    'type': list([
                      'number',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'skuAccount': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'total': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'totalCost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'unitCost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'unitRate': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'reviewStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'soldBy': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'soldOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'additionalProperties': True,
          'properties': dict({
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'value': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'subtotal': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'estimates',
    'tap_stream_id': 'estimates',
  })
# ---
# name: test_catalog_changes[export_equipment]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'model',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recommendations',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'upgrades',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'equipmentMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorPart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'accountName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'otherSubAccounts',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherVendors',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'crossSaleGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitOfMeasure',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isInventory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConfigurableEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'variationsOrConfigurableEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'typeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayInAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccountId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultAssetUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dimensions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dimensions',
          'properties',
          'height',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dimensions',
          'properties',
          'width',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dimensions',
          'properties',
          'depth',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'description': 'The accounting account assigned to the SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'description': 'Active shows if the SKU is active or inactive',
          'type': list([
            'boolean',
          ]),
        }),
        'addOnMemberPrice': dict({
          'description': 'The price if the SKU is sold to a member as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'addOnPrice': dict({
          'description': 'The price of the SKU is sold as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'assetAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'assets': dict({
          'description': 'Images, videos or PDFs attached to SKU',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'description': 'Asset alias',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'description': 'Asset file name when downloaded',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'isDefault': dict({
                'description': 'It is the default asset',
                'type': list([
                  'boolean',
                ]),
              }),
              'type': dict({
                'description': 'Asset type - image, video or PDF',
                'type': list([
                  'string',
                ]),
              }),
              'url': dict({
                'description': 'Asset URL',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'isDefault',
              'type',
              'url',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'bonus': dict({
          'description': 'Flat rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'budgetCostCode': dict({
          'description': 'The Budget CostCode segment for this entity. (Note: BudgetCostType should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'budgetCostType': dict({
          'description': 'The Budget CostType segment for this entity (Note: BudgetCostCode should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'categories': dict({
          'description': 'Categories that this SKU belongs to',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': 'array',
        }),
        'code': dict({
          'description': 'Code for the SKU',
          'type': list([
            'string',
          ]),
        }),
        'commissionBonus': dict({
          'description': 'Percentage rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'cost': dict({
          'description': 'The cost paid to acquire the material',
          'type': list([
            'number',
          ]),
        }),
        'costOfSaleAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'description': "Shows Equipment's Created On Date",
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'crossSaleGroup': dict({
          'description': "A grouping of similar items that you'll then be able to track as a separate columns on the Technical Performance Board.",
          'type': list([
            'string',
            'null',
          ]),
        }),
        'defaultAssetUrl': dict({
          'description': 'Default Asset Url',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'description': 'Description on the SKU that is displayed with the item',
          'type': list([
            'string',
          ]),
        }),
        'dimensions': dict({
          'additionalProperties': True,
          'description': 'The equipment dimensions',
          'properties': dict({
            'depth': dict({
              'description': 'Depth',
              'type': list([
                'number',
                'null',
              ]),
            }),
            'height': dict({
              'description': 'Height',
              'type': list([
                'number',
                'null',
              ]),
            }),
            'width': dict({
              'description': 'Width',
              'type': list([
                'number',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'displayInAmount': dict({
          'description': 'Shows if it should be displayed in the amount',
          'type': list([
            'boolean',
          ]),
        }),
        'displayName': dict({
          'description': 'Name that displays with the SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'equipmentMaterials': dict({
          'description': 'Array of materials used with this equipment',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'description': 'Quantity of linked SKUs',
                'type': list([
                  'number',
                ]),
              }),
              'skuId': dict({
                'description': 'Linked SKU unique id',
                'type': list([
                  'integer',
                ]),
              }),
            }),
            'required': list([
              'skuId',
              'quantity',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'externalData': dict({
          'description': 'List of external data attached to this job, that corresponds to the application guid provided in the request.',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'description': 'External data key.',
                'type': list([
                  'string',
                ]),
              }),
              'value': dict({
                'description': 'External data value.',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'key',
              'value',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'description': 'External id is the id of the original source of the item when it comes from a catalog',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'generalLedgerAccountId': dict({
          'description': 'The General Ledger Account assigned to the SKU',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'hours': dict({
          'description': 'The number of hours associated with the installing the equipment',
          'type': list([
            'number',
          ]),
        }),
        'id': dict({
          'description': 'Unique id for the SKU',
          'type': list([
            'integer',
          ]),
        }),
        'isConfigurableEquipment': dict({
          'description': 'Shows if is a Configurable Equipment',
          'type': list([
            'boolean',
          ]),
        }),
        'isInventory': dict({
          'description': 'Is this equipment a part of your inventory',
          'type': list([
            'boolean',
          ]),
        }),
        'manufacturer': dict({
          'description': 'Name of the manufactures',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'manufacturerWarranty': dict({
          'additionalProperties': True,
          'description': 'Description of the manufacturer warranty included in this SKU',
          'properties': dict({
            'description': dict({
              'description': 'Description of the warranty included in this SKU',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'description': 'Warranty duration',
              'type': list([
                'integer',
              ]),
            }),
          }),
          'required': list([
            'duration',
          ]),
          'type': 'object',
        }),
        'memberPrice': dict({
          'description': 'The price if the item is sold to a member',
          'type': list([
            'number',
          ]),
        }),
        'model': dict({
          'description': 'The model of the equipment',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'description': 'Timestamp where the item was last modified',
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'otherVendors': dict({
          'description': 'Other vendors that you might go to acquire this SKU',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                ]),
              }),
              'memo': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'otherSubAccounts': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'accountName': dict({
                      'type': list([
                        'string',
                      ]),
                    }),
                    'cost': dict({
                      'type': list([
                        'number',
                      ]),
                    }),
                    'id': dict({
                      'type': list([
                        'integer',
                      ]),
                    }),
                  }),
                  'required': list([
                    'id',
                    'cost',
                    'accountName',
                  ]),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'primarySubAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                  'cost',
                  'accountName',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'vendorId': dict({
                'type': list([
                  'integer',
                ]),
              }),
              'vendorName': dict({
                'type': list([
                  'string',
                ]),
              }),
              'vendorPart': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'required': list([
              'id',
              'vendorName',
              'vendorId',
              'cost',
              'active',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'description': 'PaysCommissions shows if this task pays commission',
          'type': list([
            'boolean',
          ]),
        }),
        'price': dict({
          'description': 'Price of this SKU sold',
          'type': list([
            'number',
          ]),
        }),
        'primaryVendor': dict({
          'additionalProperties': True,
          'description': 'The primary vendor you use to acquire this SKU',
          'properties': dict({
            'active': dict({
              'type': list([
                'boolean',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
              ]),
            }),
            'memo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'otherSubAccounts': dict({
              'items': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                  'cost',
                  'accountName',
                ]),
                'type': 'object',
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
            'primarySubAccount': dict({
              'additionalProperties': True,
              'properties': dict({
                'accountName': dict({
                  'type': list([
                    'string',
                  ]),
                }),
                'cost': dict({
                  'type': list([
                    'number',
                  ]),
                }),
                'id': dict({
                  'type': list([
                    'integer',
                  ]),
                }),
              }),
              'required': list([
                'id',
                'cost',
                'accountName',
              ]),
              'type': list([
                'object',
                'null',
              ]),
            }),
            'vendorId': dict({
              'type': list([
                'integer',
              ]),
            }),
            'vendorName': dict({
              'type': list([
                'string',
              ]),
            }),
            'vendorPart': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
            'vendorName',
            'vendorId',
            'cost',
            'active',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'recommendations': dict({
          'description': 'Recommended services and materials to include with this SKU',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'skuId': dict({
                'description': 'SKU unique identifier',
                'type': list([
                  'integer',
                ]),
              }),
              'type': dict({
                'description': 'Recommended SKU type (Service or Material)',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'skuId',
              'type',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'serviceProviderWarranty': dict({
          'additionalProperties': True,
          'description': 'Description of the manufacturer warranty included in this SKU',
          'properties': dict({
            'description': dict({
              'description': 'Description of the warranty included in this SKU',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'description': 'Warranty duration',
              'type': list([
                'integer',
              ]),
            }),
          }),
          'required': list([
            'duration',
          ]),
          'type': 'object',
        }),
        'source': dict({
          'description': 'The source catalog for this SKU.',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'description': 'Is this SKU taxable',
          'type': list([
            'boolean',
          ]),
        }),
        'typeId': dict({
          'description': "Shows Equipment's Type Id",
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'unitOfMeasure': dict({
          'description': 'The unit of measure used for this SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'upgrades': dict({
          'description': 'Upgrades that can be sold for this SKU',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': 'array',
        }),
        'variationsOrConfigurableEquipment': dict({
          'description': 'List of added Variations if is a Configurable Equipment, or else the List of Configurable Equipment assigned to',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'code',
        'description',
        'active',
        'price',
        'memberPrice',
        'addOnPrice',
        'addOnMemberPrice',
        'manufacturerWarranty',
        'serviceProviderWarranty',
        'categories',
        'assets',
        'recommendations',
        'upgrades',
        'equipmentMaterials',
        'paysCommission',
        'bonus',
        'commissionBonus',
        'hours',
        'taxable',
        'cost',
        'isInventory',
        'modifiedOn',
        'isConfigurableEquipment',
        'displayInAmount',
        'createdOn',
      ]),
      'type': 'object',
    }),
    'stream': 'export_equipment',
    'tap_stream_id': 'export_equipment',
  })
# ---
# name: test_catalog_changes[export_materials]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'deductAsJobCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitOfMeasure',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isInventory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorPart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'accountName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'otherSubAccounts',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherVendors',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConfigurableMaterial',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'chargeableByDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'variationsOrConfigurableMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayInAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccountId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isOtherDirectCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultAssetUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'description': 'The accounting account assigned to the SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'description': 'Active shows if the SKU is active or inactive',
          'type': list([
            'boolean',
          ]),
        }),
        'addOnMemberPrice': dict({
          'description': 'The price if the SKU is sold to a member as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'addOnPrice': dict({
          'description': 'The price of the SKU is sold as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'assetAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'assets': dict({
          'description': 'Images, videos or PDFs attached to SKU',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'description': 'Asset alias',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'description': 'Asset file name when downloaded',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'isDefault': dict({
                'description': 'It is the default asset',
                'type': list([
                  'boolean',
                ]),
              }),
              'type': dict({
                'description': 'Asset type - image, video or PDF',
                'type': list([
                  'string',
                ]),
              }),
              'url': dict({
                'description': 'Asset URL',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'isDefault',
              'type',
              'url',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'bonus': dict({
          'description': 'Flat rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'budgetCostCode': dict({
          'description': 'The Budget CostCode segment for this entity. (Note: BudgetCostType should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'budgetCostType': dict({
          'description': 'The Budget CostType segment for this entity (Note: BudgetCostCode should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'description': "Material's business unit id",
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'categories': dict({
          'description': 'Categories that this SKU belongs to',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': 'array',
        }),
        'chargeableByDefault': dict({
          'description': 'Shows if material is going to be chargeable by default on Estimate or Invoice',
          'type': list([
            'boolean',
          ]),
        }),
        'code': dict({
          'description': 'Code for the SKU',
          'type': list([
            'string',
          ]),
        }),
        'commissionBonus': dict({
          'description': 'Percentage rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'cost': dict({
          'description': 'The cost paid to acquire the material',
          'type': list([
            'number',
          ]),
        }),
        'costOfSaleAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'costTypeId': dict({
          'description': 'The Cost Type of this Other Direct Cost',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'description': "Material's created by user id",
          'type': list([
            'integer',
          ]),
        }),
        'createdOn': dict({
          'description': 'Date Material was created',
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'deductAsJobCost': dict({
          'description': 'Is this deducted as job cost',
          'type': list([
            'boolean',
          ]),
        }),
        'defaultAssetUrl': dict({
          'description': 'Default Asset Url',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'description': 'Description on the SKU that is displayed with the item',
          'type': list([
            'string',
          ]),
        }),
        'displayInAmount': dict({
          'description': 'Shows if material is going to be displayed in amount',
          'type': list([
            'boolean',
          ]),
        }),
        'displayName': dict({
          'description': 'Name that displays with the SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'description': 'List of external data attached to this job, that corresponds to the application guid provided in the request.',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'description': 'External data key.',
                'type': list([
                  'string',
                ]),
              }),
              'value': dict({
                'description': 'External data value.',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'key',
              'value',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'description': 'External id is the id of the original source of the item when it comes from a catalog',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'generalLedgerAccountId': dict({
          'description': "Material's General Ledger Account Id",
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'hours': dict({
          'description': 'The number of hours associated with the installing the material',
          'type': list([
            'number',
          ]),
        }),
        'id': dict({
          'description': 'Unique id for the SKU',
          'type': list([
            'integer',
          ]),
        }),
        'isConfigurableMaterial': dict({
          'description': 'Shows if is a Configurable Material',
          'type': list([
            'boolean',
          ]),
        }),
        'isInventory': dict({
          'description': 'Is this material a part of your inventory',
          'type': list([
            'boolean',
          ]),
        }),
        'isOtherDirectCost': dict({
          'description': 'Shows if is Other Direct Cost',
          'type': list([
            'boolean',
          ]),
        }),
        'memberPrice': dict({
          'description': 'The price if the item is sold to a member',
          'type': list([
            'number',
          ]),
        }),
        'modifiedOn': dict({
          'description': 'Timestamp where the item was last modified',
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'otherVendors': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                ]),
              }),
              'memo': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'otherSubAccounts': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'accountName': dict({
                      'type': list([
                        'string',
                      ]),
                    }),
                    'cost': dict({
                      'type': list([
                        'number',
                      ]),
                    }),
                    'id': dict({
                      'type': list([
                        'integer',
                      ]),
                    }),
                  }),
                  'required': list([
                    'id',
                    'cost',
                    'accountName',
                  ]),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'primarySubAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                  'cost',
                  'accountName',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'vendorId': dict({
                'type': list([
                  'integer',
                ]),
              }),
              'vendorName': dict({
                'type': list([
                  'string',
                ]),
              }),
              'vendorPart': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'required': list([
              'id',
              'vendorName',
              'vendorId',
              'cost',
              'active',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'description': 'PaysCommissions shows if this task pays commission',
          'type': list([
            'boolean',
          ]),
        }),
        'price': dict({
          'description': 'Price of this SKU sold',
          'type': list([
            'number',
          ]),
        }),
        'primaryVendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'active': dict({
              'type': list([
                'boolean',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
              ]),
            }),
            'memo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'otherSubAccounts': dict({
              'items': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                  'cost',
                  'accountName',
                ]),
                'type': 'object',
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
            'primarySubAccount': dict({
              'additionalProperties': True,
              'properties': dict({
                'accountName': dict({
                  'type': list([
                    'string',
                  ]),
                }),
                'cost': dict({
                  'type': list([
                    'number',
                  ]),
                }),
                'id': dict({
                  'type': list([
                    'integer',
                  ]),
                }),
              }),
              'required': list([
                'id',
                'cost',
                'accountName',
              ]),
              'type': list([
                'object',
                'null',
              ]),
            }),
            'vendorId': dict({
              'type': list([
                'integer',
              ]),
            }),
            'vendorName': dict({
              'type': list([
                'string',
              ]),
            }),
            'vendorPart': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
            'vendorName',
            'vendorId',
            'cost',
            'active',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'source': dict({
          'description': 'The source catalog for this SKU.',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'description': 'Is this SKU taxable',
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'unitOfMeasure': dict({
          'description': 'The unit of measure used for this SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'variationsOrConfigurableMaterials': dict({
          'description': 'List of added Variations if is a Configurable Material, or else the List of Configurable Materials assigned to',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'code',
        'description',
        'cost',
        'active',
        'price',
        'memberPrice',
        'addOnPrice',
        'addOnMemberPrice',
        'hours',
        'bonus',
        'commissionBonus',
        'paysCommission',
        'deductAsJobCost',
        'isInventory',
        'categories',
        'assets',
        'modifiedOn',
        'isConfigurableMaterial',
        'chargeableByDefault',
        'createdById',
        'createdOn',
        'displayInAmount',
        'isOtherDirectCost',
      ]),
      'type': 'object',
    }),
    'stream': 'export_materials',
    'tap_stream_id': 'export_materials',
  })
# ---
# name: test_catalog_changes[export_services]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isLabor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recommendations',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'upgrades',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'crossSaleGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldByCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultAssetUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'budgetCostType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'description': 'The accounting account assigned to this SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'description': 'Active shows if the SKU is active or inactive',
          'type': list([
            'boolean',
          ]),
        }),
        'addOnMemberPrice': dict({
          'description': 'The price if the SKU is sold to a member as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'addOnPrice': dict({
          'description': 'The price of the SKU is sold as an add-on item',
          'type': list([
            'number',
          ]),
        }),
        'assets': dict({
          'description': 'Images, videos or PDFs attached to SKU',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'description': 'Asset alias',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'description': 'Asset file name when downloaded',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'isDefault': dict({
                'description': 'It is the default asset',
                'type': list([
                  'boolean',
                ]),
              }),
              'type': dict({
                'description': 'Asset type - image, video or PDF',
                'type': list([
                  'string',
                ]),
              }),
              'url': dict({
                'description': 'Asset URL',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'isDefault',
              'type',
              'url',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'bonus': dict({
          'description': 'Flat rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'budgetCostCode': dict({
          'description': 'The Budget CostCode segment for this entity. (Note: BudgetCostType should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'budgetCostType': dict({
          'description': 'The Budget CostType segment for this entity (Note: BudgetCostCode should also be provided)',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'description': "Service's Bussiness Unit Id",
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'categories': dict({
          'description': 'Categories that this SKU belongs to',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'description': 'Active shows if the Category is active or inactive',
                'type': list([
                  'boolean',
                ]),
              }),
              'id': dict({
                'description': 'Unique Category Id',
                'type': list([
                  'integer',
                ]),
              }),
              'name': dict({
                'description': 'Category name',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'id',
              'name',
              'active',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'code': dict({
          'description': 'Code for the SKU',
          'type': list([
            'string',
          ]),
        }),
        'commissionBonus': dict({
          'description': 'Percentage rate bonus paid for this task',
          'type': list([
            'number',
          ]),
        }),
        'cost': dict({
          'description': 'Service Cost',
          'type': list([
            'number',
          ]),
        }),
        'createdOn': dict({
          'description': 'Timestamp when the item was created',
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'crossSaleGroup': dict({
          'description': "A grouping of similar items that you'll then be able to track as a separate columns on the Technical Performance Board.",
          'type': list([
            'string',
            'null',
          ]),
        }),
        'defaultAssetUrl': dict({
          'description': 'Default Asset Url',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'description': 'Description on the SKU that is displayed with the item',
          'type': list([
            'string',
          ]),
        }),
        'displayName': dict({
          'description': 'Name that displays with the SKU',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'description': 'List of external data attached to this job, that corresponds to the application guid provided in the request.',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'description': 'External data key.',
                'type': list([
                  'string',
                ]),
              }),
              'value': dict({
                'description': 'External data value.',
                'type': list([
                  'string',
                ]),
              }),
            }),
            'required': list([
              'key',
              'value',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'description': 'External id is the id of the original source of the item when it comes from a catalog',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hours': dict({
          'description': 'Hours needed to complete this service',
          'type': list([
            'number',
          ]),
        }),
        'id': dict({
          'description': 'Unique id for the SKU',
          'type': list([
            'integer',
          ]),
        }),
        'isLabor': dict({
          'description': 'Is a labor service',
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'memberPrice': dict({
          'description': 'The price if the item is sold to a member',
          'type': list([
            'number',
          ]),
        }),
        'modifiedOn': dict({
          'description': 'Timestamp when the item was last modified',
          'format': 'date-time',
          'type': list([
            'string',
          ]),
        }),
        'paysCommission': dict({
          'description': 'PaysCommissions shows if this task pays commission',
          'type': list([
            'boolean',
          ]),
        }),
        'price': dict({
          'description': 'Price of this SKU sold',
          'type': list([
            'number',
          ]),
        }),
        'recommendations': dict({
          'description': 'Recommended other service or materials to include with this SKU',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': 'array',
        }),
        'serviceEquipment': dict({
          'description': 'Array of equipment used with this service',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'description': 'Quantity of linked SKUs',
                'type': list([
                  'number',
                ]),
              }),
              'skuId': dict({
                'description': 'Linked SKU unique id',
                'type': list([
                  'integer',
                ]),
              }),
            }),
            'required': list([
              'skuId',
              'quantity',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'serviceMaterials': dict({
          'description': 'Array of materials that is used with this service',
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'description': 'Quantity of linked SKUs',
                'type': list([
                  'number',
                ]),
              }),
              'skuId': dict({
                'description': 'Linked SKU unique id',
                'type': list([
                  'integer',
                ]),
              }),
            }),
            'required': list([
              'skuId',
              'quantity',
            ]),
            'type': 'object',
          }),
          'type': 'array',
        }),
        'soldByCommission': dict({
          'description': 'Sold by commission',
          'type': list([
            'number',
          ]),
        }),
        'source': dict({
          'description': 'The source catalog for this SKU.',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'description': 'Is this SKU taxable',
          'type': list([
            'boolean',
          ]),
        }),
        'upgrades': dict({
          'description': 'Upgrades that can be sold for this SKU',
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': 'array',
        }),
        'warranty': dict({
          'additionalProperties': True,
          'description': 'Warranty included with this SKU',
          'properties': dict({
            'description': dict({
              'description': 'Description of the warranty included in this SKU',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'description': 'Warranty duration',
              'type': list([
                'integer',
              ]),
            }),
          }),
          'required': list([
            'duration',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'code',
        'description',
        'categories',
        'price',
        'memberPrice',
        'addOnPrice',
        'addOnMemberPrice',
        'taxable',
        'hours',
        'recommendations',
        'upgrades',
        'assets',
        'serviceMaterials',
        'serviceEquipment',
        'active',
        'paysCommission',
        'bonus',
        'commissionBonus',
        'modifiedOn',
        'cost',
        'createdOn',
        'soldByCommission',
      ]),
      'type': 'object',
    }),
    'stream': 'export_services',
    'tap_stream_id': 'export_services',
  })
# ---
# name: test_catalog_changes[forms]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'published',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hasConditionalLogic',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hasTriggers',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hasConditionalLogic': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'hasTriggers': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'published': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'forms',
    'tap_stream_id': 'forms',
  })
# ---
# name: test_catalog_changes[gl_accounts]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subtype',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isIntacctGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isIntacctBankAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultAccountType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'active': dict({
          'type': 'boolean',
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': 'string',
        }),
        'defaultAccountType': dict({
          'description': '',
          'enum': list([
            'CheckingAccount',
            'UndepositedFunds',
            'AccountsReceivable',
            'Inventory',
            'AccountsPayable',
            'CustomerRefundsPayable',
            'SalesTaxPayable',
            'CustomerDeposits',
            'MembershipAgreements',
            'RetainedEarnings',
            'Revenue',
            'MembershipRevenue',
            'Refunds',
            'CostOfGoodsSoldMaterials',
            'CostOfGoodsSoldEquipment',
            'CostOfGoodsSoldShipping',
            'CostOfGoodsSoldTax',
            'PayrollLabor',
            'PayrollEmployeeTaxes',
            'EmployeeBenefits',
            'EmployerTaxes',
            'EmployerBenefits',
            'Deductions',
            'InventoryAdjustments',
            'CostOfGoodsSoldRestockingFee',
            'CostOfGoodsSoldLabor',
            'PayrollLiability',
            'PayrollClearing',
            'CommittedCosts',
            'GoodsReceivedNotInvoiced',
            'VendorDiscount',
            'ProcessingFees',
            'GoodsReturnedNotCredited',
          ]),
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'format': 'int64',
          'type': 'integer',
        }),
        'isIntacctBankAccount': dict({
          'type': 'boolean',
        }),
        'isIntacctGroup': dict({
          'type': 'boolean',
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': 'string',
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'source': dict({
          'description': '',
          'enum': list([
            'Undefined',
            'AccountingSystem',
            'ManuallyCreated',
            'PublicApi',
          ]),
          'type': 'string',
        }),
        'subtype': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'active',
        'isIntacctGroup',
        'isIntacctBankAccount',
        'source',
        'createdOn',
        'modifiedOn',
      ]),
      'type': 'object',
    }),
    'stream': 'gl_accounts',
    'tap_stream_id': 'gl_accounts',
  })
# ---
# name: test_catalog_changes[gross_pay_items]
  dict({
    'key_properties': list([
      'payrollId',
      'date',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'payrollId',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeePayrollId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activity',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activityCodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activityCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amountAdjustment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'payoutBusinessUnitName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'grossPayItemType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'endedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paidDurationHours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paidTimeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceItemId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationZip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'zoneName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxZoneName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborTypeCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPrevailingWageJob',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'payrollId',
            'date',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'activity': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'activityCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'activityCodeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'amount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'amountAdjustment': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'businessUnitName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'customerName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeePayrollId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'endedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'grossPayItemType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceItemId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isPrevailingWageJob': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobTypeName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'laborTypeCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'laborTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationAddress': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationZip': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paidDurationHours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'paidTimeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'payoutBusinessUnitName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'payrollId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'projectNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'startedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxZoneName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'zoneName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'gross_pay_items',
    'tap_stream_id': 'gross_pay_items',
  })
# ---
# name: test_catalog_changes[installed_equipment]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'equipmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceItemId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'installedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serialNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'barcodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'model',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarrantyStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manufacturerWarrantyEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarrantyStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceProviderWarrantyEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tags',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'actualReplacementDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'predictedReplacementMonths',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'predictedReplacementDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'actualReplacementDate': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'barcodeId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'cost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'equipmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'installedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceItemId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'manufacturer': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'manufacturerWarrantyEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'manufacturerWarrantyStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'model': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'predictedReplacementDate': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'predictedReplacementMonths': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'serialNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'serviceProviderWarrantyEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'serviceProviderWarrantyStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tags': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'code': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'color': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'memo': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'ownerId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'textColor': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'typeName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'installed_equipment',
    'tap_stream_id': 'installed_equipment',
  })
# ---
# name: test_catalog_changes[inventory_bills]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'purchaseOrderId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shippingAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'termName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dueDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipToDescription',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxZone',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxZone',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxZone',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'active': dict({
          'type': 'boolean',
        }),
        'batch': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'billAmount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'billDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'dueDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'format': 'int64',
          'type': 'integer',
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'assetAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'costOfSaleAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'description': dict({
                'format': 'html',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'generalLedgerAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'id': dict({
                'format': 'int64',
                'type': 'integer',
              }),
              'inventoryLocation': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'order': dict({
                'format': 'int32',
                'type': 'integer',
              }),
              'quantity': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'receiptItemId': dict({
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'serialNumber': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'skuCode': dict({
                'type': 'string',
              }),
              'skuId': dict({
                'format': 'int64',
                'type': 'integer',
              }),
              'skuType': dict({
                'type': 'string',
              }),
            }),
            'required': list([
              'order',
              'id',
              'skuId',
              'skuType',
              'skuCode',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'jobId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'purchaseOrderId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shipTo': dict({
          'additionalProperties': False,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'shipToDescription': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shippingAmount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxAmount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxZone': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'termName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'vendor': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'vendorNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'active',
      ]),
      'type': 'object',
    }),
    'stream': 'inventory_bills',
    'tap_stream_id': 'inventory_bills',
  })
# ---
# name: test_catalog_changes[inventory_bills_custom_fields]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'required',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'enabled',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allowOnBulkUpdate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allowOnBulkUpdate': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'enabled': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'required': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'inventory_bills_custom_fields',
    'tap_stream_id': 'inventory_bills_custom_fields',
  })
# ---
# name: test_catalog_changes[invoice_items]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'quantity',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'totalCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocation',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skuName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skuId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'detailType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
          'properties',
          'detailType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
          'properties',
          'detailType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'itemGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'itemGroup',
          'properties',
          'rootId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'itemGroup',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldHours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'order',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayInAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isAddOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'installedEquipmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimateItemId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'assetAccount': dict({
          'additionalProperties': True,
          'properties': dict({
            'detailType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'cost': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'costOfSaleAccount': dict({
          'additionalProperties': True,
          'properties': dict({
            'detailType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayInAmount': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'estimateItemId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'exportId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'generalLedgerAccount': dict({
          'additionalProperties': True,
          'properties': dict({
            'detailType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'installedEquipmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventory': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'inventoryLocation': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'inventoryStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isAddOn': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'itemGroup': dict({
          'additionalProperties': True,
          'properties': dict({
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'rootId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'memberPrice': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'membershipTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'order': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'price': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'quantity': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'serviceDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'skuId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'skuName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'soldHours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'taxable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'totalCost': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'invoice_items',
    'tap_stream_id': 'invoice_items',
  })
# ---
# name: test_catalog_changes[invoice_templates]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isSettingsTemplate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isSettingsTemplate': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'hours': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'importId': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'isAddOn': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'skuType': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'unitPrice': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'workflowActionItemId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'invoice_templates',
    'tap_stream_id': 'invoice_templates',
  })
# ---
# name: test_catalog_changes[invoices]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'discountTotal',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'materialSkuId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paidOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dueDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subTotal',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'salesTax',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'salesTaxCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'salesTaxCode',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'salesTaxCode',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'salesTaxCode',
          'properties',
          'taxRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'balance',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceType',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceType',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerAddress',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'location',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationAddress',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'termName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'depositedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adjustmentToId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'royalty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'royalty',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'royalty',
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'royalty',
          'properties',
          'sentOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'royalty',
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeInfo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeInfo',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeInfo',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeInfo',
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionEligibilityDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sentStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reviewStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedTo',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedTo',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'active': dict({
          'description': 'Whether this invoice is active, or not anymore.',
          'type': 'boolean',
        }),
        'adjustmentToId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'assignedTo': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'balance': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'commissionEligibilityDate': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': 'string',
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'customerAddress': dict({
          'additionalProperties': False,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'depositedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'discountTotal': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dueDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeInfo': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'modifiedOn': dict({
              'format': 'date-time',
              'type': 'string',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
            'modifiedOn',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'exportId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'format': 'int64',
          'type': 'integer',
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceType': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'addOn': dict({
                'type': 'boolean',
              }),
              'assetAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'businessUnit': dict({
                'additionalProperties': False,
                'properties': dict({
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'costOfSaleAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'createdById': dict({
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': 'string',
              }),
              'description': dict({
                'format': 'html',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'displayInAmount': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'displayName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'estimateItemId': dict({
                'description': 'The estimate item from which this invoice item was created.',
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'exportId': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'generalLedgerAccount': dict({
                'additionalProperties': False,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'required': list([
                  'id',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'id': dict({
                'format': 'int64',
                'type': 'integer',
              }),
              'importId': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'installedEquipmentId': dict({
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'inventory': dict({
                'type': 'boolean',
              }),
              'inventoryLocation': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'inventoryLocationId': dict({
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'inventoryStatus': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'itemGroup': dict({
                'additionalProperties': False,
                'properties': dict({
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'rootId': dict({
                    'format': 'int64',
                    'type': 'integer',
                  }),
                }),
                'required': list([
                  'rootId',
                ]),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'memberPrice': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'membershipTypeId': dict({
                'format': 'int64',
                'type': 'integer',
              }),
              'modifiedOn': dict({
                'format': 'date-time',
                'type': 'string',
              }),
              'order': dict({
                'format': 'int32',
                'type': 'integer',
              }),
              'price': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'serviceDate': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'skuId': dict({
                'format': 'int64',
                'type': 'integer',
              }),
              'skuName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'soldHours': dict({
                'format': 'decimal',
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'taxable': dict({
                'type': 'boolean',
              }),
              'technicianId': dict({
                'format': 'int64',
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'total': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'totalCost': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'description': "Indicates a type's item",
                'enum': list([
                  'Service',
                  'Material',
                  'Equipment',
                  'PriceModifier',
                  'Unspecified',
                ]),
                'type': 'string',
              }),
            }),
            'required': list([
              'id',
              'type',
              'skuId',
              'inventory',
              'taxable',
              'membershipTypeId',
              'createdOn',
              'modifiedOn',
              'order',
              'addOn',
            ]),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'location': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'locationAddress': dict({
          'additionalProperties': False,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'materialSkuId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paidOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reviewStatus': dict({
          'description': '',
          'enum': list([
            'NeedsReview',
            'OnHold',
            'Reviewed',
          ]),
          'type': 'string',
        }),
        'royalty': dict({
          'additionalProperties': False,
          'properties': dict({
            'date': dict({
              'format': 'date-time',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'memo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'sentOn': dict({
              'format': 'date-time',
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'salesTax': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'salesTaxCode': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'taxRate': dict({
              'format': 'decimal',
              'type': 'number',
            }),
          }),
          'required': list([
            'id',
            'taxRate',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'sentStatus': dict({
          'description': '',
          'enum': list([
            'NotSent',
            'Sent',
            'Opened',
          ]),
          'type': 'string',
        }),
        'subTotal': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'format': 'html',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'termName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'required': list([
        'active',
        'id',
        'createdOn',
        'sentStatus',
        'reviewStatus',
      ]),
      'type': 'object',
    }),
    'stream': 'invoices',
    'tap_stream_id': 'invoices',
  })
# ---
# name: test_catalog_changes[job_attachments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'fileName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'fileName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_attachments',
    'tap_stream_id': 'job_attachments',
  })
# ---
# name: test_catalog_changes[job_booked_log]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'arrivalWindowStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'arrivalWindowEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointment',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appointment': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'arrivalWindowEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'arrivalWindowStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_booked_log',
    'tap_stream_id': 'job_booked_log',
  })
# ---
# name: test_catalog_changes[job_cancel_reasons]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_cancel_reasons',
    'tap_stream_id': 'job_cancel_reasons',
  })
# ---
# name: test_catalog_changes[job_canceled_log]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdBy': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reason': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_canceled_log',
    'tap_stream_id': 'job_canceled_log',
  })
# ---
# name: test_catalog_changes[job_canceled_logs]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reasonId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reasonId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_canceled_logs',
    'tap_stream_id': 'job_canceled_logs',
  })
# ---
# name: test_catalog_changes[job_history]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'eventType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'usedSchedulingTool',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'date',
          ]),
        }),
      }),
    ]),
    'replication_key': 'date',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'eventType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'usedSchedulingTool': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_history',
    'tap_stream_id': 'job_history',
  })
# ---
# name: test_catalog_changes[job_hold_reasons]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_hold_reasons',
    'tap_stream_id': 'job_hold_reasons',
  })
# ---
# name: test_catalog_changes[job_notes]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'text',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPinned',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isPinned': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'text': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_notes',
    'tap_stream_id': 'job_notes',
  })
# ---
# name: test_catalog_changes[job_splits]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'split',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'split': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_splits',
    'tap_stream_id': 'job_splits',
  })
# ---
# name: test_catalog_changes[job_timesheets]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dispatchedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'arrivedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'canceledOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'doneOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appointmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'arrivedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'canceledOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dispatchedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'doneOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_timesheets',
    'tap_stream_id': 'job_timesheets',
  })
# ---
# name: test_catalog_changes[job_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skills',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagTypeIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldThreshold',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'class',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'noCharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'enforceRecurringServiceEventSelection',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceSignaturesRequired',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'businessUnitIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'class': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'enforceRecurringServiceEventSelection': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceSignaturesRequired': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'noCharge': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'skills': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'soldThreshold': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagTypeIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'job_types',
    'tap_stream_id': 'job_types',
  })
# ---
# name: test_catalog_changes[jobs]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'completedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appointmentCount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'firstAppointmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'lastAppointmentId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recallForId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warrantyId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobGeneratedLeadSource',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobGeneratedLeadSource',
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobGeneratedLeadSource',
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'noCharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'notificationsEnabled',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagTypeIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadCallId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookingId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerPo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'end',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'planEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'planStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appointmentCount': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'bookingId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaignId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'completedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'customerPo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'end': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'firstAppointmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobGeneratedLeadSource': dict({
          'additionalProperties': True,
          'properties': dict({
            'employeeId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'jobId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'jobNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'lastAppointmentId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'leadCallId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'noCharge': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'notificationsEnabled': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'planEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'planStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'recallForId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'soldById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagTypeIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'warrantyId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'jobs',
    'tap_stream_id': 'jobs',
  })
# ---
# name: test_catalog_changes[journal_entries]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'versionId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'lastSyncVersionId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'message',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'postDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportedBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportedBy',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'exportedBy',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'url',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isEmpty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'createdOn': dict({
          'format': 'date-time',
          'type': 'string',
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'exportedBy': dict({
          'additionalProperties': False,
          'properties': dict({
            'id': dict({
              'format': 'int64',
              'type': 'integer',
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'required': list([
            'id',
          ]),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'exportedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'format': 'guid',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isEmpty': dict({
          'type': 'boolean',
        }),
        'lastSyncVersionId': dict({
          'format': 'int32',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'message': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': 'string',
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'format': 'int32',
          'type': 'integer',
        }),
        'postDate': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'description': '',
          'enum': list([
            'Open',
            'Closed',
          ]),
          'type': 'string',
        }),
        'syncStatus': dict({
          'description': "Indicates a journal entry's sync status.",
          'enum': list([
            'NotSynced',
            'InProgress',
            'Synced',
            'OutOfSync',
            'Error',
            'Excluded',
          ]),
          'type': 'string',
        }),
        'url': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'versionId': dict({
          'format': 'int32',
          'type': 'integer',
        }),
      }),
      'required': list([
        'createdOn',
        'modifiedOn',
        'number',
        'status',
        'syncStatus',
        'versionId',
        'isEmpty',
      ]),
      'type': 'object',
    }),
    'stream': 'journal_entries',
    'tap_stream_id': 'journal_entries',
  })
# ---
# name: test_catalog_changes[journal_entry_details]
  dict({
    'key_properties': list([
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'postDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'subtype',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'debit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'credit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'transaction',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'transaction',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'transaction',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'transaction',
          'properties',
          'refNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendor',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocation',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocation',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocation',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'job',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerLocation',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerLocation',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerLocation',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentType',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentType',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'project',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'project',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'project',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceAgreement',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceAgreement',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceAgreement',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedTo',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedTo',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedTo',
          'properties',
          'refNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sku',
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'subtype': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'appliedTo': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'refNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'credit': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'customerLocation': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'debit': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'inventoryLocation': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'job': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paymentType': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'postDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'project': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'serviceAgreement': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'sku': dict({
          'additionalProperties': True,
          'properties': dict({
            'code': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'transaction': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'refNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'vendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'journal_entry_details',
    'tap_stream_id': 'journal_entry_details',
  })
# ---
# name: test_catalog_changes[journal_entry_summaries]
  dict({
    'key_properties': list([
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'postDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
          'properties',
          'subtype',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'credit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'debit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'subtype': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'credit': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'debit': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'postDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'journal_entry_summaries',
    'tap_stream_id': 'journal_entry_summaries',
  })
# ---
# name: test_catalog_changes[keyword_performance]
  dict({
    'key_properties': list([
      'keyword_id',
      'date',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from_utc',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to_utc',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign_name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup_id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword_id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'category',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'launchDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaign',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'adGroup',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'keyword',
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressionShare',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'impressions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clicks',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'averageCPC',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'allConversions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'clickRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'costPerConversion',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'digitalStats',
          'properties',
          'conversionRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leads',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'leadCalls',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'onlineBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'manualBooking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookedJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'ranJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'soldJobs',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'revenue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'bookingRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStats',
          'properties',
          'avgTicket',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnOnInvestment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'keyword_id',
            'date',
          ]),
          'valid-replication-keys': list([
            'from_utc',
          ]),
        }),
      }),
    ]),
    'replication_key': 'from_utc',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'adGroup': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'adGroup_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'campaign': dict({
          'additionalProperties': True,
          'properties': dict({
            'category': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'launchDate': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'campaign_id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaign_name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'digitalStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'allConversions': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'averageCPC': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clickRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'clicks': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'conversionRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'conversions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'costPerConversion': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressionShare': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'impressions': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'from_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'keyword': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'status': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'keyword_id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadStats': dict({
          'additionalProperties': True,
          'properties': dict({
            'avgTicket': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'bookedJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'bookingRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'leadCalls': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'leads': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'manualBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'onlineBooking': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'ranJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'revenue': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'soldJobs': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'returnOnInvestment': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'to_utc': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'keyword_performance',
    'tap_stream_id': 'keyword_performance',
  })
# ---
# name: test_catalog_changes[lead_notes]
  dict({
    'key_properties': list([
      'createdById',
      'createdOn',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'text',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPinned',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'createdById',
            'createdOn',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isPinned': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'text': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'lead_notes',
    'tap_stream_id': 'lead_notes',
  })
# ---
# name: test_catalog_changes[leads]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'callReasonId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'callId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookingId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'manualCallId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadCustomerName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadPhone',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadEmail',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadStreet',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadCity',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadState',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadZip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'leadCountry',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'followUpDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagTypeIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dismissingReasonId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'active': dict({
          'type': 'boolean',
        }),
        'bookingId': dict({
          'description': 'Booking ID used to classify the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'description': 'Business unit associated to the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'callId': dict({
          'description': 'Call ID used to classify the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'callReasonId': dict({
          'description': 'Call reason ID used to classify the lead by the user',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaignId': dict({
          'description': 'Campaign associated to the lead',
          'format': 'int64',
          'type': 'integer',
        }),
        'createdById': dict({
          'description': 'User ID who created this lead',
          'format': 'int64',
          'type': 'integer',
        }),
        'createdOn': dict({
          'description': 'When the lead was created',
          'format': 'date-time',
          'type': 'string',
        }),
        'customerId': dict({
          'description': 'Customer associated to the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'dismissingReasonId': dict({
          'description': 'ID of the reason booking was dismissed',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'followUpDate': dict({
          'description': 'The next time someone is supposed to follow up on this lead',
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'description': 'ID of the lead',
          'format': 'int64',
          'type': 'integer',
        }),
        'jobTypeId': dict({
          'description': 'Job type associated to the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'leadCity': dict({
          'description': 'City provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadCountry': dict({
          'description': 'Country provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadCustomerName': dict({
          'description': 'Customer name provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadEmail': dict({
          'description': 'Email provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadPhone': dict({
          'description': 'Phone number provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadState': dict({
          'description': 'State provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadStreet': dict({
          'description': 'Street provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadUnit': dict({
          'description': 'Unit provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadUrl': dict({
          'description': 'Permanent URL for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'leadZip': dict({
          'description': 'Zip provided for the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationId': dict({
          'description': 'Location associated to the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'manualCallId': dict({
          'description': 'Manual Call ID used to classify the lead',
          'format': 'int64',
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'description': 'When the lead was modified',
          'format': 'date-time',
          'type': 'string',
        }),
        'priority': dict({
          'description': '',
          'enum': list([
            'Low',
            'Normal',
            'High',
            'Urgent',
          ]),
          'type': 'string',
        }),
        'status': dict({
          'description': '',
          'enum': list([
            'Open',
            'Dismissed',
            'Converted',
          ]),
          'type': 'string',
        }),
        'summary': dict({
          'description': 'Summary of the lead',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagTypeIds': dict({
          'description': 'List of IDs of tags on the lead',
          'items': dict({
            'format': 'int64',
            'type': 'integer',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'status',
        'priority',
        'campaignId',
        'createdById',
        'createdOn',
        'modifiedOn',
        'active',
      ]),
      'type': 'object',
    }),
    'stream': 'leads',
    'tap_stream_id': 'leads',
  })
# ---
# name: test_catalog_changes[location_contacts]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'value',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
          'properties',
          'phoneNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneSettings',
          'properties',
          'doNotText',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'phoneSettings': dict({
          'additionalProperties': True,
          'properties': dict({
            'doNotText': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'phoneNumber': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'value': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'location_contacts',
    'tap_stream_id': 'location_contacts',
  })
# ---
# name: test_catalog_changes[location_notes]
  dict({
    'key_properties': list([
      'createdById',
      'createdOn',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'text',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPinned',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'createdById',
            'createdOn',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isPinned': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'text': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'location_notes',
    'tap_stream_id': 'location_notes',
  })
# ---
# name: test_catalog_changes[location_rates]
  dict({
    'key_properties': list([
      'locationId',
      'laborTypeCode',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hourlyRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborTypeName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborTypeCode',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'locationId',
            'laborTypeCode',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hourlyRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'laborTypeCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'laborTypeName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'location_rates',
    'tap_stream_id': 'location_rates',
  })
# ---
# name: test_catalog_changes[locations]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'taxZoneId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'latitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'longitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'mergedToId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'zoneId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tagTypeIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'latitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'longitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'mergedToId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tagTypeIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'taxZoneId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'zoneId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'locations',
    'tap_stream_id': 'locations',
  })
# ---
# name: test_catalog_changes[locations_custom_fields]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataTypeOptions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'required',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'enabled',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allowOnBulkUpdate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allowOnBulkUpdate': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataTypeOptions': dict({
          'description': 'The type custom field type (e.g. Text, Dropdown, or Numeric)',
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'enabled': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'required': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'locations_custom_fields',
    'tap_stream_id': 'locations_custom_fields',
  })
# ---
# name: test_catalog_changes[materials]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'deductAsJobCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unitOfMeasure',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isInventory',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'costOfSaleAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assetAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'vendorPart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'cost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'primarySubAccount',
          'properties',
          'accountName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'primaryVendor',
          'properties',
          'otherSubAccounts',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'otherVendors',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConfigurableMaterial',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'chargeableByDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'variationsOrConfigurableMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'addOnMemberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'addOnPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'assetAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'assets': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'url': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'bonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'categories': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'chargeableByDefault': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'commissionBonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'cost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'costOfSaleAccount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'deductAsJobCost': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isConfigurableMaterial': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isInventory': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'memberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'otherVendors': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'memo': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'otherSubAccounts': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'accountName': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'cost': dict({
                      'type': list([
                        'number',
                        'null',
                      ]),
                    }),
                    'id': dict({
                      'type': list([
                        'integer',
                        'null',
                      ]),
                    }),
                  }),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'primarySubAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'vendorId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'vendorName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'vendorPart': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'price': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'primaryVendor': dict({
          'additionalProperties': True,
          'properties': dict({
            'active': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'cost': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'memo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'otherSubAccounts': dict({
              'items': dict({
                'additionalProperties': True,
                'properties': dict({
                  'accountName': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'cost': dict({
                    'type': list([
                      'number',
                      'null',
                    ]),
                  }),
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                }),
                'type': 'object',
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
            'primarySubAccount': dict({
              'additionalProperties': True,
              'properties': dict({
                'accountName': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'cost': dict({
                  'type': list([
                    'number',
                    'null',
                  ]),
                }),
                'id': dict({
                  'type': list([
                    'integer',
                    'null',
                  ]),
                }),
              }),
              'type': list([
                'object',
                'null',
              ]),
            }),
            'vendorId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'vendorName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'vendorPart': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'unitOfMeasure': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'variationsOrConfigurableMaterials': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'materials',
    'tap_stream_id': 'materials',
  })
# ---
# name: test_catalog_changes[materials_markup]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'percent',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'from': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'percent': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'to': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'materials_markup',
    'tap_stream_id': 'materials_markup',
  })
# ---
# name: test_catalog_changes[membership_status_changes]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'oldStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'newStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'note',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'newStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'note': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'oldStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'membership_status_changes',
    'tap_stream_id': 'membership_status_changes',
  })
# ---
# name: test_catalog_changes[membership_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billingTemplateId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationBilling',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'discountMode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationTarget',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'revenueRecognitionMode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'autoCalculateInvoiceTemplates',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'useMembershipPricingTable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'showMembershipSavings',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'autoCalculateInvoiceTemplates': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'billingTemplateId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'discountMode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'durationBilling': dict({
          'items': dict({
            'additionalProperties': False,
            'properties': dict({
              'billingFrequency': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'duration': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'locationTarget': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'revenueRecognitionMode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'showMembershipSavings': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'useMembershipPricingTable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'membership_types',
    'tap_stream_id': 'membership_types',
  })
# ---
# name: test_catalog_changes[memberships_export]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'followUpOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cancellationDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'nextScheduledBillDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billingFrequency',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'renewalBillingFrequency',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'followUpStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'initialDeferredRevenue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'renewalDuration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activatedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activatedFromId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billingTemplateId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cancellationBalanceInvoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cancellationInvoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'followUpCustomStatusId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentMethodId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurringLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'renewalMembershipTaskId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'renewedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'soldById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerPo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'activatedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'activatedFromId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'billingFrequency': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'billingTemplateId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'cancellationBalanceInvoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'cancellationDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'cancellationInvoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'customerPo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'followUpCustomStatusId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'followUpOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'followUpStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'from': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'initialDeferredRevenue': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'nextScheduledBillDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paymentMethodId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'paymentTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'recurringLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'renewalBillingFrequency': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'renewalDuration': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'renewalMembershipTaskId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'renewedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'soldById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'to': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'memberships_export',
    'tap_stream_id': 'memberships_export',
  })
# ---
# name: test_catalog_changes[non_job_appointments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'timesheetCodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'clearDispatchBoard',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'clearTechnicianView',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'removeTechnicianFromCapacityPlanning',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allDay',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'showOnTechnicianSchedule',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allDay': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'clearDispatchBoard': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'clearTechnicianView': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'duration': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'removeTechnicianFromCapacityPlanning': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'showOnTechnicianSchedule': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'timesheetCodeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'non_job_appointments',
    'tap_stream_id': 'non_job_appointments',
  })
# ---
# name: test_catalog_changes[non_job_timesheets]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'timesheetCodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'endedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'endedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'startedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'timesheetCodeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'non_job_timesheets',
    'tap_stream_id': 'non_job_timesheets',
  })
# ---
# name: test_catalog_changes[opt_outs]
  dict({
    'key_properties': list([
      'contactNumber',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'contactNumber',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'optOutType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'contactNumber',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'contactNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'optOutType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'opt_outs',
    'tap_stream_id': 'opt_outs',
  })
# ---
# name: test_catalog_changes[payment_terms]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dueDayType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dueDay',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isCustomerDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isVendorDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inUse',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'discountApplyTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'discount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'discountType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'applyBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermDiscountModel',
          'properties',
          'applyByValue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'rateType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'flatRateValue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'percentageRateValue',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'chargeMethod',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'frequency',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'gracePeriod',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'targetInvoices',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'taskId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'interestSettings',
          'properties',
          'taskDisplayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'dueDay': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'dueDayType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inUse': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'interestSettings': dict({
          'additionalProperties': True,
          'properties': dict({
            'chargeMethod': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'flatRateValue': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'frequency': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'gracePeriod': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'percentageRateValue': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'rateType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'targetInvoices': dict({
              'items': dict({
                'type': list([
                  'string',
                ]),
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
            'taskDisplayName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'taskId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'isCustomerDefault': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isVendorDefault': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paymentTermDiscountModel': dict({
          'additionalProperties': True,
          'properties': dict({
            'account': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'applyBy': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'applyByValue': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'discount': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'discountApplyTo': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'discountType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'payment_terms',
    'tap_stream_id': 'payment_terms',
  })
# ---
# name: test_catalog_changes[payment_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'format': 'int64',
          'type': 'integer',
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': 'string',
        }),
      }),
      'required': list([
        'id',
        'name',
      ]),
      'type': 'object',
    }),
    'stream': 'payment_types',
    'tap_stream_id': 'payment_types',
  })
# ---
# name: test_catalog_changes[payments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'typeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'unappliedAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnit',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'generalLedgerAccount',
          'properties',
          'detailType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'appliedTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'authCode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'checkNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'appliedTo': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'appliedAmount': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'appliedBy': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'appliedId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'appliedOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'appliedTo': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'appliedToReferenceNumber': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'authCode': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'businessUnit': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'checkNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'generalLedgerAccount': dict({
          'additionalProperties': True,
          'properties': dict({
            'detailType': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'type': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'typeId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'unappliedAmount': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'payments',
    'tap_stream_id': 'payments',
  })
# ---
# name: test_catalog_changes[payroll_adjustments]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'postedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'amount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activityCodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'activityCodeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'amount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'employeeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'postedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'rate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'payroll_adjustments',
    'tap_stream_id': 'payroll_adjustments',
  })
# ---
# name: test_catalog_changes[payrolls]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'endedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'burdenRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'managerApprovedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'burdenRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'employeeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'endedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'managerApprovedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'startedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'payrolls',
    'tap_stream_id': 'payrolls',
  })
# ---
# name: test_catalog_changes[project_notes]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'text',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isPinned',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isPinned': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'text': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'project_notes',
    'tap_stream_id': 'project_notes',
  })
# ---
# name: test_catalog_changes[project_statuses]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'order',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'order': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'project_statuses',
    'tap_stream_id': 'project_statuses',
  })
# ---
# name: test_catalog_changes[project_sub_statuses]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'statusId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'order',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'order': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'statusId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'project_sub_statuses',
    'tap_stream_id': 'project_sub_statuses',
  })
# ---
# name: test_catalog_changes[project_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'project_types',
    'tap_stream_id': 'project_types',
  })
# ---
# name: test_catalog_changes[projects]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'statusId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subStatusId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectManagerIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'targetCompletionDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'actualCompletionDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'actualCompletionDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnitIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectManagerIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'projectTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'startDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'statusId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'subStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'subStatusId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'targetCompletionDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'projects',
    'tap_stream_id': 'projects',
  })
# ---
# name: test_catalog_changes[purchase_order_markups]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'from',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'percent',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'from': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'percent': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'to': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'purchase_order_markups',
    'tap_stream_id': 'purchase_order_markups',
  })
# ---
# name: test_catalog_changes[purchase_order_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'automaticallyReceive',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayToTechnician',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'impactToTechnicianPayroll',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allowTechniciansToSendPo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultRequiredDateDaysOffset',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'skipWeekends',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'excludeTaxFromJobCosting',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allowTechniciansToSendPo': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'automaticallyReceive': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'defaultRequiredDateDaysOffset': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'displayToTechnician': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'excludeTaxFromJobCosting': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'impactToTechnicianPayroll': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'skipWeekends': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'purchase_order_types',
    'tap_stream_id': 'purchase_order_types',
  })
# ---
# name: test_catalog_changes[purchase_orders]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'typeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batchId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorDocumentNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'requiredOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sentOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'receivedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'total',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'tax',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipping',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'batchId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'date': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventoryLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'chargeable': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'quantityReceived': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'serialNumbers': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'id': dict({
                      'type': list([
                        'integer',
                        'null',
                      ]),
                    }),
                    'number': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                  }),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'skuCode': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'skuName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'skuType': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'status': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'total': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'vendorPartNumber': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'receivedOn': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'requiredOn': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'sentOn': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shipTo': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'shipping': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'tax': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'total': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'typeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'vendorDocumentNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'vendorId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'purchase_orders',
    'tap_stream_id': 'purchase_orders',
  })
# ---
# name: test_catalog_changes[receipts]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorInvoiceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'purchaseOrderId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipTo',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shipToDescription',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'receiptAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shippingAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'receivedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batchId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'batchId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'billId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventoryLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'assetAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'code': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'costOfSaleAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'generalLedgerAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'purchaseOrderId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'receiptAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'receivedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shipTo': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'shipToDescription': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shippingAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'vendorId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'vendorInvoiceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'receipts',
    'tap_stream_id': 'receipts',
  })
# ---
# name: test_catalog_changes[recurring_service_events]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationRecurringServiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationRecurringServiceName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationRecurringServiceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationRecurringServiceName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'membershipId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'recurring_service_events',
    'tap_stream_id': 'recurring_service_events',
  })
# ---
# name: test_catalog_changes[recurring_service_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceInterval',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceMonths',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationLength',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceTemplateId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobSummary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaignId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'durationLength': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'durationType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceTemplateId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobSummary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'recurrenceInterval': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'recurrenceMonths': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'recurrenceType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'recurring_service_types',
    'tap_stream_id': 'recurring_service_types',
  })
# ---
# name: test_catalog_changes[recurring_services]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'membershipId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurringServiceTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationLength',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'from',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'to',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceTemplateId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'invoiceTemplateForFollowingYearsId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'firstVisitComplete',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'activatedFromId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'allocation',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobSummary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceInterval',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceMonths',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceDaysOfWeek',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceWeek',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceDayOfNthWeek',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recurrenceDaysOfMonth',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobStartTime',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedPayrollCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'activatedFromId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'allocation': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'campaignId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'durationLength': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'durationType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'estimatedPayrollCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'firstVisitComplete': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'from': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'invoiceTemplateForFollowingYearsId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'invoiceTemplateId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobStartTime': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobSummary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'membershipId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'recurrenceDayOfNthWeek': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'recurrenceDaysOfMonth': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'recurrenceDaysOfWeek': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'recurrenceInterval': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'recurrenceMonths': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'recurrenceType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'recurrenceWeek': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'recurringServiceTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'to': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'recurring_services',
    'tap_stream_id': 'recurring_services',
  })
# ---
# name: test_catalog_changes[return_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'automaticallyReceiveVendorCredit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'includeInSalesTax',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isDefaultForConsignment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      'additionalProperties': False,
      'properties': dict({
        'active': dict({
          'type': 'boolean',
        }),
        'automaticallyReceiveVendorCredit': dict({
          'description': 'Should the return type allow receiving Vendor Credits automatically.',
          'type': 'boolean',
        }),
        'createdOn': dict({
          'description': 'System created date',
          'format': 'date-time',
          'type': 'string',
        }),
        'id': dict({
          'description': 'Return Id',
          'format': 'int64',
          'type': 'integer',
        }),
        'includeInSalesTax': dict({
          'type': 'boolean',
        }),
        'isDefault': dict({
          'type': 'boolean',
        }),
        'isDefaultForConsignment': dict({
          'type': 'boolean',
        }),
        'modifiedOn': dict({
          'description': 'Last time return type was modified date',
          'format': 'date-time',
          'type': 'string',
        }),
        'name': dict({
          'description': 'Name of the Return Type',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'required': list([
        'id',
        'automaticallyReceiveVendorCredit',
        'includeInSalesTax',
        'active',
        'isDefault',
        'isDefaultForConsignment',
        'createdOn',
        'modifiedOn',
      ]),
      'type': 'object',
    }),
    'stream': 'return_types',
    'tap_stream_id': 'return_types',
  })
# ---
# name: test_catalog_changes[returns]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'vendorId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'purchaseOrderId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'inventoryLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shippingAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'returnedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'creditReceivedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batchId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'batchId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'creditReceivedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'inventoryLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'assetAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'code': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'cost': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'costOfSaleAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'generalLedgerAccount': dict({
                'additionalProperties': True,
                'properties': dict({
                  'detailType': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'number': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'type': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': list([
                  'object',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'purchaseOrderId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'returnAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'returnDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'returnedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shippingAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'vendorId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'returns',
    'tap_stream_id': 'returns',
  })
# ---
# name: test_catalog_changes[reviews]
  dict({
    'key_properties': list([
      'review',
      'platform',
      'address',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'platform',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'authorEmail',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'authorName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'review',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reviewResponse',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'publishDate',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rating',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recommendationStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'verificationStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'verifiedByUserId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'verifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isAutoVerified',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'completedDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dispatchedDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianFullName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'review',
            'platform',
            'address',
          ]),
          'valid-replication-keys': list([
            'publishDate',
          ]),
        }),
      }),
    ]),
    'replication_key': 'publishDate',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'address': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'authorEmail': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'authorName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'completedDate': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'customerName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dispatchedDate': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isAutoVerified': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobStatus': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobTypeName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'platform': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'publishDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'rating': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'recommendationStatus': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'review': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reviewResponse': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianFullName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'verificationStatus': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'verifiedByUserId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'verifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'reviews',
    'tap_stream_id': 'reviews',
  })
# ---
# name: test_catalog_changes[scheduler_performance]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'schedulerName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'totalSessions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'completedSessions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookedSessions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'abandonedSessions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'completionRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookingRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'abandonmentRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'landingPageViews',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'customerInfoStarts',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'customerInfoCompletes',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'timeslotSelections',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'confirmationViews',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'funnelMetrics',
          'properties',
          'bookingCompletes',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'averageSessionDuration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'averageSessionDuration',
          'properties',
          'minutes',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'averageSessionDuration',
          'properties',
          'seconds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dateRangeStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dateRangeEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'abandonedSessions': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'abandonmentRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'averageSessionDuration': dict({
          'additionalProperties': True,
          'properties': dict({
            'minutes': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'seconds': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'bookedSessions': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'bookingRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'completedSessions': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'completionRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'dateRangeEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dateRangeStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'funnelMetrics': dict({
          'additionalProperties': True,
          'properties': dict({
            'bookingCompletes': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'confirmationViews': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'customerInfoCompletes': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'customerInfoStarts': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'landingPageViews': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'timeslotSelections': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'schedulerName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'totalSessions': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'scheduler_performance',
    'tap_stream_id': 'scheduler_performance',
  })
# ---
# name: test_catalog_changes[scheduler_sessions]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'lastCheckinDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sessionOutcome',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bookingId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'timeslotStart',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'timeslotEnd',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'category',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'isNewCustomer',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'firstName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'lastName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'phone',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'isNewLocation',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customer',
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'zoneId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerResponses',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'notes',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'isRWGSession',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'campaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'landingPageUrl',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'gclid',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'fbclid',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'msclkid',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmSource',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmMedium',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmCampaign',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmAdgroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmTerm',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'utmContent',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'sourceTracking',
          'properties',
          'googleAnalyticsClientId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'bookingId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'category': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customer': dict({
          'additionalProperties': True,
          'properties': dict({
            'address': dict({
              'additionalProperties': True,
              'properties': dict({
                'city': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'country': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'state': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'street': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'unit': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
                'zip': dict({
                  'type': list([
                    'string',
                    'null',
                  ]),
                }),
              }),
              'type': list([
                'object',
                'null',
              ]),
            }),
            'email': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'firstName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'isNewCustomer': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'isNewLocation': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'lastName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'phone': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'customerResponses': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'lastCheckinDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'notes': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'sessionOutcome': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'sourceTracking': dict({
          'additionalProperties': True,
          'properties': dict({
            'campaignId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'fbclid': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'gclid': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'googleAnalyticsClientId': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'isRWGSession': dict({
              'type': list([
                'boolean',
                'null',
              ]),
            }),
            'landingPageUrl': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'msclkid': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmAdgroup': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmCampaign': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmContent': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmMedium': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmSource': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'utmTerm': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'timeslotEnd': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'timeslotStart': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'zoneId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'scheduler_sessions',
    'tap_stream_id': 'scheduler_sessions',
  })
# ---
# name: test_catalog_changes[schedulers]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'companyName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'schedulerStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dataApiKey',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isDefault',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'companyName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'dataApiKey': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isDefault': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'schedulerStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'schedulers',
    'tap_stream_id': 'schedulers',
  })
# ---
# name: test_catalog_changes[service_agreements]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'originalTemplateId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'revenueRecognitionMode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'generalLedgerAccountId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'invoiceCancellationMode',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'billingServiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'negativeLiabilityServiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'positiveIncomeServiceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultLaborCostPerHour',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultExtraTravelCostPerHour',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultLaborMarkupPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultMaterialMarkupPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultLaborSurcharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultMaterialSurcharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultRateSheetId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'templateFields',
          'properties',
          'defaultCampaignId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locationIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'origin',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'summary',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importedDeferredAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importedRecognizedAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'durationMonths',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'autoRenew',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'renewalAgreementId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'startDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'endDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'billingSchedule',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentTermId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paymentMethodId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedTravelCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedLaborCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedMaterialCost',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborMarkupPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'materialMarkupPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'laborSurcharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'materialSurcharge',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'totalAgreementPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedGrossMarginAmount',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'estimatedGrossMarginPercentage',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rateSheetId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'accountManagerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'accountManagerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'autoRenew': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'billingSchedule': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'durationMonths': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'endDate': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'estimatedGrossMarginAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'estimatedGrossMarginPercentage': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'estimatedLaborCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'estimatedMaterialCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'estimatedTravelCost': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'importedDeferredAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'importedRecognizedAmount': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'laborMarkupPercentage': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'laborSurcharge': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'locationIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'materialMarkupPercentage': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'materialSurcharge': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'modifiedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'origin': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paymentMethodId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'paymentTermId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'rateSheetId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'renewalAgreementId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'startDate': dict({
          'format': 'date',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'summary': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'templateFields': dict({
          'additionalProperties': True,
          'properties': dict({
            'billingServiceId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'defaultCampaignId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'defaultExtraTravelCostPerHour': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultLaborCostPerHour': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultLaborMarkupPercentage': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultLaborSurcharge': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultMaterialMarkupPercentage': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultMaterialSurcharge': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'defaultRateSheetId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'generalLedgerAccountId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'invoiceCancellationMode': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'negativeLiabilityServiceId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'originalTemplateId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'positiveIncomeServiceId': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'revenueRecognitionMode': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'totalAgreementPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'service_agreements',
    'tap_stream_id': 'service_agreements',
  })
# ---
# name: test_catalog_changes[services]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'displayName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
          'properties',
          'duration',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warranty',
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'categories',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'price',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'addOnMemberPrice',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taxable',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'account',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'hours',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isLabor',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'recommendations',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'upgrades',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assets',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceMaterials',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceEquipment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'crossSaleGroup',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'paysCommission',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'bonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'commissionBonus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'source',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'account': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'addOnMemberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'addOnPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'assets': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'alias': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'fileName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'url': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'bonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'categories': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'active': dict({
                'type': list([
                  'boolean',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'commissionBonus': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'crossSaleGroup': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'displayName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'externalId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'hours': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isLabor': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'memberPrice': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'paysCommission': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'price': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'recommendations': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'serviceEquipment': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'serviceMaterials': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'source': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'taxable': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'upgrades': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'warranty': dict({
          'additionalProperties': True,
          'properties': dict({
            'description': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'duration': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'services',
    'tap_stream_id': 'services',
  })
# ---
# name: test_catalog_changes[submissions]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'formId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'formName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'submittedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'owners',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'units',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'submittedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'submittedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'formId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'formName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'owners': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'submittedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'units': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'type': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'units': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'attachments': dict({
                      'items': dict({
                        'additionalProperties': True,
                        'properties': dict({
                          'createdFrom': dict({
                            'type': list([
                              'string',
                              'null',
                            ]),
                          }),
                          'fileName': dict({
                            'type': list([
                              'string',
                              'null',
                            ]),
                          }),
                          'originalFileName': dict({
                            'type': list([
                              'string',
                              'null',
                            ]),
                          }),
                          'thumbnail': dict({
                            'type': list([
                              'string',
                              'null',
                            ]),
                          }),
                        }),
                        'type': 'object',
                      }),
                      'type': list([
                        'array',
                        'null',
                      ]),
                    }),
                    'comment': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'id': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'isRefused': dict({
                      'type': list([
                        'boolean',
                        'null',
                      ]),
                    }),
                    'name': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'options': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'refusalReason': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'type': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'value': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'values': dict({
                      'items': dict({
                        'type': list([
                          'string',
                          'null',
                        ]),
                      }),
                      'type': list([
                        'array',
                        'null',
                      ]),
                    }),
                  }),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'submissions',
    'tap_stream_id': 'submissions',
  })
# ---
# name: test_catalog_changes[suppressions]
  dict({
    'key_properties': list([
      'email',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reason',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'email',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'email': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'reason': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'suppressions',
    'tap_stream_id': 'suppressions',
  })
# ---
# name: test_catalog_changes[tag_types]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'color',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'importance',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isConversionOpportunity',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'color': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'importance': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'isConversionOpportunity': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'tag_types',
    'tap_stream_id': 'tag_types',
  })
# ---
# name: test_catalog_changes[tasks]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'reportedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'assignedToId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isClosed',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'closedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeTaskTypeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeTaskSourceId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeTaskResolutionId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'reportedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'completeBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'involvedEmployeeIdList',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'projectId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'priority',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'taskNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customerName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'refundIssued',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'descriptionModifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'descriptionModifiedById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'comments',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'attachments',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subTasksData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subTasksData',
          'properties',
          'count',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'subTasksData',
          'properties',
          'subTasks',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'assignedToId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'attachments': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'count': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'createdBy': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'files': dict({
                'items': dict({
                  'additionalProperties': True,
                  'properties': dict({
                    'filename': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                    'url': dict({
                      'type': list([
                        'string',
                        'null',
                      ]),
                    }),
                  }),
                  'type': 'object',
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'closedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'comments': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'comment': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'createdOn': dict({
                'format': 'date-time',
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'employeeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'completeBy': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customerId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'customerName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'descriptionModifiedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'descriptionModifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeTaskResolutionId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeeTaskSourceId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'employeeTaskTypeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'involvedEmployeeIdList': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'isClosed': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'jobNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'priority': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'projectId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'refundIssued': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'reportedById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'reportedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'subTasksData': dict({
          'additionalProperties': True,
          'properties': dict({
            'count': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'subTasks': dict({
              'items': dict({
                'additionalProperties': True,
                'properties': dict({
                  'active': dict({
                    'type': list([
                      'boolean',
                      'null',
                    ]),
                  }),
                  'assignedDateTime': dict({
                    'format': 'date-time',
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'assignedToId': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'closedOn': dict({
                    'format': 'date-time',
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'comments': dict({
                    'items': dict({
                      'additionalProperties': True,
                      'properties': dict({
                        'comment': dict({
                          'type': list([
                            'string',
                            'null',
                          ]),
                        }),
                        'createdOn': dict({
                          'format': 'date-time',
                          'type': list([
                            'string',
                            'null',
                          ]),
                        }),
                        'employeeId': dict({
                          'type': list([
                            'integer',
                            'null',
                          ]),
                        }),
                      }),
                      'type': 'object',
                    }),
                    'type': list([
                      'array',
                      'null',
                    ]),
                  }),
                  'createdOn': dict({
                    'format': 'date-time',
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'dueDateTime': dict({
                    'format': 'date-time',
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'isClosed': dict({
                    'type': list([
                      'boolean',
                      'null',
                    ]),
                  }),
                  'isViewed': dict({
                    'type': list([
                      'boolean',
                      'null',
                    ]),
                  }),
                  'name': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                  'reportedById': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'subtaskNumber': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                }),
                'type': 'object',
              }),
              'type': list([
                'array',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'taskNumber': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'tasks',
    'tap_stream_id': 'tasks',
  })
# ---
# name: test_catalog_changes[tax_zones]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'color',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isTaxRateSeparated',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isMultipleTaxZone',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rates',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'color': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isMultipleTaxZone': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isTaxRateSeparated': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'rates': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'salesTaxItem': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'taxBaseType': dict({
                'items': dict({
                  'type': list([
                    'string',
                  ]),
                }),
                'type': list([
                  'array',
                  'null',
                ]),
              }),
              'taxName': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'taxRate': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'tax_zones',
    'tap_stream_id': 'tax_zones',
  })
# ---
# name: test_catalog_changes[teams]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'teams',
    'tap_stream_id': 'teams',
  })
# ---
# name: test_catalog_changes[technician_shifts]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'shiftType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'title',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'note',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'start',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'end',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'timesheetCodeId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
        }),
      }),
    ]),
    'replication_method': 'FULL_TABLE',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'end': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'note': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'shiftType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'start': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'timesheetCodeId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'title': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'technician_shifts',
    'tap_stream_id': 'technician_shifts',
  })
# ---
# name: test_catalog_changes[technicians]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'userId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'roleIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnitId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'mainZoneId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'zoneIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'phoneNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'loginName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'streetAddress',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'latitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'home',
          'properties',
          'longitude',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'dailyGoal',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isManagedTech',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'aadUserId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'burdenRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'team',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'jobFilter',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'permissions',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'aadUserId': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'burdenRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'businessUnitId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'dailyGoal': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'email': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'home': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'latitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'longitude': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'streetAddress': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isManagedTech': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'jobFilter': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'loginName': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'mainZoneId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'permissions': dict({
          'items': dict({
            'oneOf': list([
              dict({
                'additionalProperties': True,
                'properties': dict({
                  'id': dict({
                    'type': list([
                      'integer',
                      'null',
                    ]),
                  }),
                  'value': dict({
                    'type': list([
                      'string',
                      'null',
                    ]),
                  }),
                }),
                'type': 'object',
              }),
              dict({
                'type': 'null',
              }),
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'phoneNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'roleIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'team': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'userId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'zoneIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'technicians',
    'tap_stream_id': 'technicians',
  })
# ---
# name: test_catalog_changes[timesheet_codes]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'code',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'description',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'type',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'applicableEmployeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rateInfo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rateInfo',
          'properties',
          'hourlyRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rateInfo',
          'properties',
          'customHourlyRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'rateInfo',
          'properties',
          'rateMultiplier',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'applicableEmployeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'code': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'description': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'rateInfo': dict({
          'additionalProperties': True,
          'properties': dict({
            'customHourlyRate': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
            'hourlyRate': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'rateMultiplier': dict({
              'type': list([
                'number',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'type': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'timesheet_codes',
    'tap_stream_id': 'timesheet_codes',
  })
# ---
# name: test_catalog_changes[transfers]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'transferType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'status',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'referenceNumber',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'fromLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'toLocationId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdById',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'date',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'pickedDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'receivedDate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batchId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'number',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'batch',
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'syncStatus',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'items',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'customFields',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'batch': dict({
          'additionalProperties': True,
          'properties': dict({
            'id': dict({
              'type': list([
                'integer',
                'null',
              ]),
            }),
            'name': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'number': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'batchId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdById': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'customFields': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'typeId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'date': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'fromLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'items': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'code': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'description': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'id': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
              'name': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'quantity': dict({
                'type': list([
                  'number',
                  'null',
                ]),
              }),
              'skuId': dict({
                'type': list([
                  'integer',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'number': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'pickedDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'receivedDate': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'referenceNumber': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'status': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'syncStatus': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'toLocationId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'transferType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'transfers',
    'tap_stream_id': 'transfers',
  })
# ---
# name: test_catalog_changes[trucks]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'warehouseId',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicianIds',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'technicianIds': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'warehouseId': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'trucks',
    'tap_stream_id': 'trucks',
  })
# ---
# name: test_catalog_changes[user_roles]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'employeeType',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'createdOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'createdOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'employeeType': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'user_roles',
    'tap_stream_id': 'user_roles',
  })
# ---
# name: test_catalog_changes[vendors]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isTruckReplenishment',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'isMobileCreationRestricted',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'memo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'deliveryOption',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'defaultTaxRate',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
          'properties',
          'firstName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
          'properties',
          'lastName',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
          'properties',
          'phone',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
          'properties',
          'email',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'contactInfo',
          'properties',
          'fax',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'contactInfo': dict({
          'additionalProperties': True,
          'properties': dict({
            'email': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'fax': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'firstName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'lastName': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'phone': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'defaultTaxRate': dict({
          'type': list([
            'number',
            'null',
          ]),
        }),
        'deliveryOption': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'isMobileCreationRestricted': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'isTruckReplenishment': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'memo': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'vendors',
    'tap_stream_id': 'vendors',
  })
# ---
# name: test_catalog_changes[warehouses]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'street',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'unit',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'city',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'state',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'zip',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'address',
          'properties',
          'country',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'externalData',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'address': dict({
          'additionalProperties': True,
          'properties': dict({
            'city': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'country': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'state': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'street': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'unit': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
            'zip': dict({
              'type': list([
                'string',
                'null',
              ]),
            }),
          }),
          'type': list([
            'object',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'externalData': dict({
          'items': dict({
            'additionalProperties': True,
            'properties': dict({
              'key': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
              'value': dict({
                'type': list([
                  'string',
                  'null',
                ]),
              }),
            }),
            'type': 'object',
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'warehouses',
    'tap_stream_id': 'warehouses',
  })
# ---
# name: test_catalog_changes[zones]
  dict({
    'key_properties': list([
      'id',
    ]),
    'metadata': list([
      dict({
        'breadcrumb': list([
          'properties',
          'id',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'active',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'name',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'zips',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'cities',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'territoryNumbers',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'locnNumbers',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdBy',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'createdOn',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'modifiedOn',
        ]),
        'metadata': dict({
          'inclusion': 'automatic',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceDaysEnabled',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'serviceDays',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'businessUnits',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
          'properties',
          'technicians',
        ]),
        'metadata': dict({
          'inclusion': 'available',
        }),
      }),
      dict({
        'breadcrumb': list([
        ]),
        'metadata': dict({
          'inclusion': 'available',
          'selected': True,
          'selected-by-default': True,
          'table-key-properties': list([
            'id',
          ]),
          'valid-replication-keys': list([
            'modifiedOn',
          ]),
        }),
      }),
    ]),
    'replication_key': 'modifiedOn',
    'replication_method': 'INCREMENTAL',
    'schema': dict({
      '$schema': 'https://json-schema.org/draft/2020-12/schema',
      'properties': dict({
        'active': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'businessUnits': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'cities': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'createdBy': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'createdOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'id': dict({
          'type': list([
            'integer',
            'null',
          ]),
        }),
        'locnNumbers': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'modifiedOn': dict({
          'format': 'date-time',
          'type': list([
            'string',
            'null',
          ]),
        }),
        'name': dict({
          'type': list([
            'string',
            'null',
          ]),
        }),
        'serviceDays': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'serviceDaysEnabled': dict({
          'type': list([
            'boolean',
            'null',
          ]),
        }),
        'technicians': dict({
          'items': dict({
            'type': list([
              'integer',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'territoryNumbers': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
        'zips': dict({
          'items': dict({
            'type': list([
              'string',
            ]),
          }),
          'type': list([
            'array',
            'null',
          ]),
        }),
      }),
      'type': 'object',
    }),
    'stream': 'zones',
    'tap_stream_id': 'zones',
  })
# ---
