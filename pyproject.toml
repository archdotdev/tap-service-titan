[project]
name = "tap-service-titan"
version = "0.0.1"
description = "Singer tap for ServiceTitan, built with the Meltano Singer SDK."
authors = [{ name = "Cody Hanson", email = "cody@arch.dev" }]
maintainers = [{ name = "Meltano", email = "hello@meltano.com" }]
requires-python = ">=3.10"
readme = "README.md"
license = "Apache-2.0"
keywords = ["ELT", "ServiceTitan"]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "backports-httpmethod~=0.2.1 ; python_version < '3.11'",
    "singer-sdk[faker]~=0.52.0",
    "requests~=2.32.3",
    "typing-extensions==4.15.0",
]

[project.optional-dependencies]
s3 = ["s3fs~=2025.9.0"]

[project.scripts]
tap-service-titan = "tap_service_titan.tap:TapServiceTitan.cli"

[dependency-groups]
dev = [
    { include-group = "scrapping" },
    { include-group = "test" },
    { include-group = "typing" },
    "typer>=0.12.5",
    "jsonref>=1.1.0,<2",
]
scrapping = ["beautifulsoup4>=4.12.3", "playwright>=1.48.0,<2", "rich>=14.2.0"]
test = [
    "pytest>=8",
    "pytest-subtests>=0.14.2",
    "singer-sdk[testing]",
    "syrupy>=5.0.0",
    "time-machine>=2.19.0",
]
typing = [
    { include-group = "test" },
    "types-requests>=2",
    "backports-httpmethod",
]

[tool.hatch.build.targets.sdist]
include = ["tap_service_titan"]

[tool.hatch.build.targets.wheel]
include = ["tap_service_titan"]

[build-system]
requires = ["hatchling>=1.27,<2"]
build-backend = "hatchling.build"

[tool.mypy]
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = ["-vv"]

[tool.ruff]
line-length = 100
src = ["tap_service_titan"]

[tool.ruff.lint]
ignore = [
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "S101", # asserts in pytest functions is OK
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_service_titan"]

[tool.ruff.lint.pydocstyle]
convention = "google"
