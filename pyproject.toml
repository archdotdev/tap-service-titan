[tool.poetry]
name = "tap-service-titan"
version = "0.0.1"
description = "Singer tap for ServiceTitan, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Cody Hanson <cody@arch.dev>"]
keywords = [
    "ELT",
    "ServiceTitan",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "Apache-2.0"
packages = [
    { include = "tap_service_titan" },
]

[tool.poetry.dependencies]
python = ">=3.9,<4"
singer-sdk = { version="~=0.39.1", extras = ["faker",] }
fs-s3fs = { version = "~=1.1.1", optional = true }
requests = "~=2.32.3"
typing-extensions = "==4.14.1"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
singer-sdk = { version="*", extras = ["testing"] }
beautifulsoup4 = "^4.12.3"
playwright = "^1.48.0"
typer = "^0.12.5"
openapi-core = "^0.19.4"
jsonref = "^1.1.0"

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
warn_unused_configs = true

[tool.ruff]
src = ["tap_service_titan"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_service_titan"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==2.1.3"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-service-titan = 'tap_service_titan.tap:TapServiceTitan.cli'
