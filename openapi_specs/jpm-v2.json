{
    "openapi": "3.0.1",
    "info": {
        "title": "Job Planning and Management",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api-integration.servicetitan.io/jpm/v2"
        }
    ],
    "paths": {
        "/tenant/{tenant}/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Gets appointment specified by ID",
                "description": "Gets appointment specified by ID",
                "operationId": "Appointments_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.AppointmentResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobId": 0,
                                    "appointmentNumber": "string",
                                    "start": "string",
                                    "end": "string",
                                    "arrivalWindowStart": "string",
                                    "arrivalWindowEnd": "string",
                                    "status": {},
                                    "specialInstructions": "string",
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "customerId": 0,
                                    "unused": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Deletes appointment with specified id.",
                "description": "Deletes appointment with specified id.",
                "operationId": "Appointments_Delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Appointment is in the state that doesn't allow deletion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Gets a list of appointments",
                "description": "Gets a list of appointments",
                "operationId": "Appointments_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "query",
                        "description": "Format - int64. Return all appointments for this job",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Format - int64. Return all appointments for jobs that are part of this project",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Return all appointments with this appointment number",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Return items with specified status AppointmentStatus\\\nValues: [Scheduled, Dispatched, Working, Hold, Done, Canceled]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Jpm.V2.AppointmentStatus"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "startsOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments that start on or after the specified date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "startsBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments that start before the specified date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "technicianId",
                        "in": "query",
                        "description": "Format - int64. Return appointments this technician is assigned to",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Format - int64. Return appointments for the specified Customer",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "unused",
                        "in": "query",
                        "description": "Return appointments that are unused",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments modified before a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments modified on or after a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments created on or after a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return appointments created before a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.AppointmentResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobId": 0,
                                            "appointmentNumber": "string",
                                            "start": "string",
                                            "end": "string",
                                            "arrivalWindowStart": "string",
                                            "arrivalWindowEnd": "string",
                                            "status": {},
                                            "specialInstructions": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "customerId": 0,
                                            "unused": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Adds a new appointment to an existing job",
                "description": "Adds a new appointment to an existing job",
                "operationId": "Appointments_Add",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.AppointmentAddRequest"
                            },
                            "example": {
                                "jobId": 0,
                                "start": "string",
                                "end": "string",
                                "arrivalWindowStart": "string",
                                "arrivalWindowEnd": "string",
                                "technicianIds": [
                                    0
                                ],
                                "specialInstructions": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.AppointmentResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobId": 0,
                                    "appointmentNumber": "string",
                                    "start": "string",
                                    "end": "string",
                                    "arrivalWindowStart": "string",
                                    "arrivalWindowEnd": "string",
                                    "status": {},
                                    "specialInstructions": "string",
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "customerId": 0,
                                    "unused": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/appointments/{id}/reschedule": {
            "patch": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Reschedule job appointment",
                "description": "Reschedule job appointment",
                "operationId": "Appointments_Reschedule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.AppointmentRescheduleRequest"
                            },
                            "example": {
                                "start": "string",
                                "end": "string",
                                "arrivalWindowStart": "string",
                                "arrivalWindowEnd": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.AppointmentResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobId": 0,
                                    "appointmentNumber": "string",
                                    "start": "string",
                                    "end": "string",
                                    "arrivalWindowStart": "string",
                                    "arrivalWindowEnd": "string",
                                    "status": {},
                                    "specialInstructions": "string",
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "customerId": 0,
                                    "unused": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/appointments/{id}/hold": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Puts the appointment on hold",
                "description": "Puts the appointment on hold",
                "operationId": "Appointments_Hold",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.HoldAppointmentRequest"
                            },
                            "example": {
                                "reasonId": 0,
                                "memo": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Removes hold from the appointment",
                "description": "Removes hold from the appointment",
                "operationId": "Appointments_RemoveHold",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Appointment is not on hold",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/appointments/{id}/special-instructions": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Appointments_UpdateSpecialInstructions",
                "operationId": "Appointments_UpdateSpecialInstructions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.UpdateAppointmentSpecialInstructionsRequest"
                            },
                            "example": {
                                "specialInstructions": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.AppointmentResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobId": 0,
                                    "appointmentNumber": "string",
                                    "start": "string",
                                    "end": "string",
                                    "arrivalWindowStart": "string",
                                    "arrivalWindowEnd": "string",
                                    "status": {},
                                    "specialInstructions": "string",
                                    "createdOn": "string",
                                    "modifiedOn": "string",
                                    "customerId": 0,
                                    "unused": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Some conflict occurred while executing the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/appointments/{id}/confirmation": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Adds a confirmation to the specified appointment.",
                "description": "Adds a confirmation to the specified appointment.",
                "operationId": "Appointments_Confirm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Appointment is already confirmed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Adds a confirmation to the specified appointment.",
                "description": "Adds a confirmation to the specified appointment.",
                "operationId": "Appointments_RemoveConfirmation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Appointment was not confirmed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/jobs": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for jobs",
                "description": "Provides export feed for jobs",
                "operationId": "Export_Jobs",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportJobsResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobNumber": "string",
                                            "projectId": 0,
                                            "customerId": 0,
                                            "locationId": 0,
                                            "jobStatus": "string",
                                            "completedOn": "string",
                                            "businessUnitId": 0,
                                            "jobTypeId": 0,
                                            "priority": "string",
                                            "campaignId": 0,
                                            "summary": "string",
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "appointmentCount": 0,
                                            "firstAppointmentId": 0,
                                            "lastAppointmentId": 0,
                                            "recallForId": 0,
                                            "warrantyId": 0,
                                            "jobGeneratedLeadSource": {
                                                "jobId": 0,
                                                "employeeId": 0
                                            },
                                            "noCharge": true,
                                            "notificationsEnabled": true,
                                            "createdOn": "string",
                                            "createdById": 0,
                                            "modifiedOn": "string",
                                            "tagTypeIds": [
                                                0
                                            ],
                                            "leadCallId": 0,
                                            "bookingId": 0,
                                            "soldById": 0,
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "customerPo": "string",
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/projects": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for projects",
                "description": "Provides export feed for projects",
                "operationId": "Export_Projects",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportProjectsResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "number": "string",
                                            "name": "string",
                                            "summary": "string",
                                            "status": "string",
                                            "statusId": 0,
                                            "subStatus": "string",
                                            "subStatusId": 0,
                                            "customerId": 0,
                                            "locationId": 0,
                                            "projectTypeId": 0,
                                            "projectManagerIds": [
                                                0
                                            ],
                                            "businessUnitIds": [
                                                0
                                            ],
                                            "startDate": "string",
                                            "targetCompletionDate": "string",
                                            "actualCompletionDate": "string",
                                            "modifiedOn": "string",
                                            "createdOn": "string",
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "jobIds": [
                                                0
                                            ],
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/appointments": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for appointments",
                "description": "Provides export feed for appointments",
                "operationId": "Export_Appointments",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportAppointmentsResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobId": 0,
                                            "appointmentNumber": "string",
                                            "start": "string",
                                            "end": "string",
                                            "arrivalWindowStart": "string",
                                            "arrivalWindowEnd": "string",
                                            "status": {},
                                            "specialInstructions": "string",
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "customerId": 0,
                                            "unused": true,
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/job-canceled-logs": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for job canceled logs",
                "description": "Provides export feed for job canceled logs",
                "operationId": "Export_JobCancelReasons",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportJobCanceledLogResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobId": 0,
                                            "reasonId": 0,
                                            "memo": "string",
                                            "createdOn": "string",
                                            "createdById": 0,
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/job-notes": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for job notes",
                "description": "Provides export feed for job notes",
                "operationId": "Export_JobNotes",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportJobNotesResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "text": "string",
                                            "isPinned": true,
                                            "createdById": 0,
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "jobId": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/project-notes": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for project notes",
                "description": "Provides export feed for project notes",
                "operationId": "Export_ProjectNotes",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportProjectNotesResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "id": 0,
                                            "active": true,
                                            "text": "string",
                                            "isPinned": true,
                                            "createdById": 0,
                                            "createdOn": "string",
                                            "modifiedOn": "string",
                                            "projectId": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/export/job-history": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Provides export feed for job canceled logs",
                "description": "Provides export feed for job canceled logs",
                "operationId": "Export_JobHistory",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Continuation token received from previous export request in \"continueFrom\" field.\nWhen not specified, the export process starts from the beginning.\\\nUse custom date strings, e.g. \"2020-01-01\" to start the export process from the certain point in time.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeRecentChanges",
                        "in": "query",
                        "description": "Use \"true\" to start receiving the most recent changes quicker.\nNote this may cause the same results appearing multiple times on consecutive requests.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse_Of_Jpm.V2.ExportJobHistoryResponse"
                                },
                                "example": {
                                    "hasMore": true,
                                    "continueFrom": "string",
                                    "data": [
                                        {
                                            "jobId": 0,
                                            "history": [
                                                {
                                                    "id": 0,
                                                    "employeeId": 0,
                                                    "eventType": "string",
                                                    "date": "string",
                                                    "usedSchedulingTool": {}
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/job-cancel-reasons": {
            "get": {
                "tags": [
                    "JobCancelReasons"
                ],
                "summary": "Gets a list of job cancel reasons",
                "description": "Gets a list of job cancel reasons",
                "operationId": "JobCancelReasons_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (active and inactive items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.JobCancelReasonResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/job-hold-reasons": {
            "get": {
                "tags": [
                    "JobHoldReasons"
                ],
                "summary": "Gets a list of job hold reasons",
                "description": "Gets a list of job hold reasons",
                "operationId": "JobHoldReasons_Get",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (active and inactive items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.JobHoldReasonResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "active": true,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Gets a job by ID",
                "description": "Gets a job by ID",
                "operationId": "Jobs_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobNumber": "string",
                                    "projectId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "jobStatus": "string",
                                    "completedOn": "string",
                                    "businessUnitId": 0,
                                    "jobTypeId": 0,
                                    "priority": "string",
                                    "campaignId": 0,
                                    "summary": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "appointmentCount": 0,
                                    "firstAppointmentId": 0,
                                    "lastAppointmentId": 0,
                                    "recallForId": 0,
                                    "warrantyId": 0,
                                    "jobGeneratedLeadSource": {
                                        "jobId": 0,
                                        "employeeId": 0
                                    },
                                    "noCharge": true,
                                    "notificationsEnabled": true,
                                    "createdOn": "string",
                                    "createdById": 0,
                                    "modifiedOn": "string",
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "leadCallId": 0,
                                    "bookingId": 0,
                                    "soldById": 0,
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "customerPo": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Updates a job",
                "description": "Updates a job",
                "operationId": "Jobs_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.UpdateJobRequest"
                            },
                            "example": {
                                "customerId": 0,
                                "locationId": 0,
                                "businessUnitId": 0,
                                "jobGeneratedLeadSource": {
                                    "jobId": 0,
                                    "employeeId": 0
                                },
                                "jobTypeId": 0,
                                "priority": "string",
                                "campaignId": 0,
                                "summary": "string",
                                "shouldUpdateInvoiceItems": true,
                                "customFields": [
                                    {
                                        "typeId": 0,
                                        "value": "string"
                                    }
                                ],
                                "tagTypeIds": [
                                    0
                                ],
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                },
                                "customerPo": "string",
                                "soldById": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobNumber": "string",
                                    "projectId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "jobStatus": "string",
                                    "completedOn": "string",
                                    "businessUnitId": 0,
                                    "jobTypeId": 0,
                                    "priority": "string",
                                    "campaignId": 0,
                                    "summary": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "appointmentCount": 0,
                                    "firstAppointmentId": 0,
                                    "lastAppointmentId": 0,
                                    "recallForId": 0,
                                    "warrantyId": 0,
                                    "jobGeneratedLeadSource": {
                                        "jobId": 0,
                                        "employeeId": 0
                                    },
                                    "noCharge": true,
                                    "notificationsEnabled": true,
                                    "createdOn": "string",
                                    "createdById": 0,
                                    "modifiedOn": "string",
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "leadCallId": 0,
                                    "bookingId": 0,
                                    "soldById": 0,
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "customerPo": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Creates a job",
                "description": "Creates a job",
                "operationId": "Jobs_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.JobCreateRequest"
                            },
                            "example": {
                                "customerId": 0,
                                "locationId": 0,
                                "projectId": 0,
                                "businessUnitId": 0,
                                "jobGeneratedLeadSource": {
                                    "jobId": 0,
                                    "employeeId": 0
                                },
                                "jobTypeId": 0,
                                "priority": "string",
                                "campaignId": 0,
                                "appointments": [
                                    {
                                        "start": "string",
                                        "end": "string",
                                        "arrivalWindowStart": "string",
                                        "arrivalWindowEnd": "string",
                                        "technicianIds": [
                                            0
                                        ]
                                    }
                                ],
                                "summary": "string",
                                "customFields": [
                                    {
                                        "typeId": 0,
                                        "value": "string"
                                    }
                                ],
                                "tagTypeIds": [
                                    0
                                ],
                                "externalData": {
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                },
                                "invoiceSignatureIsRequired": true,
                                "customerPo": "string",
                                "soldById": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobNumber": "string",
                                    "projectId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "jobStatus": "string",
                                    "completedOn": "string",
                                    "businessUnitId": 0,
                                    "jobTypeId": 0,
                                    "priority": "string",
                                    "campaignId": 0,
                                    "summary": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "appointmentCount": 0,
                                    "firstAppointmentId": 0,
                                    "lastAppointmentId": 0,
                                    "recallForId": 0,
                                    "warrantyId": 0,
                                    "jobGeneratedLeadSource": {
                                        "jobId": 0,
                                        "employeeId": 0
                                    },
                                    "noCharge": true,
                                    "notificationsEnabled": true,
                                    "createdOn": "string",
                                    "createdById": 0,
                                    "modifiedOn": "string",
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "leadCallId": 0,
                                    "bookingId": 0,
                                    "soldById": 0,
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "customerPo": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Gets a list of jobs",
                "description": "Gets a list of jobs",
                "operationId": "Jobs_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Filters by job number",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Format - int64. Filters by project ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "bookingId",
                        "in": "query",
                        "description": "Format - int64. Filters by booking ID that resulted in this job",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobStatus",
                        "in": "query",
                        "description": "Filters by job status\\\nValues: [Scheduled, Dispatched, InProgress, Hold, Completed, Canceled]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Jpm.V2.JobStatus"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "appointmentStatus",
                        "in": "query",
                        "description": "Filters by appointment status. Return a job if it has any appointment with the specified status.\\\nValues: [Scheduled, Dispatched, Working, Hold, Done, Canceled]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/Jpm.V2.JobAppointmentStatus"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filters by priority. Supported priorities are \"Low\", \"Normal\", \"High\", \"Urgent\"",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "firstAppointmentStartsOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs whose first appointment starts on or after date/time (in UTC). Use with\n\"firstAppointmentStartsBefore\" to find jobs whose first appointment is within the specified date range.",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "firstAppointmentStartsBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs whose first appointment starts before date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "appointmentStartsOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs if any appointment starts after date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "appointmentStartsBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs if any appointment starts after date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "technicianId",
                        "in": "query",
                        "description": "Format - int64. Return jobs if technician is assigned to any appointment",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Format - int64. Filters by job's customer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "locationId",
                        "in": "query",
                        "description": "Format - int64. Filters by job's location ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "soldById",
                        "in": "query",
                        "description": "Format - int64. Filters by the technician who sold the job",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobTypeId",
                        "in": "query",
                        "description": "Format - int64. Filters by job type ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "campaignId",
                        "in": "query",
                        "description": "Format - int64. Filters by job's campaign ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "businessUnitId",
                        "in": "query",
                        "description": "Format - int64. Filters by job's business unit ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "invoiceId",
                        "in": "query",
                        "description": "Format - int64. Filters by job's invoice ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "completedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs that are completed after a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "completedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return jobs that are completed before a certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "tagTypeIds",
                        "in": "query",
                        "description": "Return jobs that have at least one of provided Tag Type assigned",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn, Priority.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "hasUnusedAppointments",
                        "in": "query",
                        "description": "If set to true, return jobs that have unused appointments.",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.JobResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobNumber": "string",
                                            "projectId": 0,
                                            "customerId": 0,
                                            "locationId": 0,
                                            "jobStatus": "string",
                                            "completedOn": "string",
                                            "businessUnitId": 0,
                                            "jobTypeId": 0,
                                            "priority": "string",
                                            "campaignId": 0,
                                            "summary": "string",
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "appointmentCount": 0,
                                            "firstAppointmentId": 0,
                                            "lastAppointmentId": 0,
                                            "recallForId": 0,
                                            "warrantyId": 0,
                                            "jobGeneratedLeadSource": {
                                                "jobId": 0,
                                                "employeeId": 0
                                            },
                                            "noCharge": true,
                                            "notificationsEnabled": true,
                                            "createdOn": "string",
                                            "createdById": 0,
                                            "modifiedOn": "string",
                                            "tagTypeIds": [
                                                0
                                            ],
                                            "leadCallId": 0,
                                            "bookingId": 0,
                                            "soldById": 0,
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "customerPo": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/cancel": {
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Cancels a job",
                "description": "Cancels a job",
                "operationId": "Jobs_Cancel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.CancelJobRequest"
                            },
                            "example": {
                                "reasonId": 0,
                                "memo": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/remove-cancellation": {
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Removes cancellation from a job",
                "description": "Removes cancellation from a job",
                "operationId": "Jobs_RemoveCancellation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/hold": {
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Puts a job on hold",
                "description": "Puts a job on hold",
                "operationId": "Jobs_Hold",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.HoldJobRequest"
                            },
                            "example": {
                                "reasonId": 0,
                                "memo": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/complete": {
            "put": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Completes a job",
                "description": "Completes a job",
                "operationId": "Jobs_Complete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.CompleteJobRequest"
                            },
                            "example": {
                                "completedOn": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Job already completed or cancelled or has no assigned technicians",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/notes": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Gets a list of notes on the specified job",
                "description": "Gets a list of notes on the specified job",
                "operationId": "Jobs_GetNotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.NoteResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "text": "string",
                                            "isPinned": true,
                                            "createdById": 0,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Creates a note on the specified job",
                "description": "Creates a note on the specified job",
                "operationId": "Jobs_CreateNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.JobNoteCreateRequest"
                            },
                            "example": {
                                "text": "string",
                                "pinToTop": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.NoteResponse"
                                },
                                "example": {
                                    "text": "string",
                                    "isPinned": true,
                                    "createdById": 0,
                                    "createdOn": "string",
                                    "modifiedOn": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/cancel-reasons": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Gets a list of cancel reasons for specific jobs",
                "description": "Gets a list of cancel reasons for specific jobs",
                "operationId": "Jobs_GetCancelReasons",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.CancelReasonResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "jobId": 0,
                                            "reasonId": 0,
                                            "name": "string",
                                            "text": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/history": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Gets a list of history entries for the specified job",
                "description": "Gets a list of history entries for the specified job",
                "operationId": "Jobs_GetHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobHistoryResponse"
                                },
                                "example": {
                                    "history": [
                                        {
                                            "id": 0,
                                            "employeeId": 0,
                                            "eventType": "string",
                                            "date": "string",
                                            "usedSchedulingTool": "Manual"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/messages": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Creates a message on a job",
                "description": "Creates a message on a job",
                "operationId": "Jobs_CreateMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.MessageCreateRequest"
                            },
                            "example": {
                                "body": "string",
                                "recipientIds": [
                                    0
                                ],
                                "parentMessageId": 0,
                                "addParentMessageSenderToRecipients": true,
                                "createdByEmployeeId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.MessageResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/canceled-log": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get a list of cancelled logs for the specified job",
                "description": "Get a list of cancelled logs for the specified job",
                "operationId": "Jobs_GetJobCanceledLogs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.JobCanceledLogResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "jobId": 0,
                                            "reasonId": 0,
                                            "memo": "string",
                                            "createdOn": "string",
                                            "createdById": 0,
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/{id}/booked-log": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Get booked log for the specified job",
                "description": "Get booked log for the specified job",
                "operationId": "Jobs_GetBookedLog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobBookedLogResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "jobId": 0,
                                    "jobAppointmentId": 0,
                                    "start": "string",
                                    "arrivalWindowStart": "string",
                                    "arrivalWindowEnd": "string",
                                    "createdOn": "string",
                                    "createdById": 0,
                                    "active": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/jobs/custom-fields": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Returns a list of custom field types available for projects",
                "description": "Returns a list of custom field types available for projects",
                "operationId": "Jobs_GetCustomFieldTypes",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.CustomFieldTypeResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "dataType": "Text",
                                            "dataTypeOptions": [
                                                "string"
                                            ],
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/job-types": {
            "get": {
                "tags": [
                    "JobTypes"
                ],
                "summary": "Gets a list of job types",
                "description": "Gets a list of job types",
                "operationId": "JobTypes_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filters by job type name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "minDuration",
                        "in": "query",
                        "description": "Format - int32. Minimum length of time for this job type (in seconds)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "maxDuration",
                        "in": "query",
                        "description": "Format - int32. Maximum length of time for this job type (in seconds)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Level of urgency for this type of job",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders results by a field. Supported fields are \"id\", \"modifiedOn\", and \"createdOn\"",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "orderByDirection",
                        "in": "query",
                        "description": "Specifies order direction of results. Supported values are \"asc\"/\"ascending\" and \"desc\"/\"descending\"",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.JobTypeResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "businessUnitIds": [
                                                0
                                            ],
                                            "skills": [
                                                "string"
                                            ],
                                            "tagTypeIds": [
                                                0
                                            ],
                                            "priority": "string",
                                            "duration": 0,
                                            "soldThreshold": 0,
                                            "class": "string",
                                            "summary": "string",
                                            "noCharge": true,
                                            "enforceRecurringServiceEventSelection": true,
                                            "invoiceSignaturesRequired": true,
                                            "modifiedOn": "string",
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "JobTypes"
                ],
                "summary": "Creates a job type",
                "description": "Creates a job type",
                "operationId": "JobTypes_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.CreateJobTypeRequest"
                            },
                            "example": {
                                "name": "string",
                                "businessUnitIds": [
                                    0
                                ],
                                "skills": [
                                    "string"
                                ],
                                "tagTypeIds": [
                                    0
                                ],
                                "priority": "string",
                                "duration": 0,
                                "soldThreshold": 0,
                                "class": "string",
                                "summary": "string",
                                "noCharge": true,
                                "enforceRecurringServiceEventSelection": true,
                                "invoiceSignaturesRequired": true,
                                "externalData": {
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobTypeResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "skills": [
                                        "string"
                                    ],
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "priority": "string",
                                    "duration": 0,
                                    "soldThreshold": 0,
                                    "class": "string",
                                    "summary": "string",
                                    "noCharge": true,
                                    "enforceRecurringServiceEventSelection": true,
                                    "invoiceSignaturesRequired": true,
                                    "modifiedOn": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "active": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/job-types/{id}": {
            "get": {
                "tags": [
                    "JobTypes"
                ],
                "summary": "Gets a job type by ID",
                "description": "Gets a job type by ID",
                "operationId": "JobTypes_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobTypeResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "skills": [
                                        "string"
                                    ],
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "priority": "string",
                                    "duration": 0,
                                    "soldThreshold": 0,
                                    "class": "string",
                                    "summary": "string",
                                    "noCharge": true,
                                    "enforceRecurringServiceEventSelection": true,
                                    "invoiceSignaturesRequired": true,
                                    "modifiedOn": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "active": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "JobTypes"
                ],
                "summary": "Update a job type",
                "description": "Update a job type",
                "operationId": "JobTypes_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.UpdateJobTypeRequest"
                            },
                            "example": {
                                "name": "string",
                                "businessUnitIds": [
                                    0
                                ],
                                "skills": [
                                    "string"
                                ],
                                "tagTypeIds": [
                                    0
                                ],
                                "priority": "string",
                                "duration": 0,
                                "soldThreshold": 0,
                                "class": "string",
                                "summary": "string",
                                "noCharge": true,
                                "enforceRecurringServiceEventSelection": true,
                                "invoiceSignaturesRequired": true,
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.JobTypeResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "skills": [
                                        "string"
                                    ],
                                    "tagTypeIds": [
                                        0
                                    ],
                                    "priority": "string",
                                    "duration": 0,
                                    "soldThreshold": 0,
                                    "class": "string",
                                    "summary": "string",
                                    "noCharge": true,
                                    "enforceRecurringServiceEventSelection": true,
                                    "invoiceSignaturesRequired": true,
                                    "modifiedOn": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "active": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets a project by ID",
                "description": "Gets a project by ID",
                "operationId": "Projects_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "number": "string",
                                    "name": "string",
                                    "summary": "string",
                                    "status": "string",
                                    "statusId": 0,
                                    "subStatus": "string",
                                    "subStatusId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "projectTypeId": 0,
                                    "projectManagerIds": [
                                        0
                                    ],
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "startDate": "string",
                                    "targetCompletionDate": "string",
                                    "actualCompletionDate": "string",
                                    "modifiedOn": "string",
                                    "createdOn": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "jobIds": [
                                        0
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "description": "Update a project",
                "operationId": "Projects_Update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.UpdateProjectRequest"
                            },
                            "example": {
                                "projectManagerIds": [
                                    0
                                ],
                                "jobIds": [
                                    0
                                ],
                                "name": "string",
                                "summary": "string",
                                "statusId": 0,
                                "subStatusId": 0,
                                "projectTypeId": 0,
                                "startDate": "string",
                                "targetCompletionDate": "string",
                                "actualCompletionDate": "string",
                                "customFields": [
                                    {
                                        "typeId": 0,
                                        "value": "string"
                                    }
                                ],
                                "externalData": {
                                    "patchMode": {},
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "number": "string",
                                    "name": "string",
                                    "summary": "string",
                                    "status": "string",
                                    "statusId": 0,
                                    "subStatus": "string",
                                    "subStatusId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "projectTypeId": 0,
                                    "projectManagerIds": [
                                        0
                                    ],
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "startDate": "string",
                                    "targetCompletionDate": "string",
                                    "actualCompletionDate": "string",
                                    "modifiedOn": "string",
                                    "createdOn": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "jobIds": [
                                        0
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets a list of projects",
                "description": "Gets a list of projects",
                "operationId": "Projects_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Format - int64. Filters by customer ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "locationId",
                        "in": "query",
                        "description": "Format - int64. Filters by location ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectTypeId",
                        "in": "query",
                        "description": "Format - int64. Return projects if it contains the specified project type",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "invoiceId",
                        "in": "query",
                        "description": "Format - int64. Return projects if it contains the specified invoice",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "technicianId",
                        "in": "query",
                        "description": "Format - int64. Return project if technician is assigned to any appointments on any job in the project",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "query",
                        "description": "Format - int64. Return project if it contains the specified job",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "appointmentId",
                        "in": "query",
                        "description": "Format - int64. Return project if it contains the specified appointment in the project's jobs",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "projectManagerIds",
                        "in": "query",
                        "description": "Filters by id of managers for matching project",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "businessUnitIds",
                        "in": "query",
                        "description": "Returns projects which have at least one of the provided business units assigned ",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "startsBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects that start before date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "startsOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects that start on or after date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "completedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects that are completed before date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "completedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects that are completed on or after date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "targetCompletionDateBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects whose target completion date is before date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "targetCompletionDateOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects whose target completion date is on or after date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects whose last modification date is before date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return projects whose last modification date is on or after date",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Returns projects which have one of the provided statuses.\n\"None\" could be passed as one of the values to include projects without a status in the resulting collection.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn, Name, TargetCompletionDate.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataApplicationGuid",
                        "in": "query",
                        "description": "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned.",
                        "schema": {
                            "type": "string",
                            "format": "guid",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataKey",
                        "in": "query",
                        "description": "Performs lookup by external data key, 'externalDataValues' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "externalDataValues",
                        "in": "query",
                        "description": "Performs lookup by external data values (maximum 50), 'externalDataKey' must also be provided.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.ProjectResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "number": "string",
                                            "name": "string",
                                            "summary": "string",
                                            "status": "string",
                                            "statusId": 0,
                                            "subStatus": "string",
                                            "subStatusId": 0,
                                            "customerId": 0,
                                            "locationId": 0,
                                            "projectTypeId": 0,
                                            "projectManagerIds": [
                                                0
                                            ],
                                            "businessUnitIds": [
                                                0
                                            ],
                                            "startDate": "string",
                                            "targetCompletionDate": "string",
                                            "actualCompletionDate": "string",
                                            "modifiedOn": "string",
                                            "createdOn": "string",
                                            "customFields": [
                                                {
                                                    "typeId": 0,
                                                    "name": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "externalData": [
                                                {
                                                    "key": "string",
                                                    "value": "string"
                                                }
                                            ],
                                            "jobIds": [
                                                0
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a New Project",
                "description": "Creates a New Project",
                "operationId": "Projects_Create",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.CreateProjectRequest"
                            },
                            "example": {
                                "locationId": 0,
                                "customerId": 0,
                                "projectTypeId": 0,
                                "projectManagerIds": [
                                    0
                                ],
                                "name": "string",
                                "summary": "string",
                                "statusId": 0,
                                "subStatusId": 0,
                                "startDate": "string",
                                "targetCompletionDate": "string",
                                "actualCompletionDate": "string",
                                "customFields": [
                                    {
                                        "typeId": 0,
                                        "value": "string"
                                    }
                                ],
                                "externalData": {
                                    "applicationGuid": "string",
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "number": "string",
                                    "name": "string",
                                    "summary": "string",
                                    "status": "string",
                                    "statusId": 0,
                                    "subStatus": "string",
                                    "subStatusId": 0,
                                    "customerId": 0,
                                    "locationId": 0,
                                    "projectTypeId": 0,
                                    "projectManagerIds": [
                                        0
                                    ],
                                    "businessUnitIds": [
                                        0
                                    ],
                                    "startDate": "string",
                                    "targetCompletionDate": "string",
                                    "actualCompletionDate": "string",
                                    "modifiedOn": "string",
                                    "createdOn": "string",
                                    "customFields": [
                                        {
                                            "typeId": 0,
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "externalData": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "jobIds": [
                                        0
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/{id}/notes": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets a list of notes on the specified project",
                "description": "Gets a list of notes on the specified project",
                "operationId": "Projects_GetNotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.NoteResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "text": "string",
                                            "isPinned": true,
                                            "createdById": 0,
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a note on the specified project",
                "description": "Creates a note on the specified project",
                "operationId": "Projects_CreateNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.ProjectNoteCreateRequest"
                            },
                            "example": {
                                "text": "string",
                                "pinToTop": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.NoteResponse"
                                },
                                "example": {
                                    "text": "string",
                                    "isPinned": true,
                                    "createdById": 0,
                                    "createdOn": "string",
                                    "modifiedOn": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/{id}/attach-job/{jobId}": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Attaches Job to the specified project",
                "description": "Attaches Job to the specified project",
                "operationId": "Projects_AttachJob",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/detach-job/{jobId}": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Detaches Job from the project",
                "description": "Detaches Job from the project",
                "operationId": "Projects_DetachJob",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded"
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/{id}/messages": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a message on a project",
                "description": "Creates a message on a project",
                "operationId": "Projects_CreateMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Jpm.V2.MessageCreateRequest"
                            },
                            "example": {
                                "body": "string",
                                "recipientIds": [
                                    0
                                ],
                                "parentMessageId": 0,
                                "addParentMessageSenderToRecipients": true,
                                "createdByEmployeeId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.MessageResponse"
                                },
                                "example": {
                                    "id": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/projects/custom-fields": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Returns a list of custom field types available for projects",
                "description": "Returns a list of custom field types available for projects",
                "operationId": "Projects_GetCustomFieldTypes",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.CustomFieldTypeResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "dataType": "Text",
                                            "dataTypeOptions": [
                                                "string"
                                            ],
                                            "createdOn": "string",
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-statuses": {
            "get": {
                "tags": [
                    "ProjectStatuses"
                ],
                "summary": "Gets a list of project statuses",
                "description": "Gets a list of project statuses",
                "operationId": "ProjectStatuses_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filters by project status name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, Name, Order, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.ProjectStatusResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "order": 0,
                                            "modifiedOn": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-statuses/{id}": {
            "get": {
                "tags": [
                    "ProjectStatuses"
                ],
                "summary": "Gets a project status by ID",
                "description": "Gets a project status by ID",
                "operationId": "ProjectStatuses_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectStatusResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "order": 0,
                                    "modifiedOn": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-substatuses": {
            "get": {
                "tags": [
                    "ProjectSubStatuses"
                ],
                "summary": "Gets a list of project sub statuses",
                "description": "Gets a list of project sub statuses",
                "operationId": "ProjectSubStatuses_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filters by project sub status name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "statusId",
                        "in": "query",
                        "description": "Format - int64. Filters by parent project status id",
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Perform lookup by multiple IDs (maximum 50)",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, Name, Order, StatusId, ModifiedOn, CreatedOn.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "createdOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedBefore",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "modifiedOnOrAfter",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "What kind of items should be returned (active items will be returned by default)\\\nValues: [True, Any, False]",
                        "schema": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ActiveRequestArg"
                                }
                            ],
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.ProjectSubStatusResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "statusId": 0,
                                            "order": 0,
                                            "modifiedOn": "string",
                                            "active": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-substatuses/{id}": {
            "get": {
                "tags": [
                    "ProjectSubStatuses"
                ],
                "summary": "Gets a project sub status by ID",
                "description": "Gets a project sub status by ID",
                "operationId": "ProjectSubStatuses_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectSubStatusResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "statusId": 0,
                                    "order": 0,
                                    "modifiedOn": "string",
                                    "active": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-types/{id}": {
            "get": {
                "tags": [
                    "ProjectTypes"
                ],
                "summary": "Gets a project type by ID",
                "description": "Gets a project type by ID",
                "operationId": "ProjectTypes_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Jpm.V2.ProjectTypeResponse"
                                },
                                "example": {
                                    "id": 0,
                                    "name": "string",
                                    "description": "string",
                                    "createdById": 0
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested entity was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant/{tenant}/project-types": {
            "get": {
                "tags": [
                    "ProjectTypes"
                ],
                "summary": "Gets a list of project types",
                "description": "Gets a list of project types",
                "operationId": "ProjectTypes_GetList",
                "parameters": [
                    {
                        "name": "tenant",
                        "in": "path",
                        "description": "Format - int64. Tenant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The logical number of page to return, starting from 1",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. How many records to return (50 by default)",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true
                        }
                    },
                    {
                        "name": "includeTotal",
                        "in": "query",
                        "description": "Whether total count should be returned",
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request has succeeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse_Of_Jpm.V2.ProjectTypeResponse"
                                },
                                "example": {
                                    "page": 0,
                                    "pageSize": 0,
                                    "hasMore": true,
                                    "totalCount": 0,
                                    "data": [
                                        {
                                            "id": 0,
                                            "name": "string",
                                            "description": "string",
                                            "createdById": 0
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request cannot be processed, check validation errors or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "traceId": "string",
                                    "errors": {},
                                    "data": {}
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Jpm.V2.AppointmentResponse": {
                "required": [
                    "id",
                    "jobId",
                    "start",
                    "end",
                    "status",
                    "createdOn",
                    "modifiedOn",
                    "customerId",
                    "unused"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Appointment ID",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job that the appointment was created for",
                        "format": "int64"
                    },
                    "appointmentNumber": {
                        "type": "string",
                        "description": "Appointment number",
                        "nullable": true
                    },
                    "start": {
                        "type": "string",
                        "description": "Appointment's start date/time (in UTC)",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "Appointment's end date/time (in UTC)",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "Arrival window start date/time (in UTC), if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "Arrival window end date/time (in UTC), if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.AppointmentStatus"
                            }
                        ],
                        "description": "Appointment's status"
                    },
                    "specialInstructions": {
                        "type": "string",
                        "description": "Special instructions associated to the appointment",
                        "format": "multiline",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "When the appointment was created (in UTC)",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "When the appointment was modified (in UTC)",
                        "format": "date-time"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "Id of a customer that the appointment was created for",
                        "format": "int64"
                    },
                    "unused": {
                        "type": "boolean",
                        "description": "Returns true if the appointment is unused"
                    }
                },
                "additionalProperties": false,
                "description": "Appointment response model"
            },
            "Jpm.V2.AppointmentStatus": {
                "enum": [
                    "Scheduled",
                    "Dispatched",
                    "Working",
                    "Hold",
                    "Done",
                    "Canceled"
                ],
                "type": "string",
                "description": "Indicates the status of a AppointmentResponse.",
                "x-enumNames": [
                    "Scheduled",
                    "Dispatched",
                    "Working",
                    "Hold",
                    "Done",
                    "Canceled"
                ]
            },
            "ApiErrorResponse": {
                "required": [
                    "type",
                    "title",
                    "status",
                    "traceId",
                    "errors",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "A URI reference that identifies the problem type"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable summary of the problem type"
                    },
                    "status": {
                        "type": "integer",
                        "description": "The HTTP status code generated by server",
                        "format": "int32"
                    },
                    "traceId": {
                        "type": "string",
                        "description": "Internal trace ID for advanced diagnostics"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Provides more details about errors occurred, which can potentially be used for visual display"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Provides additional data, intended for programmatical usage"
                    }
                },
                "additionalProperties": false,
                "description": "Detailed error response, following RFC 7807 recommendations (https://tools.ietf.org/html/rfc7807)."
            },
            "PaginatedResponse_Of_Jpm.V2.AppointmentResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.AppointmentResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.AppointmentAddRequest": {
                "required": [
                    "jobId",
                    "start",
                    "end"
                ],
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "integer",
                        "description": "ID of job for new appointment",
                        "format": "int64"
                    },
                    "start": {
                        "type": "string",
                        "description": "Start date/time (in UTC) of new appointment",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "End date/time (in UTC) of new appointment",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "Arrival window start date/time (in UTC) for new appointment, if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "Arrival window end date/time (in UTC) for new appointment, if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "technicianIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of IDs of technicians to assign to new appointment",
                        "nullable": true
                    },
                    "specialInstructions": {
                        "type": "string",
                        "description": "Special instructions associated to the appointment",
                        "format": "multiline",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.AppointmentRescheduleRequest": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "description": "New start date/time (in UTC) for appointment",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "New end date/time (in UTC) for appointment",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "New arrival window start date/time (in UTC) for appointment, if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "New arrival window end date/time (in UTC) for appointment, if configured",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.HoldAppointmentRequest": {
                "required": [
                    "reasonId",
                    "memo"
                ],
                "type": "object",
                "properties": {
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of the hold reason",
                        "format": "int64"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo of why the appointment is going on hold",
                        "format": "multiline"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.UpdateAppointmentSpecialInstructionsRequest": {
                "required": [
                    "specialInstructions"
                ],
                "type": "object",
                "properties": {
                    "specialInstructions": {
                        "type": "string",
                        "description": "New special instructions associated to the appointment",
                        "format": "multiline"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportJobsResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportJobsResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportJobsResponse": {
                "required": [
                    "id",
                    "jobNumber",
                    "customerId",
                    "locationId",
                    "jobStatus",
                    "businessUnitId",
                    "jobTypeId",
                    "priority",
                    "campaignId",
                    "customFields",
                    "appointmentCount",
                    "firstAppointmentId",
                    "lastAppointmentId",
                    "noCharge",
                    "notificationsEnabled",
                    "createdOn",
                    "createdById",
                    "modifiedOn",
                    "tagTypeIds",
                    "externalData",
                    "customerPo",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job",
                        "format": "int64"
                    },
                    "jobNumber": {
                        "type": "string",
                        "description": "Job number"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "ID of the job's project",
                        "format": "int64",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the job's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the job's location",
                        "format": "int64"
                    },
                    "jobStatus": {
                        "type": "string",
                        "description": "Status of the job"
                    },
                    "completedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was completed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "ID of the job's business unit",
                        "format": "int64"
                    },
                    "jobTypeId": {
                        "type": "integer",
                        "description": "ID of job type",
                        "format": "int64"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the job"
                    },
                    "campaignId": {
                        "type": "integer",
                        "description": "ID of the job's campaign",
                        "format": "int64"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Job summary",
                        "format": "html",
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldApiModel"
                        },
                        "description": "Custom fields on the job"
                    },
                    "appointmentCount": {
                        "type": "integer",
                        "description": "Number of appointments on the job",
                        "format": "int64"
                    },
                    "firstAppointmentId": {
                        "type": "integer",
                        "description": "ID of the first appointment on the job",
                        "format": "int64"
                    },
                    "lastAppointmentId": {
                        "type": "integer",
                        "description": "ID of the last appointment on the job",
                        "format": "int64"
                    },
                    "recallForId": {
                        "type": "integer",
                        "description": "ID of the job for which this job is a recall",
                        "format": "int64",
                        "nullable": true
                    },
                    "warrantyId": {
                        "type": "integer",
                        "description": "ID of the job for which this job is a warranty",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobGeneratedLeadSource": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.JobGeneratedLeadSource"
                            }
                        ],
                        "description": "Object that contains:\n            JobId: ID of the job from which this job was generated\n            EmployeeId: ID of the office user or technician\n            ",
                        "nullable": true
                    },
                    "noCharge": {
                        "type": "boolean",
                        "description": "Whether the job is a no-charge job"
                    },
                    "notificationsEnabled": {
                        "type": "boolean",
                        "description": "Whether notifications will be sent to customers"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was created",
                        "format": "date-time"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of the user who created the job",
                        "format": "int64"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when job was last modified",
                        "format": "date-time"
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Tags on the job"
                    },
                    "leadCallId": {
                        "type": "integer",
                        "description": "ID of the Call that resulted in this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "bookingId": {
                        "type": "integer",
                        "description": "ID of the Booking that resulted in this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "soldById": {
                        "type": "integer",
                        "description": "ID of the Technician that sold this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this job,\nthat corresponds to the application guid provided in the request."
                    },
                    "customerPo": {
                        "type": "string",
                        "description": "Customer PO"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this job is active, or not anymore."
                    }
                },
                "additionalProperties": false
            },
            "CustomFieldApiModel": {
                "required": [
                    "typeId",
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobGeneratedLeadSource": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "employeeId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ExternalDataModel": {
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "External data key."
                    },
                    "value": {
                        "type": "string",
                        "description": "External data value."
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportProjectsResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportProjectsResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportProjectsResponse": {
                "required": [
                    "id",
                    "number",
                    "customerId",
                    "locationId",
                    "projectManagerIds",
                    "businessUnitIds",
                    "createdOn",
                    "customFields",
                    "externalData",
                    "jobIds",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the project",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Project number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "description": "Project summary",
                        "format": "html",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Project status",
                        "nullable": true
                    },
                    "statusId": {
                        "type": "integer",
                        "description": "Project status id",
                        "format": "int64",
                        "nullable": true
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "Project substatus",
                        "nullable": true
                    },
                    "subStatusId": {
                        "type": "integer",
                        "description": "Project substatus id",
                        "format": "int64",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the project's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the project's location",
                        "format": "int64"
                    },
                    "projectTypeId": {
                        "type": "integer",
                        "description": "ID of the project's type",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectManagerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of project managers for the project."
                    },
                    "businessUnitIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of business units for the project."
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "targetCompletionDate": {
                        "type": "string",
                        "description": "Target completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualCompletionDate": {
                        "type": "string",
                        "description": "Actual completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Projects last modification date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the project was created",
                        "format": "date-time"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldApiModel"
                        },
                        "description": "Custom fields on the project"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this project,\nthat corresponds to the application guid provided in the request."
                    },
                    "jobIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of jobs associated with this project."
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportAppointmentsResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportAppointmentsResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportAppointmentsResponse": {
                "required": [
                    "id",
                    "jobId",
                    "start",
                    "end",
                    "status",
                    "createdOn",
                    "modifiedOn",
                    "customerId",
                    "unused",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Appointment ID",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job that the appointment was created for",
                        "format": "int64"
                    },
                    "appointmentNumber": {
                        "type": "string",
                        "description": "Appointment number",
                        "nullable": true
                    },
                    "start": {
                        "type": "string",
                        "description": "Appointment's start date/time (in UTC)",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "Appointment's end date/time (in UTC)",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "Arrival window start date/time (in UTC), if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "Arrival window end date/time (in UTC), if configured",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.AppointmentStatus"
                            }
                        ],
                        "description": "Appointment's status"
                    },
                    "specialInstructions": {
                        "type": "string",
                        "description": "Special instructions associated to the appointment",
                        "format": "multiline",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "When the appointment was created (in UTC)",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "When the appointment was modified (in UTC)",
                        "format": "date-time"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "Id of a customer that the appointment was created for",
                        "format": "int64"
                    },
                    "unused": {
                        "type": "boolean",
                        "description": "Returns true if the appointment is unused"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this appointment is active, or not anymore."
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportJobCanceledLogResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportJobCanceledLogResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportJobCanceledLogResponse": {
                "required": [
                    "id",
                    "jobId",
                    "reasonId",
                    "createdOn",
                    "createdById",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job canceled log",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job that has been canceled",
                        "format": "int64"
                    },
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of the job cancel reason",
                        "format": "int64"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Job canceled log additional comments",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job canceled log was created",
                        "format": "date-time"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who canceled the job",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the job canceled log is active"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportJobNotesResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportJobNotesResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportJobNotesResponse": {
                "required": [
                    "id",
                    "active",
                    "text",
                    "isPinned",
                    "createdById",
                    "createdOn",
                    "modifiedOn",
                    "jobId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Note Id.",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this note is active, or not anymore."
                    },
                    "text": {
                        "type": "string",
                        "description": "Text content of a note"
                    },
                    "isPinned": {
                        "type": "boolean",
                        "description": "Whether the note is pinned to the top"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who created this note",
                        "format": "int64"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was created",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was modified",
                        "format": "date-time"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "Notes Job Id.",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportProjectNotesResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportProjectNotesResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportProjectNotesResponse": {
                "required": [
                    "id",
                    "active",
                    "text",
                    "isPinned",
                    "createdById",
                    "createdOn",
                    "modifiedOn",
                    "projectId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Note Id.",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this note is active, or not anymore."
                    },
                    "text": {
                        "type": "string",
                        "description": "Text content of a note"
                    },
                    "isPinned": {
                        "type": "boolean",
                        "description": "Whether the note is pinned to the top"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who created this note",
                        "format": "int64"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was created",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was modified",
                        "format": "date-time"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "Notes Project Id.",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "ExportResponse_Of_Jpm.V2.ExportJobHistoryResponse": {
                "required": [
                    "hasMore",
                    "continueFrom",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "Indicates whether the export feed has reached its logical \"end\", or if there is more to export.\nTrue means the consumer can invoke another request right away using new continuation token value.\nFalse means there is now new data for the export, and the consumer should wait for some time (5-10 minutes)\nbefore making another request."
                    },
                    "continueFrom": {
                        "type": "string",
                        "description": "Continuation token used to resume the export operation. The value should be used in \"from\" query parameter of the following request."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportJobHistoryResponse"
                        },
                        "description": "The collection of exported items, usually sorted chronologically based on modification date"
                    }
                },
                "additionalProperties": false,
                "description": "Represents export API response."
            },
            "Jpm.V2.ExportJobHistoryResponse": {
                "required": [
                    "jobId",
                    "history"
                ],
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job ",
                        "format": "int64"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExportJobHistoryEntry"
                        },
                        "description": "Job history entries "
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ExportJobHistoryEntry": {
                "required": [
                    "id",
                    "eventType",
                    "date",
                    "usedSchedulingTool"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the log ",
                        "format": "int64"
                    },
                    "employeeId": {
                        "type": "integer",
                        "description": "ID of the employee ",
                        "format": "int64",
                        "nullable": true
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Type of the job status "
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the log ",
                        "format": "date-time"
                    },
                    "usedSchedulingTool": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.JobSchedulingTool"
                            }
                        ],
                        "description": "Scheduling tool used "
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobSchedulingTool": {
                "enum": [
                    "Manual",
                    "SmartSchedule",
                    "SmartDispatch",
                    "TechnicianRouteOptimization"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Manual",
                    "SmartSchedule",
                    "SmartDispatch",
                    "TechnicianRouteOptimization"
                ]
            },
            "PaginatedResponse_Of_Jpm.V2.JobCancelReasonResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.JobCancelReasonResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.JobCancelReasonResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job cancel reason",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the job cancel reason"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the job cancel reason is active"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was created",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when job was last modified",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "ActiveRequestArg": {
                "enum": [
                    "True",
                    "Any",
                    "False"
                ],
                "type": "string",
                "description": "Represents possible HTTP query argument values, when applying filters based on active status.",
                "x-enumNames": [
                    "True",
                    "Any",
                    "False"
                ]
            },
            "PaginatedResponse_Of_Jpm.V2.JobHoldReasonResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.JobHoldReasonResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.JobHoldReasonResponse": {
                "required": [
                    "id",
                    "name",
                    "active",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Job Hold Reason Id",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Job Hold Reason Name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Job Hold Reason Active Status"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was created",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when job was last modified",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobResponse": {
                "required": [
                    "id",
                    "jobNumber",
                    "customerId",
                    "locationId",
                    "jobStatus",
                    "businessUnitId",
                    "jobTypeId",
                    "priority",
                    "campaignId",
                    "customFields",
                    "appointmentCount",
                    "firstAppointmentId",
                    "lastAppointmentId",
                    "noCharge",
                    "notificationsEnabled",
                    "createdOn",
                    "createdById",
                    "modifiedOn",
                    "tagTypeIds",
                    "externalData",
                    "customerPo"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job",
                        "format": "int64"
                    },
                    "jobNumber": {
                        "type": "string",
                        "description": "Job number"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "ID of the job's project",
                        "format": "int64",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the job's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the job's location",
                        "format": "int64"
                    },
                    "jobStatus": {
                        "type": "string",
                        "description": "Status of the job"
                    },
                    "completedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was completed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "ID of the job's business unit",
                        "format": "int64"
                    },
                    "jobTypeId": {
                        "type": "integer",
                        "description": "ID of job type",
                        "format": "int64"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the job"
                    },
                    "campaignId": {
                        "type": "integer",
                        "description": "ID of the job's campaign",
                        "format": "int64"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Job summary",
                        "format": "html",
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldApiModel"
                        },
                        "description": "Custom fields on the job"
                    },
                    "appointmentCount": {
                        "type": "integer",
                        "description": "Number of appointments on the job",
                        "format": "int64"
                    },
                    "firstAppointmentId": {
                        "type": "integer",
                        "description": "ID of the first appointment on the job",
                        "format": "int64"
                    },
                    "lastAppointmentId": {
                        "type": "integer",
                        "description": "ID of the last appointment on the job",
                        "format": "int64"
                    },
                    "recallForId": {
                        "type": "integer",
                        "description": "ID of the job for which this job is a recall",
                        "format": "int64",
                        "nullable": true
                    },
                    "warrantyId": {
                        "type": "integer",
                        "description": "ID of the job for which this job is a warranty",
                        "format": "int64",
                        "nullable": true
                    },
                    "jobGeneratedLeadSource": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.JobGeneratedLeadSource"
                            }
                        ],
                        "description": "Object that contains:\n            JobId: ID of the job from which this job was generated\n            EmployeeId: ID of the office user or technician\n            ",
                        "nullable": true
                    },
                    "noCharge": {
                        "type": "boolean",
                        "description": "Whether the job is a no-charge job"
                    },
                    "notificationsEnabled": {
                        "type": "boolean",
                        "description": "Whether notifications will be sent to customers"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job was created",
                        "format": "date-time"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of the user who created the job",
                        "format": "int64"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when job was last modified",
                        "format": "date-time"
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Tags on the job"
                    },
                    "leadCallId": {
                        "type": "integer",
                        "description": "ID of the Call that resulted in this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "bookingId": {
                        "type": "integer",
                        "description": "ID of the Booking that resulted in this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "soldById": {
                        "type": "integer",
                        "description": "ID of the Technician that sold this job",
                        "format": "int64",
                        "nullable": true
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this job,\nthat corresponds to the application guid provided in the request."
                    },
                    "customerPo": {
                        "type": "string",
                        "description": "Customer PO"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobCreateRequest": {
                "required": [
                    "customerId",
                    "locationId",
                    "businessUnitId",
                    "jobTypeId",
                    "priority",
                    "campaignId",
                    "appointments"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the job's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the job's location",
                        "format": "int64"
                    },
                    "projectId": {
                        "type": "integer",
                        "description": "ID of the job's project",
                        "format": "int64",
                        "nullable": true
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "ID of the job's business unit",
                        "format": "int64"
                    },
                    "jobGeneratedLeadSource": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.JobGeneratedLeadSource"
                            }
                        ],
                        "description": "Object that contains:\n            JobId: ID of the job from which this job was generated\n            EmployeeId: ID of the office user or technician\n            ",
                        "nullable": true
                    },
                    "jobTypeId": {
                        "type": "integer",
                        "description": "ID of job type",
                        "format": "int64"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the job"
                    },
                    "campaignId": {
                        "type": "integer",
                        "description": "ID of the job's campaign",
                        "format": "int64"
                    },
                    "appointments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.AppointmentInformation"
                        },
                        "description": "List of appointment information"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Job summary",
                        "format": "html",
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CustomFieldModel"
                        },
                        "description": "Custom fields on the job",
                        "nullable": true
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of IDs of tags on the job",
                        "nullable": true
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataCreateRequest"
                            }
                        ],
                        "description": "Optional model that contains a list of external data items\nthat should be attached to this job.",
                        "nullable": true
                    },
                    "invoiceSignatureIsRequired": {
                        "type": "boolean",
                        "description": "Optional model that informs if invoice should requires a signature or not\nif not informed will follow the rules for location and job type",
                        "nullable": true
                    },
                    "customerPo": {
                        "type": "string",
                        "description": "Customer PO",
                        "nullable": true
                    },
                    "soldById": {
                        "type": "integer",
                        "description": "ID of the Technician who sold the job",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.AppointmentInformation": {
                "required": [
                    "start",
                    "end"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "description": "Start date/time (in UTC) for the appointment",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "End date/time (in UTC) for the appointment",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "Start date/time (in UTC) for the arrival window of the appointment",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "End date/time (in UTC) for the arrival window of the appointment",
                        "format": "date-time",
                        "nullable": true
                    },
                    "technicianIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of IDs of technicians who will be assigned on the appointment",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CustomFieldModel": {
                "required": [
                    "typeId"
                ],
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "description": "ID of the custom field",
                        "format": "int64"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the custom field",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ExternalDataCreateRequest": {
                "required": [
                    "applicationGuid",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "applicationGuid": {
                        "type": "string",
                        "description": "Items that are created with a specific guid, could be fetched/updated/removed\nonly when the same application guid is provided.",
                        "format": "guid"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "External data list."
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CancelJobRequest": {
                "required": [
                    "reasonId",
                    "memo"
                ],
                "type": "object",
                "properties": {
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of job cancel reason",
                        "format": "int64"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo of job cancel reason",
                        "format": "multiline"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.HoldJobRequest": {
                "required": [
                    "reasonId",
                    "memo"
                ],
                "type": "object",
                "properties": {
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of job hold reason",
                        "format": "int64"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Memo of job hold reason",
                        "format": "multiline"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CompleteJobRequest": {
                "required": [
                    "completedOn"
                ],
                "type": "object",
                "properties": {
                    "completedOn": {
                        "type": "string",
                        "description": "Date on which the job was completed",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.UpdateJobRequest": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the job's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the job's location",
                        "format": "int64"
                    },
                    "businessUnitId": {
                        "type": "integer",
                        "description": "ID of the job's business unit",
                        "format": "int64"
                    },
                    "jobGeneratedLeadSource": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.JobGeneratedLeadSource"
                            }
                        ],
                        "description": "Object that contains:\n            JobId: ID of the job from which this job was generated\n            EmployeeId: ID of the office user or technician\n            ",
                        "nullable": true
                    },
                    "jobTypeId": {
                        "type": "integer",
                        "description": "ID of job type",
                        "format": "int64"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the job"
                    },
                    "campaignId": {
                        "type": "integer",
                        "description": "ID of the job's campaign",
                        "format": "int64"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Job summary",
                        "format": "html"
                    },
                    "shouldUpdateInvoiceItems": {
                        "type": "boolean",
                        "description": "If set to true, update the business unit of invoice items on job's invoice"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CustomFieldModel"
                        },
                        "description": "List of custom fields and their values. This list must describe the full list of custom fields on the job.\nIf job A has values for custom fields X and Y and this field only contains a model for custom field X, then\nthe value for custom field Y on job A will be removed."
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of tag types. This list must describe the full list of tags on the job. If job A has tags X and Y and\nthis field only contains a ID for tag X, then tag Y on job A will be removed."
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "External data update model."
                    },
                    "customerPo": {
                        "type": "string",
                        "description": "Customer PO"
                    },
                    "soldById": {
                        "type": "integer",
                        "description": "ID of the Technician who sold the job.",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ExternalDataUpdateRequest": {
                "required": [
                    "applicationGuid",
                    "externalData"
                ],
                "type": "object",
                "properties": {
                    "patchMode": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataPatchMode"
                            }
                        ],
                        "description": "External data patch mode.\\\n\"Replace\" (default) replaces all existing keys with new values. If job A has custom data with keys X and Y and this field only contains an item\nwith a key X, then custom data with a key Y on job A will be removed.\\\n\"Merge\" will only replace key X in the example above. Keys with null value will be deleted.",
                        "nullable": true
                    },
                    "applicationGuid": {
                        "type": "string",
                        "description": "Items that are created with a specific guid, could be fetched/updated/removed\nonly when the same application guid is provided.",
                        "format": "guid"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataUpdateModel"
                        },
                        "description": "External data list."
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ExternalDataPatchMode": {
                "enum": [
                    "Replace",
                    "Merge"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Replace",
                    "Merge"
                ]
            },
            "Jpm.V2.ExternalDataUpdateModel": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "External data key."
                    },
                    "value": {
                        "type": "string",
                        "description": "External data value.",
                        "format": "multiline",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.JobResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.JobResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.JobStatus": {
                "enum": [
                    "Scheduled",
                    "Dispatched",
                    "InProgress",
                    "Hold",
                    "Completed",
                    "Canceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Scheduled",
                    "Dispatched",
                    "InProgress",
                    "Hold",
                    "Completed",
                    "Canceled"
                ]
            },
            "Jpm.V2.JobAppointmentStatus": {
                "enum": [
                    "Scheduled",
                    "Dispatched",
                    "Working",
                    "Hold",
                    "Done",
                    "Canceled"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Scheduled",
                    "Dispatched",
                    "Working",
                    "Hold",
                    "Done",
                    "Canceled"
                ]
            },
            "PaginatedResponse_Of_Jpm.V2.NoteResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.NoteResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.NoteResponse": {
                "required": [
                    "text",
                    "isPinned",
                    "createdById",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text content of a note"
                    },
                    "isPinned": {
                        "type": "boolean",
                        "description": "Whether the note is pinned to the top"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who created this note",
                        "format": "int64"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was created",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) the note was modified",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobNoteCreateRequest": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Text content of job note"
                    },
                    "pinToTop": {
                        "type": "boolean",
                        "description": "Whether to pin job note to the top",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.CancelReasonResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CancelReasonResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.CancelReasonResponse": {
                "required": [
                    "jobId",
                    "reasonId",
                    "name",
                    "text"
                ],
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "integer",
                        "description": "Job ID",
                        "format": "int64"
                    },
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of the reason",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the reason"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text of the reason"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.JobHistoryResponse": {
                "type": "object",
                "properties": {
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.Jobs.JobHistoryItemModel"
                        },
                        "description": "List of logs for the job",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.Jobs.JobHistoryItemModel": {
                "required": [
                    "id",
                    "eventType",
                    "date",
                    "usedSchedulingTool"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "employeeId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "eventType": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "usedSchedulingTool": {
                        "$ref": "#/components/schemas/Jpm.Jobs.JobSchedulingTool"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.Jobs.JobSchedulingTool": {
                "enum": [
                    "Manual",
                    "SmartSchedule",
                    "SmartDispatch",
                    "TechnicianRouteOptimization"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Manual",
                    "SmartSchedule",
                    "SmartDispatch",
                    "TechnicianRouteOptimization"
                ]
            },
            "Jpm.V2.MessageResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The unique identifier of the message",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.MessageCreateRequest": {
                "required": [
                    "body",
                    "createdByEmployeeId"
                ],
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "Text content of a message"
                    },
                    "recipientIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of Users mentioned in this message",
                        "nullable": true
                    },
                    "parentMessageId": {
                        "type": "integer",
                        "description": "ID of a message this message is a reply to",
                        "format": "int64",
                        "nullable": true
                    },
                    "addParentMessageSenderToRecipients": {
                        "type": "boolean",
                        "description": "Set this to true if you want the author of Parent Message to be added to Recipients of this message  ",
                        "nullable": true
                    },
                    "createdByEmployeeId": {
                        "type": "integer",
                        "description": "ID of an employee who will be marked as author of this message",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.JobCanceledLogResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.JobCanceledLogResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.JobCanceledLogResponse": {
                "required": [
                    "id",
                    "jobId",
                    "reasonId",
                    "createdOn",
                    "createdById",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job canceled log",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job that has been canceled",
                        "format": "int64"
                    },
                    "reasonId": {
                        "type": "integer",
                        "description": "ID of the job cancel reason",
                        "format": "int64"
                    },
                    "memo": {
                        "type": "string",
                        "description": "Job canceled log additional comments",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job canceled log was created",
                        "format": "date-time"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who canceled the job",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the job canceled log is active"
                    }
                },
                "additionalProperties": false,
                "description": "JobCanceledLog response model"
            },
            "Jpm.V2.JobBookedLogResponse": {
                "required": [
                    "id",
                    "jobId",
                    "jobAppointmentId",
                    "start",
                    "createdOn",
                    "createdById",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job booked log",
                        "format": "int64"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "ID of the job that has been booked",
                        "format": "int64"
                    },
                    "jobAppointmentId": {
                        "type": "integer",
                        "description": "ID of the job that has been booked",
                        "format": "int64"
                    },
                    "start": {
                        "type": "string",
                        "description": "Start date/time (in UTC) of the job",
                        "format": "date-time"
                    },
                    "arrivalWindowStart": {
                        "type": "string",
                        "description": "Arrival window start date/time (in UTC) of the job",
                        "format": "date-time",
                        "nullable": true
                    },
                    "arrivalWindowEnd": {
                        "type": "string",
                        "description": "Arrival window end date/time (in UTC) of the job",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the job booked log was created",
                        "format": "date-time"
                    },
                    "createdById": {
                        "type": "integer",
                        "description": "ID of user who booked the job",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the job booked log is active"
                    }
                },
                "additionalProperties": false,
                "description": "JobBookedLog response model"
            },
            "PaginatedResponse_Of_Jpm.V2.CustomFieldTypeResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CustomFieldTypeResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.CustomFieldTypeResponse": {
                "required": [
                    "id",
                    "name",
                    "dataType",
                    "createdOn",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "dataType": {
                        "$ref": "#/components/schemas/Jpm.V2.CustomFieldDataType"
                    },
                    "dataTypeOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CustomFieldDataType": {
                "enum": [
                    "Text",
                    "Dropdown",
                    "Numeric"
                ],
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Text",
                    "Dropdown",
                    "Numeric"
                ]
            },
            "PaginatedResponse_Of_Jpm.V2.JobTypeResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.JobTypeResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.JobTypeResponse": {
                "required": [
                    "id",
                    "name",
                    "businessUnitIds",
                    "skills",
                    "tagTypeIds",
                    "priority",
                    "duration",
                    "class",
                    "summary",
                    "noCharge",
                    "invoiceSignaturesRequired",
                    "modifiedOn",
                    "externalData",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the job type",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the job type"
                    },
                    "businessUnitIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Business Unit Ids associated with job type"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of skills required to complete this job"
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Tags here will automatically be applied to jobs booked"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Level of urgency for this type of job"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Avg length of time for this job type",
                        "format": "int64"
                    },
                    "soldThreshold": {
                        "type": "number",
                        "description": "A job is considered as converted if subtotal meets or exceeds this threshold",
                        "format": "decimal",
                        "nullable": true
                    },
                    "class": {
                        "type": "string",
                        "description": "Let’s you group other job types by class"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Text that is automatically added to job summary when booked",
                        "format": "multiline"
                    },
                    "noCharge": {
                        "type": "boolean",
                        "description": "When true, all jobs are considered no charge"
                    },
                    "enforceRecurringServiceEventSelection": {
                        "type": "boolean",
                        "description": "When true enforce recurring service event",
                        "nullable": true
                    },
                    "invoiceSignaturesRequired": {
                        "type": "boolean",
                        "description": "When true signature is required"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when job type was last modified",
                        "format": "date-time"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this job type,\nthat corresponds to the application guid provided in the request."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "When true, job type is active"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CreateJobTypeRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the job type"
                    },
                    "businessUnitIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Business Unit Ids associated with job type",
                        "nullable": true
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of skills required to complete this job",
                        "nullable": true
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Tags here will automatically be applied to jobs booked",
                        "nullable": true
                    },
                    "priority": {
                        "type": "string",
                        "description": "Level of urgency for this type of job",
                        "nullable": true
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Avg length of time for this job type",
                        "format": "int32",
                        "nullable": true
                    },
                    "soldThreshold": {
                        "type": "number",
                        "description": "A job is considered as converted if subtotal meets or exceeds this threshold",
                        "format": "decimal",
                        "nullable": true
                    },
                    "class": {
                        "type": "string",
                        "description": "Let’s you group other job types by class",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "description": "Text that is automatically added to job summary when booked",
                        "format": "multiline",
                        "nullable": true
                    },
                    "noCharge": {
                        "type": "boolean",
                        "description": "When true, all jobs are considered no charge",
                        "nullable": true
                    },
                    "enforceRecurringServiceEventSelection": {
                        "type": "boolean",
                        "description": "When true enforce recurring service event",
                        "nullable": true
                    },
                    "invoiceSignaturesRequired": {
                        "type": "boolean",
                        "description": "When true signature is required",
                        "nullable": true
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataCreateRequest"
                            }
                        ],
                        "description": "Optional model that contains a list of external data items\nthat should be attached to this job type.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.UpdateJobTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the job type"
                    },
                    "businessUnitIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Business Unit Ids associated with job type"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of skills required to complete this job"
                    },
                    "tagTypeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "Tags here will automatically be applied to jobs booked"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Level of urgency for this type of job"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Avg length of time for this job type",
                        "format": "int32"
                    },
                    "soldThreshold": {
                        "type": "number",
                        "description": "A job is considered as converted if subtotal meets or exceeds this threshold",
                        "format": "decimal",
                        "nullable": true
                    },
                    "class": {
                        "type": "string",
                        "description": "Let’s you group other job types by class"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Text that is automatically added to job summary when booked"
                    },
                    "noCharge": {
                        "type": "boolean",
                        "description": "When true, all jobs are considered no charge"
                    },
                    "enforceRecurringServiceEventSelection": {
                        "type": "boolean",
                        "description": "When true enforce recurring service event"
                    },
                    "invoiceSignaturesRequired": {
                        "type": "boolean",
                        "description": "When true signature is required"
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "External data update model "
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ProjectResponse": {
                "required": [
                    "id",
                    "number",
                    "customerId",
                    "locationId",
                    "projectManagerIds",
                    "businessUnitIds",
                    "createdOn",
                    "customFields",
                    "externalData",
                    "jobIds"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the project",
                        "format": "int64"
                    },
                    "number": {
                        "type": "string",
                        "description": "Project number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "description": "Project summary",
                        "format": "html",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Project status",
                        "nullable": true
                    },
                    "statusId": {
                        "type": "integer",
                        "description": "Project status id",
                        "format": "int64",
                        "nullable": true
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "Project substatus",
                        "nullable": true
                    },
                    "subStatusId": {
                        "type": "integer",
                        "description": "Project substatus id",
                        "format": "int64",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the project's customer",
                        "format": "int64"
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the project's location",
                        "format": "int64"
                    },
                    "projectTypeId": {
                        "type": "integer",
                        "description": "ID of the project's type",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectManagerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of project managers for the project."
                    },
                    "businessUnitIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of business units for the project."
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "targetCompletionDate": {
                        "type": "string",
                        "description": "Target completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualCompletionDate": {
                        "type": "string",
                        "description": "Actual completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Projects last modification date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when the project was created",
                        "format": "date-time"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldApiModel"
                        },
                        "description": "Custom fields on the project"
                    },
                    "externalData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ExternalDataModel"
                        },
                        "description": "List of external data attached to this project,\nthat corresponds to the application guid provided in the request."
                    },
                    "jobIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "List of jobs associated with this project."
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.ProjectResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ProjectResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.CreateProjectRequest": {
                "required": [
                    "locationId"
                ],
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "integer",
                        "description": "ID of the project's location",
                        "format": "int64"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "ID of the project's customer",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectTypeId": {
                        "type": "integer",
                        "description": "ID of the project's type",
                        "format": "int64",
                        "nullable": true
                    },
                    "projectManagerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of the project's managers",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string",
                        "description": "Project summary",
                        "format": "html",
                        "nullable": true
                    },
                    "statusId": {
                        "type": "integer",
                        "description": "Project status id",
                        "format": "int64",
                        "nullable": true
                    },
                    "subStatusId": {
                        "type": "integer",
                        "description": "Project sub status id",
                        "format": "int64",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "targetCompletionDate": {
                        "type": "string",
                        "description": "Target completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "actualCompletionDate": {
                        "type": "string",
                        "description": "Actual completion date of the project",
                        "format": "date-time",
                        "nullable": true
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CustomFieldCreateOrUpdateModel"
                        },
                        "description": "Project record’s custom fields",
                        "nullable": true
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataCreateRequest"
                            }
                        ],
                        "description": "Optional model that contains a list of external data items\nthat should be attached to this project.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.CustomFieldCreateOrUpdateModel": {
                "required": [
                    "typeId",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "typeId": {
                        "type": "integer",
                        "description": "ID of the custom field",
                        "format": "int64"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the custom field"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.UpdateProjectRequest": {
                "type": "object",
                "properties": {
                    "projectManagerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of the project's managers"
                    },
                    "jobIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "IDs of the project's jobs"
                    },
                    "name": {
                        "type": "string",
                        "description": "Project name"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Project summary",
                        "format": "html"
                    },
                    "statusId": {
                        "type": "integer",
                        "description": "Project status id",
                        "format": "int64"
                    },
                    "subStatusId": {
                        "type": "integer",
                        "description": "Project sub status id",
                        "format": "int64"
                    },
                    "projectTypeId": {
                        "type": "integer",
                        "description": "Project type id",
                        "format": "int64",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the project",
                        "format": "date-time"
                    },
                    "targetCompletionDate": {
                        "type": "string",
                        "description": "Target completion date of the project",
                        "format": "date-time"
                    },
                    "actualCompletionDate": {
                        "type": "string",
                        "description": "Actual completion date of the project",
                        "format": "date-time"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.CustomFieldCreateOrUpdateModel"
                        },
                        "description": "Project record’s custom fields"
                    },
                    "externalData": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Jpm.V2.ExternalDataUpdateRequest"
                            }
                        ],
                        "description": "External data update model."
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ProjectNoteCreateRequest": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Text content of job note"
                    },
                    "pinToTop": {
                        "type": "boolean",
                        "description": "Whether to pin job note to the top",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.ProjectStatusResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ProjectStatusResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.ProjectStatusResponse": {
                "required": [
                    "id",
                    "name",
                    "order",
                    "modifiedOn"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the project status",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the project status"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Order of the project status",
                        "format": "int32"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when project status was last modified",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.ProjectSubStatusResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ProjectSubStatusResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            },
            "Jpm.V2.ProjectSubStatusResponse": {
                "required": [
                    "id",
                    "name",
                    "statusId",
                    "order",
                    "modifiedOn",
                    "active"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID of the project sub status",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the project sub status"
                    },
                    "statusId": {
                        "type": "integer",
                        "description": "Id of the parent status",
                        "format": "int64"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Order of the project status",
                        "format": "int32"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Date/time (in UTC) when project sub status was last modified",
                        "format": "date-time"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "When true, project sub status is active"
                    }
                },
                "additionalProperties": false
            },
            "Jpm.V2.ProjectTypeResponse": {
                "required": [
                    "id",
                    "name",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdById": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaginatedResponse_Of_Jpm.V2.ProjectTypeResponse": {
                "required": [
                    "page",
                    "pageSize",
                    "hasMore",
                    "data"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "From which page this output has started",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Page size for this query (i.e. how many records were requested to return)",
                        "format": "int32"
                    },
                    "hasMore": {
                        "type": "boolean",
                        "description": "True if there are more records in the query than returned in this result"
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of records for this query (can optionally be populated)",
                        "format": "int32",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Jpm.V2.ProjectTypeResponse"
                        },
                        "description": "The collection of result items, will never have more than PageSize items"
                    }
                },
                "additionalProperties": false,
                "description": "Represents paginated API response."
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "ST-App-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "servicetitanapplicationkey",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}